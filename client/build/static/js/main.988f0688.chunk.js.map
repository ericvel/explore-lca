{"version":3,"sources":["interfaces/enums.ts","styles/theme.tsx","redux/actions/index.ts","redux/actions/buildingActions.ts","redux/actions/types.ts","redux/actions/uiActions.ts","redux/actions/elementAndMaterialActions.ts","redux/actions/settingsActions.ts","redux/actions/userActions.ts","components/TableUtilities/Formatters.tsx","components/BuildingsTable/ColumnData.tsx","components/LoadingIndicator/LoadingIndicator.tsx","components/AlertSnackbar/AlertSnackbar.tsx","components/BuildingsTable/BuildingsTable.tsx","services/firebase_config.js","services/firebase.tsx","components/MaterialsContainer/BuildingElementsView/ElementsTable/ColumnData.tsx","helpers/materialHelpers.tsx","components/MaterialsContainer/BuildingElementsView/ElementsTable/ElementsTable.tsx","components/ChartComponents/index.tsx","components/MaterialsContainer/BuildingElementsView/ElementsChart/ElementsChart.tsx","components/MaterialsContainer/ProductView/ProductTable/ColumnData.tsx","components/TableUtilities/CustomCells.tsx","helpers/simulationHelpers.tsx","components/TableUtilities/EditPlugin.tsx","components/MaterialsContainer/ProductView/ProductTable/ProductTable.tsx","components/MaterialsContainer/ProductView/ProductChart/ProductChart.tsx","components/MaterialsContainer/ProductView/ProductView.tsx","components/MaterialsContainer/BuildingElementsView/BuildingElementsView.tsx","components/MaterialsContainer/CategoryView/CategoryTable/ColumnData.tsx","components/MaterialsContainer/CategoryView/CategoryTable/CustomCells.tsx","components/MaterialsContainer/CategoryView/CategoryTable/CategoryTable.tsx","components/MaterialsContainer/CategoryView/CategoryChart/CategoryChart.tsx","components/MaterialsContainer/CategoryView/CategoryView.tsx","components/SimulationModeSwitch/SimulationModeSwitch.tsx","components/MaterialsContainer/MaterialsContainer.tsx","components/BuildingDetails/SingleBuildingView/SingleBuildingChart/SingleBuildingChart.tsx","components/SettingsButton/SettingsButton.tsx","components/BuildingDetails/SingleBuildingView/SingleBuildingView.tsx","components/BuildingDetails/MultipleBuildingsView/MultipleBuildingsChart/MultipleBuildingsChart.tsx","components/BuildingDetails/MultipleBuildingsView/MultipleBuildingsView.tsx","components/BuildingDetails/BuildingDetails.tsx","components/HelpButton/HelpButton.tsx","components/HomePage/HomePage.tsx","components/SignIn/SignIn.tsx","components/App/App.tsx","serviceWorker.js","redux/reducers/elementsAndMaterials.ts","redux/reducers/settings.ts","redux/reducers/index.ts","redux/reducers/buildings.ts","redux/reducers/flags.ts","redux/reducers/ui.ts","redux/reducers/user.ts","index.js"],"names":["GroupBy","LCAPhaseTooltip","theme","createMuiTheme","palette","simulated","main","light","dark","reducedEmission","allActions","buildingActions","setBuildings","buildings","type","payload","selectBuildings","deselectAllBuildings","uiActions","setMaterialsGroupBy","groupBy","setDisplayMode","displayMode","toggleCanSelectMultiple","toggleSimulationMode","elementAndMaterialActions","setBuildingElements","buildingElements","setMaterialInventory","materialInventory","selectBuildingElement","buildingElement","addToElementRoute","route","setElementRoute","hoverBuildingElement","elementId","stopHoverBuildingElement","setSimulatedData","simulatedData","setMaterialProducts","materialProducts","setSimulatedMaterialProducts","simulatedMaterialProducts","settingsActions","setEEMetric","eeMetric","name","checked","userActions","setCurrentUser","user","makeStyles","createStyles","simulatedField","color","DecimalFormatter","value","parseFloat","toLocaleString","DecimalTypeProvider","props","formatterComponent","BoldFormatter","BoldTypeProvider","SortLabel","getMessage","column","restProps","message","A1A3","A4","B4","B4m","B4t","B6","B7","ColumnData","columns","title","columnExtensions","columnName","width","wordWrapEnabled","defaultHiddenColumnNames","tableColumnVisibilityColumnExtensions","togglingEnabled","LoadingIndicator","className","CircularProgress","size","thickness","AlertSnackbar","React","useState","open","setOpen","handleClose","event","reason","Snackbar","autoHideDuration","onClose","Alert","severity","elevation","variant","useStyles","selected","backgroundColor","customRow","cursor","backdropFilter","filter","getRowId","row","Object","keys","Root","style","height","CustomTableRow","highlighted","selectByRowClick","onToggle","classes","Row","classNames","onClick","e","stopPropagation","CustomFixedCell","Cell","getHiddenColumnsFilteringExtensions","hiddenColumnNames","map","predicate","BuildingsTable","dispatch","useDispatch","useSelector","state","loading","setLoading","error","setError","setSearchTerm","TableSelection","COLUMN_TYPE","leftColumns","multipleSwitchChecked","canSelectMultipleBuildings","decimalColumns","handleErrors","response","ok","Error","statusText","useEffect","loadData","URL","process","console","log","fetch","then","json","data","catch","delayedCallback","useCallback","_","debounce","filteringColumnExtensions","setFilteringColumnExtensions","selectedRow","setSelectedRow","Paper","rows","rootComponent","for","onValueChange","selection","onSelectionChange","selectedBuildings","building","includes","idbuildings","lastSelected","find","indexOf","undefined","rowId","length","showSortingControls","sortLabelComponent","highlightRow","showSelectionColumn","rowComponent","cellComponent","onHiddenColumnNamesChange","FormControlLabel","control","Switch","onChange","label","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firebase","initializeApp","auth","firestore","db","getSimulatedDataFromDb","buildingId","username","currentUser","email","collection","doc","get","getChildElements","parentElement","childElements","element","idparent","idlevels","getElementMaterials","elementMaterials","material","idbuilding_elements","wrapArgumentAxisLabel","wordArray","split","breakPoint","Math","ceil","slice","join","sortByEE","chartData","sort","a","b","B4_m","B4_t","createMaterialChartData","materials","idmaterials","sourceType","RSL_mi","source","dataType","dataYear","density","EEf_A1A3","RSL","comments","parentId","groupByMaterial","materialsGrouped","reduce","res","idmaterialInventory","quantity","buildingElementName","push","mergeSimulatedDataIntoMaterialProducts","materialRows","changedRows","ElementsTable","selectedBuildingElement","boldColumns","handleRowClick","commandComponents","edit","onExecute","Tooltip","IconButton","onCommitChanges","id","showEditCommand","commandComponent","CommandButton","customizeHint","seriesName","chart","padding","spacing","argumentAxisLabel","fill","ElementsChart","chartRef","useRef","renderOptions","force","animate","resizeObserver","ResizeObserver","entries","current","instance","render","resizedContainerRef","container","observe","disconnect","setChartData","forEach","dataEntry","String","Number","sortedChartData","ref","dataSource","rotated","onPointClick","point","target","clickedElementId","el","onDrawn","querySelectorAll","querySelector","childNodes","argumentField","barWidth","hoverMode","valueField","text","font","customizeText","verticalAlignment","horizontalAlignment","itemTextPosition","enabled","location","customizeTooltip","arg","valueText","zIndex","arrowLength","format","interactive","groupSummaryItems","showInGroupFooter","alignByColumn","editingStateColumnExtensions","editingEnabled","EditCell","cell","indentCell","groupButton","lookupEditCell","inputRoot","selectMenu","position","editCell","paddingTop","paddingBottom","paddingLeft","paddingRight","reducedEmissionTooltip","children","SimulatedFieldCell","fontWeight","roundTo","num","places","factor","round","calculatePercentageChange","originalValue","simulatedValue","toFixed","labelAsterisk","fontSize","subtitleAsterisk","dialogContent","overflow","reducedEmissionAdornment","sourceTypes","Popup","onApplyChanges","onCancelChanges","originalRow","setOriginalRow","setSourceType","setA1A3","setPercentageChange","nonSimulatedRow","product","Dialog","fullWidth","maxWidth","DialogTitle","disableTypography","Typography","component","noWrap","display","Grid","item","xs","FormGroup","TextField","select","required","margin","reductionFactorId","emissionNumber","reductionId","reductionFactor","reduceEmissionNumber","textFieldEvent","InputLabelProps","asterisk","option","MenuItem","key","disabled","enterDelay","placement","InputProps","endAdornment","InputAdornment","DialogActions","Button","PopupEditing","memo","popupComponent","editedRow","editingRowIds","createRowChange","rowChanges","changeRow","commitChangedRows","stopEditRows","cancelChangedRows","targetRow","rowIds","changeArgs","change","Command","CustomTreeCell","ProductTable","isSimulationModeActive","setRows","expandedRowIds","setExpandedRowIds","TableEditColumn","leftFixedColumns","onExpandedRowIdsChange","getChildRows","rootRows","childRows","r","changed","changedRowId","values","updatedSimulatedData","getKeyValue","updatedSimulatedMaterialProducts","set","writeSimulatedDataToDb","MaterialProductCell","ProductChart","visualRange","setVisualRange","range","labelText","spans","subEl","innerHTML","labelToMaterialId","onOptionChanged","fullName","visible","argumentAxis","ProductView","tableData","setTableData","groupedMaterials","m","FU","treeData","concat","breadCrumbs","marginTop","infoIcon","secondary","infoContainer","marginBottom","infoIconGridItem","StyledBreadcrumb","withStyles","root","grey","typography","fontWeightRegular","boxShadow","shadows","emphasize","Chip","StyledBreadcrumbActive","BuildingElementsView","elementRoute","buildingElementRoute","rootElement","hierarchy","poppedRouteItem","setPoppedRouteItem","alignItems","tempRoute","pop","Breadcrumbs","index","icon","handleBreadcrumbClick","justify","align","Fragment","GroupCell","colSpan","expanded","tableRow","tableColumn","contentComponent","iconComponent","indentCellComponent","inlineSummaryComponent","inlineSummaryItemComponent","summaryCellComponent","summaryItemComponent","containerComponent","inlineSummaries","styles","TableCell","SummaryCell","tooltipTitle","columnSummaries","CategoryTable","grouping","groupItems","calculator","getValue","firstRowValue","every","v","IntegratedSummary","defaultCalculator","formattedValue","overflowX","button","top","left","CategoryChart","isFirstLevel","setIsFirstLevel","selectedCategory","setSelectedCategory","chartHeight","setChartHeight","parentRows","filterData","materialCat","originalArgument","weight","family","bottom","right","CategoryView","elementTable","materialChildRows","categoryParentRows","groupByCategory","CustomSwitch","switchBase","track","SimulationModeSwitch","materialsGroupBy","Product","formControl","marginRight","minWidth","verticalDivider","MaterialsContainer","setTooltipOpen","handleTooltip","isOpen","elementQuery","inventoryQuery","Promise","all","responses","exists","ReactDOM","unstable_batchedUpdates","direction","Divider","orientation","flexItem","disableFocusListener","disableHoverListener","disableTouchListener","FormControl","InputLabel","Select","displayEmpty","onMouseEnter","onMouseLeave","onOpen","BuildingElement","Category","FormLabel","RadioGroup","Radio","parentIsLoading","Skeleton","SingleBuildingChart","checkedEEMetrics","EEMetric","emissionValues","setEmissionValues","nonSimulatedValues","isSeriesSimulated","sumMaterialEmissions","perSqM","floor_area","perYear","lifetime","lcaPhase","gwp","series","some","labelToFieldname","seriesLabel","axisTitle","fieldName","showInLegend","ignoreEmptyPoints","nameField","argument","percentageChange","fontColor","content","SettingsButton","anchorEl","setAnchorEl","handleEEMetricChange","aria-label","currentTarget","iconSize","Menu","keepMounted","Boolean","PaperProps","ListSubheader","ListItem","ListItemText","primary","ListItemSecondaryAction","edge","buildingSection","divider","materialSection","buildingInfoLabels","heading","SingleBuildingView","building_identifier","building_name","project","typology","construction_type","gutterBottom","inputProps","readOnly","disableUnderline","defaultValue","MultipleBuildingsChart","identifier","a1a3","a4","b4m","b4t","reverse","MultipleBuildingsView","elementSection","noSelectionContainer","drawer","flexShrink","drawerPaper","overflowY","BuildingDetails","DialogContent","closeButton","middleDivider","other","MuiDialogContent","MuiDialogActions","terminologyDictionary","term","definition","HelpButton","List","entry","autoFocus","titleBar","boxSizing","HomePage","minSize","Copyright","href","Date","getFullYear","paper","flexDirection","avatar","form","submit","SignIn","setEmail","password","setPassword","onChangeHandler","Container","CssBaseline","Avatar","noValidate","onSubmit","preventDefault","autoComplete","setPersistence","Auth","Persistence","SESSION","signInWithEmailAndPassword","code","signInWithEmailAndPasswordHandler","Box","mt","App","isAuthenticated","setIsAuthenticated","onAuthStateChanged","ThemeProvider","window","hostname","match","initialSelectedElementState","initialEEMetric","rootReducer","combineReducers","action","isCompareDialogOpen","hoveredBuildingElement","require","config","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.988f0688.chunk.js","sourcesContent":["export enum GroupBy {\r\n  Category = \"category\",\r\n  BuildingElement = \"buildingElement\",\r\n  Product = \"product\",\r\n}\r\n\r\nexport enum LCAPhaseTooltip {\r\n  A1A3 = \"Material production\",\r\n  A4 = \"Transportation to building site\",\r\n  B4 = \"Replacement\",\r\n  B4m = \"Material replacements\",\r\n  B4t = \"Transportation of material replacements\",\r\n  B6 = \"Operational energy use\",\r\n  B7 = \"Operational water use\"\r\n}","import orange from \"@material-ui/core/colors/orange\";\r\nimport { createMuiTheme } from \"@material-ui/core/styles\";\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    simulated: {\r\n      main: \"#ef6c00\",\r\n      light: \"#ff9d3f\",\r\n      dark: \"#b53d00\",\r\n    },\r\n    reducedEmission: {\r\n      main: \"#59bf6d\",\r\n      light: \"#8cf29c\",\r\n      dark: \"#208e40\"\r\n    }\r\n  },\r\n});\r\n\r\nexport default theme;\r\n","import buildingActions from \"./buildingActions\";\r\nimport uiActions from \"./uiActions\";\r\nimport elementAndMaterialActions from \"./elementAndMaterialActions\";\r\nimport settingsActions from \"./settingsActions\";\r\nimport userActions from \"./userActions\";\r\n\r\nconst allActions = {\r\n  buildingActions,\r\n  uiActions,\r\n  elementAndMaterialActions,\r\n  settingsActions,\r\n  userActions\r\n};\r\n\r\nexport default allActions;\r\n","import {\r\n  SET_BUILDINGS,\r\n  BuildingActionTypes,\r\n  SELECT_BUILDINGS,\r\n  DESELECT_ALL_BUILDINGS,\r\n  SelectedBuildingActionTypes,\r\n} from \"./types\";\r\n\r\nconst setBuildings = (buildings: IBuilding[]): BuildingActionTypes => {\r\n  return {\r\n    type: SET_BUILDINGS,\r\n    payload: buildings,\r\n  };\r\n};\r\n\r\nconst selectBuildings = (\r\n  buildings: IBuilding[]\r\n): SelectedBuildingActionTypes => {\r\n  return {\r\n    type: SELECT_BUILDINGS,\r\n    payload: buildings,\r\n  };\r\n};\r\n\r\nconst deselectAllBuildings = (): SelectedBuildingActionTypes => {\r\n  return {\r\n    type: DESELECT_ALL_BUILDINGS,\r\n  };\r\n};\r\n\r\nexport default {\r\n  setBuildings,\r\n  selectBuildings,\r\n  deselectAllBuildings,\r\n};\r\n","import firebase from \"firebase/app\";\r\n\r\nexport const SET_BUILDINGS = \"SET_BUILDINGS\";\r\n\r\nexport const SELECT_BUILDINGS = \"SELECT_BUILDINGS\";\r\nexport const DESELECT_ALL_BUILDINGS = \"DESELECT_ALL_BUILDINGS\";\r\n\r\nexport const SET_BUILDING_ELEMENTS = \"SET_BUILDING_ELEMENTS\";\r\nexport const SET_MATERIAL_INVENTORY = \"SET_MATERIAL_INVENTORY\";\r\nexport const SELECT_BUILDING_ELEMENT = \"SELECT_BUILDING_ELEMENT\";\r\n\r\nexport const ADD_TO_ELEMENT_ROUTE = \"ADD_TO_ELEMENT_ROUTE\";\r\nexport const SET_BUILDING_ELEMENT_ROUTE = \"SET_BUILDING_ELEMENT_ROUTE\";\r\n\r\nexport const TOGGLE_CAN_SELECT_MULTIPLE = \"TOGGLE_CAN_SELECT_MULTIPLE\";\r\nexport const TOGGLE_COMPARE_DIALOG_OPEN = \"TOGGLE_COMPARE_DIALOG_OPEN\";\r\n\r\nexport const HOVER_BUILDING_ELEMENT = \"HOVER_BUILDING_ELEMENT\";\r\nexport const STOP_HOVER_BUILDING_ELEMENT = \"STOP_HOVER_BUILDING_ELEMENT\";\r\n\r\nexport const SET_MATERIALS_GROUP_BY = \"SET_CONTENT_TYPE\";\r\nexport const SET_DISPLAY_MODE = \"SET_DISPLAY_MODE\";\r\n\r\nexport const SET_EE_METRIC = \"SET_EE_METRIC\";\r\n\r\nexport const TOGGLE_SIMULATION_MODE = \"TOGGLE_SIMULATION_MODE\";\r\nexport const SET_SIMULATED_DATA = \"SET_SIMULATED_DATA\";\r\n\r\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";\r\n\r\nexport const SET_MATERIAL_PRODUCTS = \"SET_MATERIAL_PRODUCTS\";\r\nexport const SET_SIMULATED_MATERIAL_PRODUCTS = \"SET_SIMULATED_MATERIAL_PRODUCTS\";\r\n\r\ninterface SetBuildingsAction {\r\n  type: typeof SET_BUILDINGS;\r\n  payload: IBuilding[];\r\n}\r\n\r\ninterface SelectBuildingsAction {\r\n  type: typeof SELECT_BUILDINGS;\r\n  payload: IBuilding[];\r\n}\r\n\r\ninterface DeselectAllBuildingsAction {\r\n  type: typeof DESELECT_ALL_BUILDINGS;\r\n}\r\n\r\ninterface SetBuildingElementsAction {\r\n  type: typeof SET_BUILDING_ELEMENTS;\r\n  payload: IBuildingElement[];\r\n}\r\n\r\ninterface SetMaterialInventoryAction {\r\n  type: typeof SET_MATERIAL_INVENTORY;\r\n  payload: IMaterialInventory[];\r\n}\r\n\r\nexport interface SelectBuildingElementAction {\r\n  type: typeof SELECT_BUILDING_ELEMENT;\r\n  payload: IBuildingElement;\r\n}\r\n\r\ninterface AddToElementRouteAction {\r\n  type: typeof ADD_TO_ELEMENT_ROUTE;\r\n  payload: IBuildingElement;\r\n}\r\n\r\ninterface SetElementRouteAction {\r\n  type: typeof SET_BUILDING_ELEMENT_ROUTE;\r\n  payload: IBuildingElement[];\r\n}\r\n\r\ninterface ToggleCanSelectMultipleAction {\r\n  type: typeof TOGGLE_CAN_SELECT_MULTIPLE;\r\n}\r\n\r\nexport type ToggleCompareDialogOpenAction = {\r\n  type: typeof TOGGLE_COMPARE_DIALOG_OPEN;\r\n};\r\n\r\ninterface HoverBuildingElementAction {\r\n  type: typeof HOVER_BUILDING_ELEMENT;\r\n  payload: number;\r\n}\r\n\r\ninterface StopHoverBuildingElementAction {\r\n  type: typeof STOP_HOVER_BUILDING_ELEMENT;\r\n  payload: number;\r\n}\r\n\r\ninterface SetMaterialsGroupByAction {\r\n  type: typeof SET_MATERIALS_GROUP_BY;\r\n  payload: string;\r\n}\r\n\r\ninterface SetDisplayModeAction {\r\n  type: typeof SET_DISPLAY_MODE;\r\n  payload: string;\r\n}\r\n\r\ninterface SetEEMetricAction {\r\n  type: typeof SET_EE_METRIC;\r\n  name: string;\r\n  checked: boolean;\r\n}\r\n\r\ninterface ToggleSimulationModeAction {\r\n  type: typeof TOGGLE_SIMULATION_MODE;\r\n}\r\n\r\ninterface SetSimulatednDataAction {\r\n  type: typeof SET_SIMULATED_DATA;\r\n  payload: ISimulatedData;\r\n}\r\n\r\ninterface SetCurrentUserAction {\r\n  type: typeof SET_CURRENT_USER;\r\n  payload: firebase.User | null;\r\n}\r\n\r\ninterface SetMaterialProductsAction {\r\n  type: typeof SET_MATERIAL_PRODUCTS;\r\n  payload: IMaterialTableParentRow[];\r\n}\r\n\r\ninterface SetSimulatedMaterialProductsAction {\r\n  type: typeof SET_SIMULATED_MATERIAL_PRODUCTS;\r\n  payload: IMaterialTableParentRow[];\r\n}\r\n\r\nexport type BuildingActionTypes = SetBuildingsAction;\r\nexport type SelectedBuildingActionTypes =\r\n  | SelectBuildingsAction\r\n  | DeselectAllBuildingsAction;\r\nexport type BuildingElementActionTypes = SetBuildingElementsAction;\r\nexport type MaterialInventoryActionTypes = SetMaterialInventoryAction;\r\nexport type ElementRouteActionTypes =\r\n  | AddToElementRouteAction\r\n  | SetElementRouteAction;\r\nexport type HoverBuildingElementActionTypes =\r\n  | HoverBuildingElementAction\r\n  | StopHoverBuildingElementAction;\r\nexport type MaterialsGroupByActionTypes = SetMaterialsGroupByAction;\r\nexport type DisplayModeActionTypes = SetDisplayModeAction;\r\nexport type CanSelectMultipleActionTypes = ToggleCanSelectMultipleAction;\r\nexport type EEMetricActionTypes = SetEEMetricAction;\r\nexport type SimulationModeActionTypes = ToggleSimulationModeAction;\r\nexport type SimulatedDataActionTypes = SetSimulatednDataAction;\r\nexport type CurrentUserActionTypes = SetCurrentUserAction;\r\nexport type MaterialProductsActionTypes = SetMaterialProductsAction;\r\nexport type SimulatedMaterialProductsActionTypes = SetSimulatedMaterialProductsAction;\r\n","import {\r\n  SET_MATERIALS_GROUP_BY,\r\n  MaterialsGroupByActionTypes,\r\n  SET_DISPLAY_MODE,\r\n  DisplayModeActionTypes,\r\n  TOGGLE_CAN_SELECT_MULTIPLE,\r\n  CanSelectMultipleActionTypes,\r\n  TOGGLE_SIMULATION_MODE,\r\n  SimulationModeActionTypes\r\n} from \"./types\";\r\n\r\nconst setMaterialsGroupBy = (groupBy: string): MaterialsGroupByActionTypes => {\r\n  return {\r\n    type: SET_MATERIALS_GROUP_BY,\r\n    payload: groupBy,\r\n  };\r\n};\r\n\r\nconst setDisplayMode = (displayMode: string): DisplayModeActionTypes => {\r\n  return {\r\n    type: SET_DISPLAY_MODE,\r\n    payload: displayMode,\r\n  };\r\n};\r\n\r\nconst toggleCanSelectMultiple = (): CanSelectMultipleActionTypes => {\r\n  return {\r\n    type: TOGGLE_CAN_SELECT_MULTIPLE,\r\n  };\r\n};\r\n\r\nconst toggleSimulationMode = (): SimulationModeActionTypes => {\r\n  return {\r\n    type: TOGGLE_SIMULATION_MODE,\r\n  };\r\n};\r\n\r\nexport default {\r\n  setMaterialsGroupBy,\r\n  setDisplayMode,\r\n  toggleCanSelectMultiple,\r\n  toggleSimulationMode\r\n};\r\n","import {\r\n  SET_BUILDING_ELEMENTS,\r\n  SET_MATERIAL_INVENTORY,\r\n  SELECT_BUILDING_ELEMENT,\r\n  SET_BUILDING_ELEMENT_ROUTE,\r\n  ADD_TO_ELEMENT_ROUTE,\r\n  HOVER_BUILDING_ELEMENT,\r\n  STOP_HOVER_BUILDING_ELEMENT,\r\n  SET_SIMULATED_DATA,\r\n  SET_MATERIAL_PRODUCTS,\r\n  SET_SIMULATED_MATERIAL_PRODUCTS,\r\n  BuildingElementActionTypes,\r\n  MaterialInventoryActionTypes,\r\n  SelectBuildingElementAction,\r\n  ElementRouteActionTypes,\r\n  HoverBuildingElementActionTypes,\r\n  SimulatedDataActionTypes,\r\n  MaterialProductsActionTypes,\r\n  SimulatedMaterialProductsActionTypes\r\n} from \"./types\";\r\n\r\nconst setBuildingElements = (\r\n  buildingElements: IBuildingElement[]\r\n): BuildingElementActionTypes => {\r\n  return {\r\n    type: SET_BUILDING_ELEMENTS,\r\n    payload: buildingElements,\r\n  };\r\n};\r\n\r\nconst setMaterialInventory = (\r\n  materialInventory: IMaterialInventory[]\r\n): MaterialInventoryActionTypes => {\r\n  return {\r\n    type: SET_MATERIAL_INVENTORY,\r\n    payload: materialInventory,\r\n  };\r\n};\r\nconst selectBuildingElement = (\r\n  buildingElement: IBuildingElement\r\n): SelectBuildingElementAction => {\r\n  return {\r\n    type: SELECT_BUILDING_ELEMENT,\r\n    payload: buildingElement,\r\n  };\r\n};\r\n\r\nconst addToElementRoute = (\r\n  route: IBuildingElement\r\n): ElementRouteActionTypes => {\r\n  return {\r\n    type: ADD_TO_ELEMENT_ROUTE,\r\n    payload: route,\r\n  };\r\n};\r\n\r\nconst setElementRoute = (\r\n  route: IBuildingElement[]\r\n): ElementRouteActionTypes => {\r\n  return {\r\n    type: SET_BUILDING_ELEMENT_ROUTE,\r\n    payload: route,\r\n  };\r\n};\r\n\r\nconst hoverBuildingElement = (\r\n  elementId: number\r\n): HoverBuildingElementActionTypes => {\r\n  return {\r\n    type: HOVER_BUILDING_ELEMENT,\r\n    payload: elementId,\r\n  };\r\n};\r\n\r\nconst stopHoverBuildingElement = (\r\n  elementId: number\r\n): HoverBuildingElementActionTypes => {\r\n  return {\r\n    type: STOP_HOVER_BUILDING_ELEMENT,\r\n    payload: elementId,\r\n  };\r\n};\r\n\r\nconst setSimulatedData = (\r\n  simulatedData: ISimulatedData\r\n): SimulatedDataActionTypes => {\r\n  return {\r\n    type: SET_SIMULATED_DATA,\r\n    payload: simulatedData,\r\n  };\r\n};\r\n\r\nconst setMaterialProducts = (\r\n  materialProducts: IMaterialTableParentRow[]\r\n): MaterialProductsActionTypes => {\r\n  return {\r\n    type: SET_MATERIAL_PRODUCTS,\r\n    payload: materialProducts,\r\n  };\r\n};\r\n\r\nconst setSimulatedMaterialProducts = (\r\n  simulatedMaterialProducts: IMaterialTableParentRow[]\r\n): SimulatedMaterialProductsActionTypes => {\r\n  return {\r\n    type: SET_SIMULATED_MATERIAL_PRODUCTS,\r\n    payload: simulatedMaterialProducts,\r\n  };\r\n};\r\n\r\nexport default {\r\n  setBuildingElements,\r\n  setMaterialInventory,\r\n  selectBuildingElement,\r\n  addToElementRoute,\r\n  setElementRoute,\r\n  hoverBuildingElement,\r\n  stopHoverBuildingElement,\r\n  setSimulatedData,\r\n  setMaterialProducts,\r\n  setSimulatedMaterialProducts\r\n};\r\n","import { SET_EE_METRIC, EEMetricActionTypes } from \"./types\";\r\n\r\nconst setEEMetric = (eeMetric: IEEMetricData): EEMetricActionTypes => {\r\n  return {\r\n    type: SET_EE_METRIC,\r\n    name: eeMetric.name,\r\n    checked: eeMetric.checked,\r\n  };\r\n};\r\n\r\nexport default {\r\n  setEEMetric,\r\n};\r\n","import firebase from \"firebase/app\";\r\nimport {\r\n  SET_CURRENT_USER,\r\n  CurrentUserActionTypes,\r\n} from \"./types\";\r\n\r\nconst setCurrentUser = (user: firebase.User | null): CurrentUserActionTypes => {\r\n  return {\r\n    type: SET_CURRENT_USER,\r\n    payload: user,\r\n  };\r\n};\r\n\r\nexport default {\r\n  setCurrentUser,\r\n};\r\n","import React from \"react\";\r\nimport { DataTypeProvider } from \"@devexpress/dx-react-grid\";\r\nimport { LCAPhaseTooltip } from \"interfaces/enums\";\r\nimport { TableHeaderRow } from \"@devexpress/dx-react-grid-material-ui\";\r\nimport { Theme, createStyles, makeStyles } from \"@material-ui/core/styles\";\r\nimport theme from \"styles/theme\";\r\n\r\nconst useStyles = makeStyles((/* theme: Theme */) =>\r\n  createStyles({\r\n    simulatedField: {\r\n      color: theme.palette.simulated.main,\r\n      // fontWeight: \"bolder\",\r\n    },\r\n  }));\r\n\r\nconst DecimalFormatter = ({ value }: any) =>\r\n  value ? parseFloat(value).toLocaleString() : 0;\r\n\r\nexport const DecimalTypeProvider = (props: any) => (\r\n  <DataTypeProvider formatterComponent={DecimalFormatter} {...props} />\r\n);\r\n\r\nconst BoldFormatter = ({ value }: any) => <b>{value}</b>;\r\n\r\nexport const BoldTypeProvider = (props: any) => (\r\n  <DataTypeProvider formatterComponent={BoldFormatter} {...props} />\r\n);\r\n\r\nconst SimulatedFieldFormatter = ({ value, row }: any) => {\r\n  console.log(\"Row: \", row)\r\n  return <b className={useStyles().simulatedField}>{value}</b>;\r\n};\r\n\r\nexport const SimulatedFieldTypeProvider = (props: any) => (\r\n  <DataTypeProvider formatterComponent={SimulatedFieldFormatter} {...props} />\r\n);\r\n\r\nexport const SortLabel = ({ getMessage, column, ...restProps }: any) => {\r\n  var message: string = \"\";\r\n  switch (column.name) {\r\n    case \"A1A3\":\r\n      message = LCAPhaseTooltip.A1A3;\r\n      break;\r\n    case \"A4\":\r\n      message = LCAPhaseTooltip.A4;\r\n      break;\r\n    case \"B4\":\r\n      message = LCAPhaseTooltip.B4;\r\n      break;\r\n    case \"B4_m\":\r\n      message = LCAPhaseTooltip.B4m;\r\n      break;\r\n    case \"B4_t\":\r\n      message = LCAPhaseTooltip.B4t;\r\n      break;\r\n    case \"GWP_B6\":\r\n      message = LCAPhaseTooltip.B6;\r\n      break;\r\n    case \"GWP_B7\":\r\n      message = LCAPhaseTooltip.B7;\r\n      break;\r\n    case \"FU\":\r\n      message = \"Functional unit\";\r\n      break;\r\n    case \"RSL_mi\":\r\n      message = \"Reference service life\";\r\n      break;\r\n    case \"RSL\":\r\n      message = \"Reference service life\";\r\n      break;\r\n    default:\r\n      message = `Sort by ${column.name}`;\r\n      break;\r\n  }\r\n  return (\r\n    <TableHeaderRow.SortLabel\r\n      column={column}\r\n      getMessage={() => {\r\n        return message;\r\n      }}\r\n      {...restProps}\r\n    />\r\n  );\r\n};\r\n","import { Column } from \"@devexpress/dx-react-grid\";\r\nimport { Table } from \"@devexpress/dx-react-grid-material-ui\";\r\n\r\nclass ColumnData {\r\n  static readonly columns: Column[] = [\r\n    { name: \"building_identifier\", title: \"ID\" },\r\n    { name: \"building_name\", title: \"Building name\" },\r\n    { name: \"project\", title: \"Project\" },\r\n    { name: \"country\", title: \"Country\" },\r\n    { name: \"city\", title: \"City\" },\r\n    { name: \"typology\", title: \"Typology\" },\r\n    { name: \"construction_type\", title: \"Construction type\" },\r\n    { name: \"built_status\", title: \"Built status\" },\r\n    { name: \"energy_ambition_level\", title: \"Energy ambition level\" },\r\n    { name: \"calculation_method\", title: \"Calculation method\" },\r\n    { name: \"main_data_source\", title: \"Data source\" },\r\n    { name: \"study_type\", title: \"Study type\" },\r\n    { name: \"study_year\", title: \"Study year\" },\r\n    { name: \"floor_area\", title: \"Floor area (m\\xB2)\" },\r\n    { name: \"lifetime\", title: \"Lifetime\" },\r\n    { name: \"A1A3\", title: \"A1-A3\" },\r\n    { name: \"A4\", title: \"A4\" },\r\n    { name: \"B4_m\", title: \"B4 (m)\" },\r\n    { name: \"B4_t\", title: \"B4 (t)\" },\r\n    { name: \"GWP_B6\", title: \"B6\" },\r\n    { name: \"GWP_B7\", title: \"B7\" },\r\n    { name: \"heated_volume\", title: \"Heated volume\" },\r\n    { name: \"area_footprint\", title: \"Area footprint\" },\r\n    { name: \"area_roof\", title: \"Area roof\" },\r\n    { name: \"area_wall\", title: \"Area wall\" },\r\n    { name: \"area_windowAndDoor\", title: \"Area window and door\" },\r\n    { name: \"heatloss_number\", title: \"Heatloss number\" },\r\n    { name: \"comments\", title: \"Comments\" },\r\n  ];\r\n\r\n  static readonly columnExtensions: Table.ColumnExtension[] = [\r\n    { columnName: \"building_identifier\", width: 80 },\r\n    { columnName: \"building_name\", width: 200, wordWrapEnabled: true },\r\n    { columnName: \"project\", width: 120 },\r\n    { columnName: \"country\", width: 110 },\r\n    { columnName: \"city\", width: 120 },\r\n    { columnName: \"typology\", width: 130 },\r\n    { columnName: \"construction_type\", width: 160 },\r\n    { columnName: \"built_status\", width: 120 },\r\n    { columnName: \"energy_ambition_level\", width: 180 },\r\n    { columnName: \"calculation_method\", width: 170 },\r\n    { columnName: \"main_data_source\", width: 120 },\r\n    { columnName: \"study_type\", width: 160 },\r\n    { columnName: \"study_year\", width: 110 },\r\n    { columnName: \"lifetime\", width: 100 },\r\n    { columnName: \"floor_area\", width: 150 },\r\n    { columnName: \"heated_volume\", width: 150 },\r\n    { columnName: \"area_footprint\", width: 150 },\r\n    { columnName: \"area_roof\", width: 150 },\r\n    { columnName: \"area_wall\", width: 150 },\r\n    { columnName: \"area_windowAndDoor\", width: 150 },\r\n    { columnName: \"heatloss_number\", width: 150 },\r\n    { columnName: \"comments\", width: 400, wordWrapEnabled: true },\r\n  ];\r\n\r\n  static readonly defaultHiddenColumnNames: string[] = [\r\n    \"country\",\r\n    \"built_status\",\r\n    \"energy_ambition_level\",\r\n    \"main_data_source\",\r\n    \"calculation_method\",\r\n    // \"lifetime\",\r\n    \"heated_volume\",\r\n    \"area_footprint\",\r\n    \"area_roof\",\r\n    \"area_wall\",\r\n    \"area_windowAndDoor\",\r\n    \"heatloss_number\",\r\n    \"comments\",\r\n  ];\r\n\r\n  static readonly tableColumnVisibilityColumnExtensions = [\r\n    { columnName: \"building_identifier\", togglingEnabled: false },\r\n    { columnName: \"building_name\", togglingEnabled: false },\r\n  ];\r\n}\r\n\r\nexport default ColumnData;\r\n","import * as React from \"react\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\nimport \"./LoadingIndicator.css\";\r\n\r\nconst LoadingIndicator = () => (\r\n  <div className='loading-shading-mui'>\r\n    <CircularProgress className='loading-icon-mui' size={50} thickness={5} />\r\n  </div>\r\n);\r\n\r\nexport default LoadingIndicator;\r\n","import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport Alert, { AlertProps } from \"@material-ui/lab/Alert\";\r\nimport { makeStyles, Theme } from \"@material-ui/core/styles\";\r\n\r\ninterface Props extends AlertProps {\r\n  message: string;\r\n}\r\n\r\nexport default function AlertSnackbar(props: Props) {\r\n  const [open, setOpen] = React.useState(true);\r\n\r\n  const handleClick = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = (event?: React.SyntheticEvent, reason?: string) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\r\n      <Alert\r\n        onClose={handleClose}\r\n        severity={props.severity}\r\n        elevation={6}\r\n        variant='filled'\r\n      >\r\n        {props.message}\r\n      </Alert>\r\n    </Snackbar>\r\n  );\r\n}\r\n","import React, { useState, useEffect, useCallback, ReactText } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport allActions from \"redux/actions\";\r\nimport { IRootState } from \"redux/reducers\";\r\n\r\nimport { Theme, createStyles, makeStyles } from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\n\r\nimport {\r\n  SortingState,\r\n  IntegratedSorting,\r\n  SearchState,\r\n  SelectionState,\r\n  IntegratedFiltering,\r\n  DataTypeProvider,\r\n} from \"@devexpress/dx-react-grid\";\r\nimport {\r\n  Grid,\r\n  Toolbar,\r\n  SearchPanel,\r\n  TableHeaderRow,\r\n  ColumnChooser,\r\n  TableColumnVisibility,\r\n  Table,\r\n  VirtualTable,\r\n  TableSelection,\r\n  TableFixedColumns,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\nimport { Template, TemplatePlaceholder } from \"@devexpress/dx-react-core\";\r\nimport _ from \"lodash\";\r\nimport classNames from \"clsx\";\r\n\r\nimport {\r\n  DecimalTypeProvider,\r\n  SortLabel,\r\n} from \"components/TableUtilities/Formatters\";\r\nimport ColumnData from \"./ColumnData\";\r\nimport LoadingIndicator from \"components/LoadingIndicator\";\r\nimport AlertSnackbar from \"components/AlertSnackbar\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    selected: {\r\n      backgroundColor: \"#EEEEEE\",\r\n    },\r\n    customRow: {\r\n      \"@supports (-webkit-backdrop-filter: none) or (backdrop-filter: none)\": {\r\n        \"&:hover\": {\r\n          cursor: \"pointer\",\r\n          \"& > *\": {\r\n            backdropFilter: \"brightness(97%)\",\r\n          },\r\n          \"& .buildingTableFixedCell\": {\r\n            filter: \"brightness(97%)\",\r\n          },\r\n        },\r\n      },\r\n      // fallback for Firefox (not supporting backdrop-filter)\r\n      \"@supports not ((-webkit-backdrop-filter: none) or (backdrop-filter: none))\": {\r\n        \"&:hover\": {\r\n          cursor: \"pointer\",\r\n          backgroundColor: \"#F6F6F6\",\r\n          \"& .buildingTableFixedCell\": {\r\n            backgroundColor: \"#F6F6F6\",\r\n          },\r\n        },\r\n      }\r\n    },\r\n  })\r\n);\r\n\r\nconst getRowId = (row: any) => row[Object.keys(row)[0]];\r\nconst Root = (props: any) => (\r\n  <Grid.Root {...props} style={{ height: \"100%\" }} />\r\n);\r\n\r\nconst CustomTableRow = (props: any) => {\r\n  const {\r\n    className,\r\n    highlighted,\r\n    selectByRowClick,\r\n    onToggle,\r\n    ...restProps\r\n  } = props;\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Table.Row\r\n      {...restProps}\r\n      className={classNames(\r\n        { [classes.selected]: highlighted, [classes.customRow]: true },\r\n        className\r\n      )}\r\n      onClick={(e: any) => {\r\n        if (!selectByRowClick) return;\r\n        e.stopPropagation();\r\n        onToggle();\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nconst CustomFixedCell = ({ ...props }: any) => (\r\n  <TableFixedColumns.Cell {...props} className='buildingTableFixedCell' />\r\n);\r\n\r\nconst getHiddenColumnsFilteringExtensions = (hiddenColumnNames: string[]) =>\r\n  hiddenColumnNames.map((columnName) => ({\r\n    columnName,\r\n    predicate: () => false,\r\n  }));\r\n\r\nfunction BuildingsTable() {\r\n  const dispatch = useDispatch();\r\n  const buildings = useSelector((state: IRootState) => state.buildings);\r\n\r\n  const [columns] = useState(ColumnData.columns);\r\n  const [columnExtensions] = useState(ColumnData.columnExtensions);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState<any>(null);\r\n  const [searchTerm, setSearchTerm] = useState<string>();\r\n\r\n  const [defaultHiddenColumnNames] = useState(\r\n    ColumnData.defaultHiddenColumnNames\r\n  );\r\n  const [tableColumnVisibilityColumnExtensions] = useState(\r\n    ColumnData.tableColumnVisibilityColumnExtensions\r\n  );\r\n  const [leftColumns] = useState([TableSelection.COLUMN_TYPE, \"building_name\"]);\r\n  const multipleSwitchChecked = useSelector(\r\n    (state: IRootState) => state.canSelectMultipleBuildings\r\n  );\r\n\r\n  const [decimalColumns] = useState([\r\n    \"A1A3\",\r\n    \"A4\",\r\n    \"B4_t\",\r\n    \"B4_m\",\r\n    \"GWP_B6\",\r\n    \"GWP_B7\",\r\n  ]);\r\n\r\n  const handleMultipleSwitchChange = () => {\r\n    dispatch(allActions.uiActions.toggleCanSelectMultiple());\r\n    dispatch(allActions.buildingActions.deselectAllBuildings());\r\n    setSelectedRow([]);\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadData();\r\n  }, []);\r\n\r\n  function handleErrors(response: Response) {\r\n    if (!response.ok) {\r\n      throw Error(response.statusText);\r\n    }\r\n    return response;\r\n  }\r\n\r\n  const loadData = () => {\r\n    if (!loading) {\r\n      setLoading(true);\r\n\r\n      var URL = process.env.REACT_APP_API_URI + \"/buildings\";\r\n\r\n      console.log(\"URL: \", URL);\r\n      fetch(URL)\r\n        .then(handleErrors)\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          dispatch(allActions.buildingActions.setBuildings(data));\r\n          setLoading(false);\r\n          console.log(\"Fetched rows: \", buildings);\r\n        })\r\n        .catch((error) => {\r\n          console.log(\"Error getting building data:\", error);\r\n          setError(error);\r\n          setLoading(false);\r\n        });\r\n    }\r\n  };\r\n\r\n  const changeSearchTerm = (value: any) => {\r\n    console.log(\"Changed search term: \", value);\r\n    setSearchTerm(value);\r\n  };\r\n\r\n  // Delays query so it is not fired on every keystroke\r\n  const delayedCallback = useCallback(_.debounce(changeSearchTerm, 300), []);\r\n\r\n  // Only search in visible columns\r\n  const [filteringColumnExtensions, setFilteringColumnExtensions] = useState(\r\n    getHiddenColumnsFilteringExtensions(defaultHiddenColumnNames)\r\n  );\r\n\r\n  const onHiddenColumnNamesChange = (hiddenColumnNames: string[]) =>\r\n    setFilteringColumnExtensions(\r\n      getHiddenColumnsFilteringExtensions(hiddenColumnNames)\r\n    );\r\n\r\n  const [selectedRow, setSelectedRow] = useState<ReactText[]>([]);\r\n\r\n  function changeSelection(selection: ReactText[]) {\r\n    // Select one row or multiple rows at a time\r\n    if (!multipleSwitchChecked) {\r\n      const lastSelected = selection.find(\r\n        (selected) => selectedRow.indexOf(selected) === -1\r\n      );\r\n\r\n      if (lastSelected !== undefined) {\r\n        setSelectedRow([lastSelected]);\r\n\r\n        const rowId = selection[selection.length - 1];\r\n        console.log(\"Selected row: \", rowId);\r\n        const building = buildings.find(\r\n          (building) => building.idbuildings === rowId\r\n        );\r\n        if (building !== undefined)\r\n          dispatch(allActions.buildingActions.selectBuildings([building]));\r\n      } else {\r\n        // Clear selection by double-click on same row\r\n        setSelectedRow([]);\r\n        dispatch(allActions.buildingActions.deselectAllBuildings());\r\n      }\r\n    } else {\r\n      setSelectedRow(selection);\r\n      const selectedBuildings = buildings.filter((building) =>\r\n        selection.includes(building.idbuildings)\r\n      );\r\n      dispatch(allActions.buildingActions.selectBuildings(selectedBuildings));\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Paper style={{ height: \"100%\" }}>\r\n      <Grid\r\n        rows={buildings}\r\n        columns={columns}\r\n        getRowId={getRowId}\r\n        rootComponent={Root}\r\n      >\r\n        <DecimalTypeProvider for={decimalColumns} />\r\n        <SearchState onValueChange={delayedCallback} />\r\n        <IntegratedFiltering columnExtensions={filteringColumnExtensions} />\r\n        <SortingState />\r\n        <IntegratedSorting />\r\n        <SelectionState\r\n          selection={selectedRow}\r\n          onSelectionChange={changeSelection}\r\n        />\r\n        <VirtualTable height='auto' columnExtensions={columnExtensions} />\r\n        <TableHeaderRow showSortingControls sortLabelComponent={SortLabel} />\r\n        <TableSelection\r\n          selectByRowClick\r\n          highlightRow={true}\r\n          showSelectionColumn={multipleSwitchChecked}\r\n          rowComponent={CustomTableRow}\r\n        />\r\n        <TableFixedColumns\r\n          leftColumns={leftColumns}\r\n          cellComponent={CustomFixedCell}\r\n        />\r\n        <TableColumnVisibility\r\n          defaultHiddenColumnNames={defaultHiddenColumnNames}\r\n          columnExtensions={tableColumnVisibilityColumnExtensions}\r\n          onHiddenColumnNamesChange={onHiddenColumnNamesChange}\r\n        />\r\n        <Toolbar />\r\n        <Template name='toolbarContent'>\r\n          <TemplatePlaceholder />\r\n          <FormControlLabel\r\n            control={\r\n              <Switch\r\n                checked={multipleSwitchChecked}\r\n                onChange={handleMultipleSwitchChange}\r\n                name='checkedB'\r\n                color='primary'\r\n              />\r\n            }\r\n            label='Select multiple'\r\n          />\r\n        </Template>\r\n        <SearchPanel />\r\n        <ColumnChooser />\r\n      </Grid>\r\n      {loading && <LoadingIndicator />}\r\n      {error && (\r\n        <AlertSnackbar\r\n          message=\"Couldn't load data, the server may be down.\"\r\n          severity='error'\r\n        />\r\n      )}\r\n    </Paper>\r\n  );\r\n}\r\n\r\nexport default BuildingsTable;\r\n","// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\r\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\r\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\r\n  appId: process.env.REACT_APP_FIREBASE_APP_ID,\r\n  measurementId: process.env.REACT_APP_FIREBASE_MEASUREMENT_ID,\r\n};\r\n\r\nexport default firebaseConfig;","// Firebase App (the core Firebase SDK) is always required and must be listed first\r\nimport firebase from \"firebase/app\";\r\nimport firebaseConfig from \"./firebase_config\";\r\n\r\n// If you enabled Analytics in your project, add the Firebase SDK for Analytics\r\nimport \"firebase/analytics\";\r\n// Add the Firebase products that you want to use\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\n\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\nexport const auth = firebase.auth();\r\nexport const firestore = firebase.firestore();\r\nconst db = firebase.firestore();\r\n\r\nexport function authenticateAnonymously() {\r\n  return firebase.auth().signInAnonymously();\r\n}\r\n\r\nexport function signInWithEmailPassword(email: string, password: string) {\r\n  firebase\r\n    .auth()\r\n    .signInWithEmailAndPassword(email, password)\r\n    .then((userCredential) => {\r\n      // Signed in\r\n      var user = userCredential.user;\r\n      // ...\r\n    })\r\n    .catch((error) => {\r\n      var errorCode = error.code;\r\n      var errorMessage = error.message;\r\n    });\r\n}\r\n\r\nexport function getSimulatedDataFromDb(buildingId: string) {\r\n  let username = \"anonymous\";\r\n  const user = firebase.auth().currentUser;\r\n  if (user) {\r\n    // User is signed in.\r\n    if (user.email !== null) username = user.email;\r\n  }\r\n\r\n  var docRef = db\r\n    .collection(\"users\")\r\n    .doc(username)\r\n    .collection(\"simulatedData\")\r\n    .doc(buildingId);\r\n\r\n  return docRef.get();\r\n}\r\n\r\nexport function writeSimulatedDataToDb(buildingId: string, simulatedData: any) {\r\n  let username = \"anonymous\";\r\n  const user = firebase.auth().currentUser;\r\n  if (user) {\r\n    // User is signed in.\r\n    if (user.email !== null) username = user.email;\r\n  }\r\n  \r\n  db.collection(\"users\")\r\n    .doc(username)\r\n    .collection(\"simulatedData\")\r\n    .doc(buildingId)\r\n    .set(simulatedData)\r\n    .then(() => {\r\n      console.log(\"Document successfully written!\");\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"Error writing document: \", error);\r\n    });\r\n}\r\n","import { Column } from \"@devexpress/dx-react-grid\";\r\nimport { Table } from \"@devexpress/dx-react-grid-material-ui\";\r\n\r\nclass ColumnData {\r\n  static readonly columns: Column[] = [\r\n    { name: \"idlevels\", title: \"Code\" },\r\n    { name: \"name\", title: \"Name\" },\r\n    { name: \"A1A3\", title: \"A1-A3\" },\r\n    { name: \"A4\", title: \"A4\" },\r\n    { name: \"B4_m\", title: \"B4 (m)\" },\r\n    { name: \"B4_t\", title: \"B4 (t)\" },\r\n  ];\r\n\r\n  static readonly columnExtensions: Table.ColumnExtension[] = [\r\n    { columnName: \"idlevels\", width: 80, /* align: \"right\" */ },\r\n    { columnName: \"name\", width: 180, wordWrapEnabled: true },\r\n    { columnName: \"A1A3\", width: 130 },\r\n    { columnName: \"A4\", width: 130 },\r\n    { columnName: \"B4_m\", width: 130 },\r\n    { columnName: \"B4_t\", width: 130 },\r\n  ];\r\n\r\n  static readonly defaultHiddenColumnNames: string[] = [];\r\n\r\n  static readonly tableColumnVisibilityColumnExtensions = [\r\n    { columnName: \"name\", togglingEnabled: false },\r\n  ];\r\n}\r\n\r\nexport default ColumnData;\r\n","/*\r\nCOMMON FUNCTIONS\r\n*/\r\n\r\nexport const getChildElements = (\r\n  buildingElements: IBuildingElement[],\r\n  parentElement: IBuildingElement\r\n) => {\r\n  const childElements = buildingElements.filter(\r\n    (element) => element.idparent === parentElement.idlevels\r\n  );\r\n  if (childElements !== undefined) {\r\n    return childElements;\r\n  }\r\n\r\n  return [];\r\n};\r\n\r\n// Get materials associated with a building element\r\nexport const getElementMaterials = (\r\n  materialInventory: IMaterialInventory[],\r\n  parentElement: IBuildingElement\r\n) => {\r\n  const elementMaterials = materialInventory.filter(\r\n    (material) =>\r\n      material.idbuilding_elements === parentElement.idbuilding_elements\r\n  );\r\n  if (elementMaterials !== undefined) {\r\n    return elementMaterials;\r\n  }\r\n\r\n  return [];\r\n};\r\n\r\n/* \r\nCHART FUNCTIONS\r\n*/\r\n\r\n// Wraps label over two lines if longer than 15 characters\r\nexport const wrapArgumentAxisLabel = (data: any) => {\r\n  if (data.value.length > 15) {\r\n    const wordArray: string[] = data.value.split(\" \");\r\n    if (wordArray.length > 2) {\r\n      const breakPoint = Math.ceil(wordArray.length / 2);\r\n      const firstLine = wordArray.slice(0, breakPoint).join(\" \");\r\n      const secondLine = wordArray.slice(breakPoint).join(\" \");\r\n      return firstLine + \"\\n\" + secondLine;\r\n    } else {\r\n      return wordArray.join(\"\\n\");\r\n    }\r\n  }\r\n\r\n  return data.value;\r\n};\r\n\r\n// Sorts chart data by the sum of each item's embodied emission values\r\nexport const sortByEE = (\r\n  chartData: IMaterialChartItem[] | IElementChartItem[]\r\n) => {\r\n  chartData.sort(function (a: any, b: any) {\r\n    const aSum = a.A1A3 + a.A4 + a.B4_m + a.B4_t;\r\n    const bSum = b.A1A3 + b.A4 + b.B4_m + b.B4_t;\r\n    return aSum - bSum;\r\n  });\r\n\r\n  return chartData;\r\n};\r\n\r\n// Group material inventory by material type, sum material inventory embodied emission values\r\nexport const createMaterialChartData = (\r\n  materials: IMaterialTableParentRow[]\r\n) => {\r\n  // Only keep certain attributes from MaterialTableRow\r\n  const chartData: IMaterialChartItem[] = materials.map(\r\n    ({\r\n      idmaterials,\r\n      sourceType,\r\n      RSL_mi,\r\n      source,\r\n      dataType,\r\n      dataYear,\r\n      density,\r\n      EEf_A1A3,\r\n      RSL,\r\n      comments,\r\n      parentId,\r\n      ...keepAttrs\r\n    }) => keepAttrs\r\n  );\r\n\r\n  return chartData;\r\n};\r\n\r\n// Group material inventory by material category, sum material inventory embodied emission values\r\nexport const groupByCategory = (materials: IMaterialChartItem[]) => {\r\n  const materialsGrouped: IMaterialChartItem[] = [];\r\n\r\n  materials.reduce(function (res: any, value: IMaterialChartItem) {\r\n    if (!res[value.materialCat]) {\r\n      res[value.materialCat] = {\r\n        name: value.materialCat,\r\n        A1A3: 0.0,\r\n        A4: 0.0,\r\n        B4_m: 0.0,\r\n        B4_t: 0.0,\r\n        materialCat: \"\",\r\n      };\r\n      materialsGrouped.push(res[value.materialCat]);\r\n    }\r\n    res[value.materialCat].A1A3 += value.A1A3;\r\n    res[value.materialCat].A4 += value.A4;\r\n    res[value.materialCat].B4_m += value.B4_m;\r\n    res[value.materialCat].B4_t += value.B4_t;\r\n    return res;\r\n  }, {});\r\n\r\n  return materialsGrouped;\r\n};\r\n\r\n/*\r\nTABLE FUNCTIONS\r\n*/\r\n\r\n// Group material inventory by material type, sum material inventory embodied emission values\r\nexport const groupByMaterial = (materials: IMaterialInventory[]) => {\r\n  const materialsGrouped: IMaterialTableParentRow[] = [];\r\n\r\n  materials.reduce(function (res: any, value: IMaterialInventory) {\r\n    if (!res[value.name]) {\r\n      res[value.name] = {\r\n        ...value,\r\n        idmaterialInventory: value.parentId,\r\n        quantity: 0.0,\r\n        A1A3: 0.0,\r\n        A4: 0.0,\r\n        B4_m: 0.0,\r\n        B4_t: 0.0,\r\n        parentId: null,\r\n        buildingElementName: value.buildingElementName,\r\n      };\r\n      materialsGrouped.push(res[value.name]);\r\n    }\r\n\r\n    res[value.name].quantity += value.quantity;\r\n    res[value.name].A1A3 += value.A1A3;\r\n    res[value.name].A4 += value.A4;\r\n    res[value.name].B4_m += value.B4_m;\r\n    res[value.name].B4_t += value.B4_t;\r\n\r\n    // Display ellipses if materials in group don't share the same building element\r\n    if (res[value.name].buildingElementName !== value.buildingElementName) {\r\n      res[value.name].buildingElementName = \"...\";\r\n    }\r\n    return res;\r\n  }, {});\r\n\r\n  return materialsGrouped;\r\n};\r\n\r\n// Rows containing the individual material inventory entries\r\nexport const createChildRows = (materials: IMaterialInventory[]) => {\r\n  const childRows: IMaterialTableChildRow[] = materials.map((m) => ({\r\n    idmaterialInventory: m.idmaterialInventory,\r\n    name: \"Inventory: \" + String(m.idmaterialInventory),\r\n    buildingElementName: m.buildingElementName,\r\n    quantity: m.quantity,\r\n    FU: m.FU,\r\n    A1A3: m.A1A3 || 0.0,\r\n    A4: m.A4 || 0.0,\r\n    B4_m: m.B4_m || 0.0,\r\n    B4_t: m.B4_t || 0.0,\r\n    RSL_mi: m.RSL_mi,\r\n    parentId: m.parentId,\r\n  }));\r\n\r\n  return childRows;\r\n};\r\n\r\n/*\r\nSIMULATION MODE\r\n*/\r\n\r\nexport const mergeSimulatedDataIntoMaterialProducts = (\r\n  materialRows: IMaterialTableRow[],\r\n  simulatedData: ISimulatedData\r\n) => {\r\n  let changedRows: IMaterialTableRow[] = [];\r\n  if (simulatedData) {\r\n    changedRows = materialRows.map((row) =>\r\n      simulatedData[row.idmaterialInventory]\r\n        ? { ...row, ...simulatedData[row.idmaterialInventory] }\r\n        : row\r\n    );\r\n  }\r\n\r\n  return changedRows;\r\n};\r\n","import React, { useState, useEffect, useCallback, ReactText } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { IRootState } from \"redux/reducers\";\r\nimport allActions from \"redux/actions\";\r\n\r\nimport {\r\n  Theme,\r\n  createStyles,\r\n  makeStyles,\r\n} from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport SubdirectoryArrowRightIcon from \"@material-ui/icons/SubdirectoryArrowRight\";\r\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\n\r\nimport {\r\n  SortingState,\r\n  IntegratedSorting,\r\n  SearchState,\r\n  SelectionState,\r\n  DataTypeProvider,\r\n  EditingState,\r\n} from \"@devexpress/dx-react-grid\";\r\nimport {\r\n  Grid,\r\n  TableHeaderRow,\r\n  Table,\r\n  VirtualTable,\r\n  Toolbar,\r\n  SearchPanel,\r\n  ColumnChooser,\r\n  TableColumnVisibility,\r\n  TableFixedColumns,\r\n  TableSelection,\r\n  TableEditColumn,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\nimport _ from \"lodash\";\r\n\r\nimport {\r\n  DecimalTypeProvider,\r\n  BoldTypeProvider,\r\n  SortLabel,\r\n} from \"components/TableUtilities/Formatters\";\r\nimport { EditCell } from \"components/TableUtilities/CustomCells\";\r\nimport ColumnData from \"./ColumnData\";\r\nimport { getChildElements } from \"helpers/materialHelpers\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    customRow: {\r\n      \"&:hover\": {\r\n        backgroundColor: \"#F5F5F5\",\r\n        cursor: \"pointer\",\r\n      },\r\n    },\r\n  })\r\n);\r\n\r\nconst ElementsTable = (props: any) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const buildingElements = useSelector(\r\n    (state: IRootState) => state.buildingElements\r\n  );\r\n  const selectedBuildingElement = useSelector(\r\n    (state: IRootState) => state.selectedBuildingElement\r\n  );\r\n\r\n  const [columns] = useState(ColumnData.columns);\r\n  const [columnExtensions] = useState(ColumnData.columnExtensions);\r\n  const [decimalColumns] = useState([\"A1A3\", \"A4\", \"B4_t\", \"B4_m\"]);\r\n  const [tooltipColumns] = useState([\"name\"]);\r\n  const [boldColumns] = useState([\"name\"]);\r\n\r\n  const CustomTableRow = ({ row, style, ...props }: any) => (\r\n    <VirtualTable.Row\r\n      {...props}\r\n      id={\"tableRow\" + row.idbuilding_elements}\r\n      className={useStyles().customRow}\r\n      onClick={() => handleRowClick(row)}\r\n    />\r\n  );\r\n\r\n  const TooltipFormatter = ({ value }: any) => (\r\n    <Tooltip title={<span>Go to sub-elements</span>}>\r\n      <span>\r\n        <b>{value}</b>\r\n      </span>\r\n    </Tooltip>\r\n  );\r\n\r\n  const CellTooltip = (props: any) => (\r\n    <DataTypeProvider formatterComponent={TooltipFormatter} {...props} />\r\n  );\r\n\r\n  const handleRowClick = (row: IBuildingElement) => {\r\n    dispatch(allActions.elementAndMaterialActions.selectBuildingElement(row));\r\n    dispatch(allActions.elementAndMaterialActions.addToElementRoute(row));\r\n  };\r\n\r\n  const EditButton = ({ onExecute }: any) => (\r\n    <Tooltip title='Go to sub-elements'>\r\n      <IconButton onClick={onExecute}>\r\n        <ChevronRightIcon />\r\n      </IconButton>\r\n    </Tooltip>\r\n  );\r\n\r\n  const commandComponents: any = {\r\n    edit: EditButton,\r\n  };\r\n\r\n  const Command = ({ id, onExecute }: any) => {\r\n    const CommandButton = commandComponents[id];\r\n    return <CommandButton onExecute={onExecute} />;\r\n  };\r\n\r\n  const rows = getChildElements(buildingElements, selectedBuildingElement);\r\n  const height = 500; // 232 + rows.length * 50;\r\n\r\n  return (\r\n    <Grid rows={rows} columns={columns}>\r\n      <BoldTypeProvider for={boldColumns} />\r\n      {/* <CellTooltip for={tooltipColumns} /> */}\r\n      <DecimalTypeProvider for={decimalColumns} />\r\n      <SortingState />\r\n      <IntegratedSorting />\r\n      <EditingState onCommitChanges={() => {}} />\r\n      <VirtualTable\r\n        columnExtensions={columnExtensions}\r\n        rowComponent={CustomTableRow}\r\n        height={height}\r\n      />\r\n      <TableHeaderRow showSortingControls sortLabelComponent={SortLabel} />\r\n      <TableEditColumn\r\n        // showEditCommand={isSimulationModeActive}\r\n        showEditCommand\r\n        commandComponent={Command}\r\n        // cellComponent={EditCell}\r\n        width={80}\r\n      />\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default ElementsTable;\r\n","import React from \"react\";\r\nimport { LCAPhaseTooltip } from \"interfaces/enums\";\r\n\r\nexport const customizeHint = (e: any) => {\r\n  switch (e.seriesName) {\r\n    case \"A1-A3\":\r\n      return LCAPhaseTooltip.A1A3;\r\n      break;\r\n    case \"A4\":\r\n      return LCAPhaseTooltip.A4;\r\n      break;\r\n    case \"B4\":\r\n      return LCAPhaseTooltip.B4;\r\n      break;\r\n    case \"B4 (m)\":\r\n      return LCAPhaseTooltip.B4m;\r\n      break;\r\n    case \"B4 (t)\":\r\n      return LCAPhaseTooltip.B4t;\r\n      break;\r\n  }\r\n};\r\n","import React, { useState, useEffect, useRef, useCallback } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { IRootState } from \"redux/reducers\";\r\nimport allActions from \"redux/actions\";\r\n\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\nimport {\r\n  Theme,\r\n  createStyles,\r\n  makeStyles,\r\n} from \"@material-ui/core/styles\";\r\n\r\nimport {\r\n  Chart,\r\n  Series,\r\n  CommonSeriesSettings,\r\n  Legend,\r\n  ArgumentAxis,\r\n  ValueAxis,\r\n  Title,\r\n  Tooltip,\r\n  Size,\r\n  Label,\r\n} from \"devextreme-react/chart\";\r\n\r\nimport { sortByEE, wrapArgumentAxisLabel } from \"helpers/materialHelpers\";\r\nimport { customizeHint } from \"components/ChartComponents\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    chart: {\r\n      padding: theme.spacing(2),\r\n    },\r\n    argumentAxisLabel: {\r\n      fill: \"#767676\",\r\n    },\r\n  })\r\n);\r\n\r\nconst ElementsChart = () => {\r\n  const chartRef = useRef<Chart>(null);\r\n\r\n  var renderOptions = {\r\n    force: true, // forces redrawing\r\n    animate: true, // redraws the UI component with animation\r\n  };\r\n\r\n  const resizeObserver = useRef<ResizeObserver>(\r\n    new ResizeObserver((entries: ResizeObserverEntry[]) => {\r\n      // your code to handle the size change\r\n      console.log(\"Size changed\");\r\n      chartRef?.current?.instance.render(renderOptions);\r\n    })\r\n  );\r\n\r\n  const resizedContainerRef = useCallback(\r\n    (container: HTMLDivElement) => {\r\n      if (container !== null) {\r\n        resizeObserver.current.observe(container);\r\n      }\r\n      // When element is unmounted, ref callback is called with a null argument\r\n      // => best time to cleanup the observer\r\n      else {\r\n        if (resizeObserver.current) resizeObserver.current.disconnect();\r\n      }\r\n    },\r\n    [resizeObserver.current]\r\n  );\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const buildingElements = useSelector(\r\n    (state: IRootState) => state.buildingElements\r\n  );\r\n  const selectedBuildingElement = useSelector(\r\n    (state: IRootState) => state.selectedBuildingElement\r\n  );\r\n  const [chartData, setChartData] = useState<IElementChartItem[]>([]);\r\n\r\n  useEffect(() => {\r\n    const childElements = getChildElements(selectedBuildingElement);\r\n    const chartData: IElementChartItem[] = [];\r\n\r\n    childElements.forEach((element) => {\r\n      const dataEntry: IElementChartItem = {\r\n        name: element.idlevels + \" - \" + element.name,\r\n        id: String(element.idbuilding_elements),\r\n        A1A3: Number(element.A1A3) || 0.0,\r\n        A4: Number(element.A4) || 0.0,\r\n        B4_m: Number(element.B4_m) || 0.0,\r\n        B4_t: Number(element.B4_t) || 0.0,\r\n      };\r\n\r\n      chartData.push(dataEntry);\r\n    });\r\n\r\n    const sortedChartData = sortByEE(chartData) as IElementChartItem[];\r\n\r\n    setChartData(sortedChartData);\r\n  }, [selectedBuildingElement]);\r\n\r\n  const getChildElements = (parentElement: IBuildingElement) => {\r\n    const childElements = buildingElements.filter(\r\n      (element) => element.idparent === parentElement.idlevels\r\n    );\r\n    if (childElements !== undefined) {\r\n      return childElements;\r\n    }\r\n\r\n    return [];\r\n  };\r\n\r\n  const customizeTooltip = (arg: any) => {\r\n    return {\r\n      text: `<b>${arg.seriesName}</b>\\n ${arg.valueText}`,\r\n    };\r\n  };\r\n\r\n  const onPointClick = (e: any) => {\r\n    const point = e.target;\r\n    const clickedElementId = Number(point.data.id);\r\n\r\n    const element = buildingElements.find(\r\n      (el) => el.idbuilding_elements === clickedElementId\r\n    );\r\n\r\n    if (element !== undefined) {\r\n      dispatch(\r\n        allActions.elementAndMaterialActions.selectBuildingElement(element)\r\n      );\r\n      dispatch(allActions.elementAndMaterialActions.addToElementRoute(element));\r\n    }\r\n  };\r\n\r\n  const onDrawn = (e: any) => {\r\n    // Add pointer cursor to all bar points\r\n    e.element.querySelectorAll(\".dxc-markers rect\").forEach((el: any) => {\r\n      el.style.cursor = \"pointer\";\r\n    });\r\n\r\n    // Add pointer cursor to argument axis labels\r\n    e.element\r\n      .querySelector(\".dxc-arg-elements\")\r\n      .childNodes.forEach((el: any) => {\r\n        el.style.cursor = \"pointer\";\r\n      });\r\n  };\r\n\r\n  const height = 500; //+ chartData.length * 50;\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Paper ref={resizedContainerRef}>\r\n      <Chart\r\n        className={classes.chart}\r\n        dataSource={chartData}\r\n        palette='Material'\r\n        rotated={true}\r\n        onPointClick={onPointClick}\r\n        onDrawn={onDrawn}\r\n        ref={chartRef}\r\n      >\r\n        <Size height={height} />\r\n        <CommonSeriesSettings\r\n          argumentField='name'\r\n          type='stackedBar'\r\n          barWidth={40}\r\n          hoverMode='allArgumentPoints'\r\n        ></CommonSeriesSettings>\r\n        <Series valueField='A1A3' name='A1-A3' />\r\n        <Series valueField='A4' name='A4' />\r\n        <Series valueField='B4_m' name='B4 (m)' />\r\n        <Series valueField='B4_t' name='B4 (t)' />\r\n        <ValueAxis>\r\n          <Title\r\n            text={\"kgCO2e\"}\r\n            font={{\r\n              size: 14,\r\n            }}\r\n          />\r\n        </ValueAxis>\r\n        <ArgumentAxis>\r\n          <Label customizeText={wrapArgumentAxisLabel} />\r\n        </ArgumentAxis>\r\n        <Legend\r\n          verticalAlignment='bottom'\r\n          horizontalAlignment='center'\r\n          itemTextPosition='top'\r\n          customizeHint={customizeHint}\r\n        />\r\n        <Tooltip\r\n          enabled={true}\r\n          location='edge'\r\n          customizeTooltip={customizeTooltip}\r\n          zIndex={1200}\r\n          arrowLength={6}\r\n          format={{\r\n            format: (value: string) => parseFloat(value).toLocaleString(),\r\n          }}\r\n          interactive\r\n        />\r\n      </Chart>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default ElementsChart;\r\n","import { Column, EditingState } from \"@devexpress/dx-react-grid\";\r\nimport { Table } from \"@devexpress/dx-react-grid-material-ui\";\r\n\r\nclass ColumnData {\r\n  static readonly columns: Column[] = [\r\n    { name: \"name\", title: \"Name\" },\r\n    // { name: \"idmaterialInventory\", title: \"ID\" },\r\n    { name: \"quantity\", title: \"Quantity\" },\r\n    { name: \"FU\", title: \"FU\" },\r\n    { name: \"sourceType\", title: \"Data source\" },\r\n    { name: \"A1A3\", title: \"A1-A3\" },\r\n    { name: \"A4\", title: \"A4\" },\r\n    { name: \"B4_m\", title: \"B4 (m)\" },\r\n    { name: \"B4_t\", title: \"B4 (t)\" },\r\n    { name: \"RSL_mi\", title: \"RSL\" },\r\n    { name: \"materialCat\", title: \"Category\" },\r\n    { name: \"buildingElementName\", title: \"Building element\" },\r\n    // { name: \"RSL\", title: \"RSL\" },\r\n    { name: \"source\", title: \"Source\" },\r\n    { name: \"dataType\", title: \"Data type\" },\r\n    { name: \"dataYear\", title: \"Data year\" },\r\n    { name: \"density\", title: \"Density\" },\r\n    { name: \"EEf_A1A3\", title: \"EEf_A1A3\" },\r\n    { name: \"country\", title: \"Country\" },\r\n    { name: \"city\", title: \"City\" },\r\n    { name: \"comments\", title: \"Comments\" },\r\n  ];\r\n\r\n  static readonly columnExtensions: Table.ColumnExtension[] = [\r\n    { columnName: \"idmaterialInventory\", width: 80 },\r\n    { columnName: \"name\", width: 270, wordWrapEnabled: true },\r\n    { columnName: \"dataType\", width: 120 },\r\n    { columnName: \"sourceType\", width: 120 },\r\n    { columnName: \"source\", width: 200, wordWrapEnabled: true },\r\n    { columnName: \"dataYear\", width: 100 },\r\n    { columnName: \"FU\", width: 70 },\r\n    { columnName: \"EEf_A1A3\", width: 110 },\r\n    // { columnName: \"RSL\", width: 80 },\r\n    { columnName: \"comments\", width: 400 },\r\n    { columnName: \"materialCat\", width: 150 },\r\n    { columnName: \"quantity\", width: 110 },\r\n    { columnName: \"RSL_mi\", width: 80 },\r\n    { columnName: \"A1A3\", width: 130 },\r\n    { columnName: \"A4\", width: 130 },\r\n    { columnName: \"B4_m\", width: 130 },\r\n    { columnName: \"B4_t\", width: 130 },\r\n    { columnName: \"buildingElementName\", width: 160, wordWrapEnabled: true },\r\n  ];\r\n\r\n  static readonly defaultHiddenColumnNames: string[] = [\r\n    \"source\",\r\n    // \"RSL\",\r\n    \"dataType\",\r\n    \"dataYear\",\r\n    \"comments\",\r\n    \"EEf_A1A3\",\r\n    \"density\",\r\n    \"country\",\r\n    \"city\",\r\n  ];\r\n\r\n  static readonly tableColumnVisibilityColumnExtensions = [\r\n    { columnName: \"name\", togglingEnabled: false },\r\n  ];\r\n\r\n  static readonly decimalColumns = [\r\n    \"quantity\",\r\n    \"EEf_A1A3\",\r\n    \"A1A3\",\r\n    \"A4\",\r\n    \"B4_t\",\r\n    \"B4_m\",\r\n    \"RSL_mi\"\r\n  ];\r\n\r\n  static readonly groupSummaryItems = [\r\n    {\r\n      columnName: \"quantity\",\r\n      type: \"sum\",\r\n      showInGroupFooter: false,\r\n      alignByColumn: true,\r\n    },\r\n    {\r\n      columnName: \"FU\",\r\n      type: \"staticValue\",\r\n      showInGroupFooter: false,\r\n      alignByColumn: true,\r\n    },\r\n    {\r\n      columnName: \"sourceType\",\r\n      type: \"staticValue\",\r\n      showInGroupFooter: false,\r\n      alignByColumn: true,\r\n    },\r\n    {\r\n      columnName: \"materialCat\",\r\n      type: \"staticValue\",\r\n      showInGroupFooter: false,\r\n      alignByColumn: true,\r\n    },\r\n    {\r\n      columnName: \"RSL_mi\",\r\n      type: \"avg\",\r\n      showInGroupFooter: false,\r\n      alignByColumn: true,\r\n    },\r\n    {\r\n      columnName: \"A1A3\",\r\n      type: \"sum\",\r\n      showInGroupFooter: false,\r\n      alignByColumn: true,\r\n    },\r\n    {\r\n      columnName: \"A4\",\r\n      type: \"sum\",\r\n      showInGroupFooter: false,\r\n      alignByColumn: true,\r\n    },\r\n    {\r\n      columnName: \"B4_m\",\r\n      type: \"sum\",\r\n      showInGroupFooter: false,\r\n      alignByColumn: true,\r\n    },\r\n    {\r\n      columnName: \"B4_t\",\r\n      type: \"sum\",\r\n      showInGroupFooter: false,\r\n      alignByColumn: true,\r\n    },\r\n  ];\r\n\r\n  static readonly editingStateColumnExtensions: EditingState.ColumnExtension[] = [\r\n    { columnName: \"idmaterialInventory\", editingEnabled: false },\r\n    { columnName: \"name\", editingEnabled: false },\r\n    { columnName: \"buildingElementName\", editingEnabled: false },\r\n    // { columnName: \"quantity\", editingEnabled: false},\r\n    { columnName: \"FU\", editingEnabled: false },\r\n    // { columnName: \"sourceType\", editingEnabled: false},\r\n    // { columnName: \"RSL\", editingEnabled: false },\r\n    { columnName: \"materialCat\", editingEnabled: false },\r\n    { columnName: \"RSL_mi\", editingEnabled: false },\r\n    // { columnName: \"EEf_A1A3\", editingEnabled: false},\r\n    // { columnName: \"A1A3\", editingEnabled: false},\r\n    // { columnName: \"A4\", editingEnabled: false},\r\n    // { columnName: \"B4_m\", editingEnabled: false},\r\n    // { columnName: \"B4_t\", editingEnabled: false},\r\n    { columnName: \"dataType\", editingEnabled: false },\r\n    { columnName: \"dataYear\", editingEnabled: false },\r\n    { columnName: \"comments\", editingEnabled: false },\r\n  ];\r\n}\r\n\r\nexport default ColumnData;\r\n","import React from \"react\";\r\nimport ChevronRight from \"@material-ui/icons/ChevronRight\";\r\nimport ExpandMore from \"@material-ui/icons/ExpandMore\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Input from \"@material-ui/core/Input\";\r\n\r\nimport { VirtualTable } from \"@devexpress/dx-react-grid-material-ui\";\r\n\r\nimport { Theme, createStyles, makeStyles } from \"@material-ui/core/styles\";\r\nimport theme from \"styles/theme\";\r\n\r\nimport { useSelector } from \"react-redux\";\r\nimport { IRootState } from \"redux/reducers\";\r\n\r\nconst useStyles = makeStyles((/* theme: Theme */) =>\r\n  createStyles({\r\n    cell: {\r\n      padding: theme.spacing(1),\r\n    },\r\n    indentCell: {\r\n      padding: 0,\r\n    },\r\n    groupButton: {\r\n      height: theme.spacing(4),\r\n      width: theme.spacing(4),\r\n    },\r\n    lookupEditCell: {\r\n      padding: theme.spacing(1),\r\n    },\r\n    inputRoot: {\r\n      width: \"100%\",\r\n    },\r\n    selectMenu: {\r\n      position: \"absolute !important\" as \"absolute\",\r\n    },\r\n    editCell: {\r\n      paddingTop: theme.spacing(0),\r\n      paddingBottom: theme.spacing(0),\r\n      paddingLeft: theme.spacing(2),\r\n      paddingRight: theme.spacing(0),\r\n    },\r\n    simulatedField: {\r\n      color: theme.palette.simulated.main,\r\n      // fontWeight: \"bolder\",\r\n    },\r\n    reducedEmissionTooltip: {\r\n      color: theme.palette.reducedEmission.main,\r\n    },\r\n  }));\r\n\r\nexport const GroupCell = ({\r\n  style,\r\n  colSpan,\r\n  row,\r\n  column,\r\n  expanded,\r\n  onToggle,\r\n  classes,\r\n  children,\r\n  className,\r\n  tableRow,\r\n  tableColumn,\r\n  contentComponent,\r\n  iconComponent,\r\n  indentCellComponent,\r\n  inlineSummaryComponent,\r\n  inlineSummaryItemComponent,\r\n  summaryCellComponent,\r\n  summaryItemComponent,\r\n  containerComponent,\r\n  inlineSummaries,\r\n  getMessage,\r\n  ...restProps\r\n}: any) => {\r\n  const handleClick = () => onToggle();\r\n  const styles = useStyles();\r\n  return (\r\n    <TableCell\r\n      colSpan={colSpan}\r\n      style={style}\r\n      className={styles.cell}\r\n      onClick={handleClick}\r\n      {...restProps}\r\n    >\r\n      <Grid container alignItems='center' justify='space-around'>\r\n        <Grid item xs={2}>\r\n          <IconButton className={styles.groupButton}>\r\n            {expanded ? <ExpandMore /> : <ChevronRight />}\r\n          </IconButton>\r\n        </Grid>\r\n        <Grid item xs={10}>\r\n          <span>\r\n            <strong>{children || row.value}</strong>\r\n          </span>\r\n        </Grid>\r\n      </Grid>\r\n    </TableCell>\r\n  );\r\n};\r\n\r\nexport const SummaryCell = ({\r\n  style,\r\n  colSpan,\r\n  row,\r\n  column,\r\n  expanded,\r\n  onToggle,\r\n  classes,\r\n  children,\r\n  className,\r\n  tableRow,\r\n  tableColumn,\r\n  contentComponent,\r\n  iconComponent,\r\n  indentCellComponent,\r\n  inlineSummaryComponent,\r\n  inlineSummaryItemComponent,\r\n  summaryCellComponent,\r\n  summaryItemComponent,\r\n  containerComponent,\r\n  inlineSummaries,\r\n  getMessage,\r\n  ...restProps\r\n}: any) => {\r\n  const styles = useStyles();\r\n  const handleClick = () => onToggle();\r\n  var tooltipTitle: string = \"\";\r\n  switch (children.props.columnSummaries[0].type) {\r\n    case \"sum\":\r\n      tooltipTitle = \"Sum\";\r\n      break;\r\n    case \"avg\":\r\n      tooltipTitle = \"Average\";\r\n      break;\r\n    case \"staticValue\":\r\n      tooltipTitle = \"Static\";\r\n      break;\r\n  }\r\n  return (\r\n    <TableCell\r\n      colSpan={colSpan}\r\n      onClick={handleClick}\r\n      className={styles.cell}\r\n      {...restProps}\r\n    >\r\n      {tooltipTitle === \"Static\" ? (\r\n        <span>{children}</span>\r\n      ) : (\r\n        <Tooltip title={tooltipTitle}>\r\n          <span>{children}</span>\r\n        </Tooltip>\r\n      )}\r\n    </TableCell>\r\n  );\r\n};\r\n\r\nexport const LookupEditCell = ({\r\n  availableColumnValues,\r\n  value,\r\n  onValueChange,\r\n}: any) => (\r\n  <TableCell className={useStyles().lookupEditCell}>\r\n    <Select\r\n      value={value}\r\n      onChange={(event) => onValueChange(event.target.value)}\r\n      MenuProps={{\r\n        className: useStyles().selectMenu,\r\n      }}\r\n      input={<Input classes={{ root: useStyles().inputRoot }} />}\r\n    >\r\n      {availableColumnValues.map((item: any) => (\r\n        <MenuItem key={item} value={item}>\r\n          {item}\r\n        </MenuItem>\r\n      ))}\r\n    </Select>\r\n  </TableCell>\r\n);\r\n\r\nexport const EditCell = ({ children, style, ...restProps }: any) => {\r\n  return (\r\n    <VirtualTable.Cell\r\n      {...restProps}\r\n      children={restProps.row.parentId === null ? children : null}\r\n      // className={useStyles().editCell}\r\n      style={{\r\n        paddingTop: \"0px\",\r\n        paddingBottom: \"0px\",\r\n        paddingLeft: \"16px\",\r\n        paddingRight: \"0px\",\r\n        ...style,\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nconst SimulatedFieldCell = ({ value, style, ...restProps }: any) => (\r\n  <VirtualTable.Cell\r\n    {...restProps}\r\n    style={{\r\n      ...style,\r\n    }}\r\n  >\r\n    <Tooltip title='Edited value'>\r\n      <span\r\n        style={{\r\n          color: theme.palette.simulated.main,\r\n          fontWeight: \"bold\",\r\n        }}\r\n      >\r\n        {typeof value === \"number\" ? value.toLocaleString() : value}\r\n      </span>\r\n    </Tooltip>\r\n  </VirtualTable.Cell>\r\n);\r\n\r\nexport const MaterialProductCell = (\r\n  props: any,\r\n  simulatedData: ISimulatedData\r\n) => {\r\n  const { column, row } = props;\r\n\r\n  if (row.idmaterialInventory in simulatedData) {\r\n    if (column.name in simulatedData[row.idmaterialInventory]) {\r\n      return <SimulatedFieldCell {...props} />;\r\n    }\r\n  }\r\n\r\n  return <VirtualTable.Cell {...props} />;\r\n};\r\n","export function reduceEmissionNumber(\r\n  emissionNumber: number,\r\n  reductionId: number\r\n) {\r\n  var reductionFactor = 0;\r\n  switch (reductionId) {\r\n    case 0:\r\n      reductionFactor = 0.897;\r\n      break;\r\n    case 1:\r\n      reductionFactor = 0.914;\r\n      break;\r\n    case 2:\r\n      reductionFactor = 0.684;\r\n      break;\r\n    case 3:\r\n      reductionFactor = 0.762;\r\n      break;\r\n    case 4:\r\n      reductionFactor = 0.735;\r\n      break;\r\n    default:\r\n      reductionFactor = 0.948\r\n  }\r\n\r\n  var reducedNumber = emissionNumber * reductionFactor;\r\n  return roundTo(reducedNumber, 3);\r\n}\r\n\r\nexport const roundTo = function (num: number, places: number) {\r\n  const factor = 10 ** places;\r\n  return Math.round(num * factor) / factor;\r\n};\r\n\r\nexport const calculatePercentageChange = (\r\n  originalValue: number,\r\n  simulatedValue: number\r\n) => {\r\n  const percentageChange =\r\n    ((originalValue - simulatedValue) / originalValue) * 100;\r\n  return parseFloat(percentageChange.toFixed(1)).toLocaleString();\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { IRootState } from \"redux/reducers\";\r\nimport allActions from \"redux/actions\";\r\n\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {\r\n  Plugin,\r\n  Template,\r\n  TemplateConnector,\r\n  TemplatePlaceholder,\r\n} from \"@devexpress/dx-react-core\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormGroup from \"@material-ui/core/FormGroup\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormLabel from \"@material-ui/core/FormLabel\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nimport { Theme, createStyles, makeStyles } from \"@material-ui/core/styles\";\r\nimport theme from \"styles/theme\";\r\n\r\nimport {\r\n  reduceEmissionNumber,\r\n  calculatePercentageChange,\r\n} from \"helpers/simulationHelpers\";\r\nimport { LCAPhaseTooltip } from \"interfaces/enums\";\r\n\r\nconst useStyles = makeStyles((/* theme: Theme */) =>\r\n  createStyles({\r\n    labelAsterisk: {\r\n      color: theme.palette.simulated.main,\r\n      fontWeight: \"bolder\",\r\n      fontSize: \"large\",\r\n    },\r\n    subtitleAsterisk: {\r\n      color: theme.palette.simulated.main,\r\n      fontWeight: \"bolder\",\r\n    },\r\n    dialogContent: {\r\n      paddingTop: theme.spacing(2),\r\n      paddingBottom: theme.spacing(2),\r\n      paddingLeft: theme.spacing(3),\r\n      paddingRight: theme.spacing(3),\r\n      overflow: \"auto\",\r\n    },\r\n    reducedEmissionAdornment: {\r\n      color: theme.palette.reducedEmission.main\r\n    }\r\n  }));\r\n\r\nconst sourceTypes = [\r\n  \"TestSource\",\r\n  \"EPD\",\r\n  \"Ecoinvent\",\r\n  \"Other\",\r\n  \"Custom\",\r\n  \"na\",\r\n  \"Klimatre\",\r\n  \"PEP\",\r\n];\r\n\r\ninterface PopupProps {\r\n  row: IMaterialTableRow;\r\n  onChange: any;\r\n  onApplyChanges: any;\r\n  onCancelChanges: any;\r\n  open: boolean;\r\n}\r\n\r\nexport const Popup = ({\r\n  row,\r\n  onChange,\r\n  onApplyChanges,\r\n  onCancelChanges,\r\n  open,\r\n}: PopupProps) => {\r\n  const [originalRow, setOriginalRow] = useState<IMaterialTableRow>(row);\r\n  const [sourceType, setSourceType] = useState<string>(row.sourceType);\r\n  const [A1A3, setA1A3] = useState<number>(row.A1A3);\r\n  const [percentageChange, setPercentageChange] = useState(\"\");\r\n\r\n  const materialProducts = useSelector(\r\n    (state: IRootState) => state.materialProducts\r\n  );\r\n  const simulatedMaterialProducts = useSelector(\r\n    (state: IRootState) => state.simulatedMaterialProducts\r\n  );\r\n\r\n  useEffect(() => {\r\n    const nonSimulatedRow = (materialProducts as IMaterialTableRow[]).find(\r\n      (product) => product.idmaterialInventory === row.idmaterialInventory\r\n    );\r\n    if (nonSimulatedRow !== undefined) {\r\n      setOriginalRow(nonSimulatedRow);\r\n      setSourceType(row.sourceType);\r\n      setA1A3(row.A1A3);\r\n    }\r\n  }, [row.idmaterialInventory]);\r\n\r\n  const handleSourceTypeChange = (\r\n    event: React.ChangeEvent<HTMLInputElement>\r\n  ) => {\r\n    setSourceType(event.target.value);\r\n    if (event.target.value === \"TestSource\") {\r\n      const reductionFactorId = originalRow.name.length % 5;\r\n      const simulatedValue = reduceEmissionNumber(originalRow.A1A3, reductionFactorId);\r\n      setA1A3(simulatedValue);\r\n      setPercentageChange(\r\n        calculatePercentageChange(originalRow.A1A3, simulatedValue)\r\n      );\r\n      const textFieldEvent = {\r\n        target: { name: \"A1A3\", value: simulatedValue },\r\n      };\r\n      onChange(textFieldEvent);\r\n    } else if (event.target.value === originalRow.sourceType) {\r\n      setA1A3(originalRow.A1A3);\r\n      const textFieldEvent = {\r\n        target: { name: \"A1A3\", value: originalRow.A1A3 },\r\n      };\r\n      onChange(textFieldEvent);\r\n    }\r\n    onChange(event);\r\n  };\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Dialog open={open} onClose={onCancelChanges} fullWidth maxWidth='xs'>\r\n      <DialogTitle disableTypography>\r\n        <Typography variant='h6' component='h2'>\r\n          Edit material details\r\n        </Typography>\r\n        <Typography noWrap variant='subtitle2' component='h3'>\r\n          {row.name}\r\n        </Typography>\r\n      </DialogTitle>\r\n      {/* Replace DialogContent with div to avoid rendering unecessary scrollbar */}\r\n      <div className={classes.dialogContent}>\r\n        {sourceType !== originalRow.sourceType && (\r\n          <Typography variant='body2' component='p' color='textSecondary'>\r\n            Edited/affected fields are marked with{\" \"}\r\n            <Typography\r\n              variant='body1'\r\n              component='span'\r\n              display='inline'\r\n              className={classes.subtitleAsterisk}\r\n            >\r\n              *\r\n            </Typography>\r\n          </Typography>\r\n        )}\r\n        <Grid container /* alignItems='center' */ spacing={3}>\r\n          <Grid item xs={6}>\r\n            <FormGroup>\r\n              <TextField\r\n                select\r\n                required={sourceType !== originalRow.sourceType}\r\n                margin='normal'\r\n                name='sourceType'\r\n                label='Data source'\r\n                variant='outlined'\r\n                value={sourceType || \" \"}\r\n                onChange={handleSourceTypeChange}\r\n                InputLabelProps={{\r\n                  classes: {\r\n                    asterisk: classes.labelAsterisk,\r\n                  },\r\n                }}\r\n              >\r\n                {sourceTypes.map((option) => (\r\n                  <MenuItem\r\n                    key={option}\r\n                    value={option}\r\n                    disabled={\r\n                      !(\r\n                        option === originalRow.sourceType ||\r\n                        option === \"TestSource\"\r\n                      )\r\n                    }\r\n                  >\r\n                    {option}\r\n                  </MenuItem>\r\n                ))}\r\n              </TextField>\r\n              {/* <TextField\r\n                margin='normal'\r\n                name='materialCat'\r\n                label='Category'\r\n                value={row.materialCat || \" \"}\r\n                onChange={onChange}\r\n                disabled\r\n              />\r\n              <TextField\r\n                margin='normal'\r\n                name='quantity'\r\n                label='Quantity'\r\n                value={row.quantity || \"0\"}\r\n                onChange={onChange}\r\n                disabled\r\n                InputProps={{\r\n                  startAdornment: (\r\n                    <InputAdornment position='start'>\r\n                      {row.FU || \"\"}\r\n                    </InputAdornment>\r\n                  ),\r\n                }}\r\n              /> */}\r\n              {/* <TextField\r\n                margin='normal'\r\n                name='RSL_mi'\r\n                label='RSL'\r\n                value={row.RSL_mi || \"0\"}\r\n                onChange={onChange}\r\n                disabled\r\n              /> */}\r\n            </FormGroup>\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <FormGroup>\r\n              <Tooltip\r\n                enterDelay={500}\r\n                placement='bottom'\r\n                title={LCAPhaseTooltip.A1A3}\r\n              >\r\n                <TextField\r\n                  required={A1A3 !== originalRow.A1A3}\r\n                  margin='normal'\r\n                  name='A1A3'\r\n                  label='A1-A3'\r\n                  value={A1A3?.toLocaleString() || \"0\"}\r\n                  onChange={onChange}\r\n                  disabled\r\n                  InputLabelProps={{\r\n                    classes: {\r\n                      asterisk: classes.labelAsterisk,\r\n                    },\r\n                  }}\r\n                  InputProps={\r\n                    A1A3 !== originalRow.A1A3\r\n                      ? {\r\n                          endAdornment: (\r\n                            <InputAdornment position='end' disableTypography className={classes.reducedEmissionAdornment}>\r\n                              {\"(-\" + calculatePercentageChange(originalRow.A1A3, A1A3) + \"%)\"}\r\n                            </InputAdornment>\r\n                          ),\r\n                        }\r\n                      : undefined\r\n                  }\r\n                />\r\n              </Tooltip>\r\n              <Tooltip\r\n                enterDelay={500}\r\n                placement='bottom'\r\n                title={LCAPhaseTooltip.A4}\r\n              >\r\n                <TextField\r\n                  margin='normal'\r\n                  name='A4'\r\n                  label='A4'\r\n                  value={row.A4?.toLocaleString() || \"0\"}\r\n                  onChange={onChange}\r\n                  disabled\r\n                />\r\n              </Tooltip>\r\n              <Tooltip\r\n                enterDelay={500}\r\n                placement='bottom'\r\n                title={LCAPhaseTooltip.B4m}\r\n              >\r\n                <TextField\r\n                  margin='normal'\r\n                  name='B4_m'\r\n                  label='B4 (m)'\r\n                  value={row.B4_m?.toLocaleString() || \"0\"}\r\n                  onChange={onChange}\r\n                  disabled\r\n                />\r\n              </Tooltip>\r\n              <Tooltip\r\n                enterDelay={500}\r\n                placement='bottom'\r\n                title={LCAPhaseTooltip.B4t}\r\n              >\r\n                <TextField\r\n                  margin='normal'\r\n                  name='B4_t'\r\n                  label='B4 (t)'\r\n                  value={row.B4_t?.toLocaleString() || \"0\"}\r\n                  onChange={onChange}\r\n                  disabled\r\n                />\r\n              </Tooltip>\r\n            </FormGroup>\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n      <DialogActions>\r\n        <Button onClick={onCancelChanges} color='primary'>\r\n          Cancel\r\n        </Button>\r\n        <Button onClick={onApplyChanges} color='primary'>\r\n          Save\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport const PopupEditing = React.memo(({ popupComponent: Popup }: any) => (\r\n  <Plugin>\r\n    <Template name='popupEditing'>\r\n      <TemplateConnector>\r\n        {(\r\n          { rows, getRowId, editingRowIds, createRowChange, rowChanges },\r\n          { changeRow, commitChangedRows, stopEditRows, cancelChangedRows }\r\n        ) => {\r\n          let editedRow: any;\r\n          let rowId: number;\r\n          [rowId] = editingRowIds;\r\n          const targetRow = rows.filter(\r\n            (row: any) => getRowId(row) === rowId\r\n          )[0];\r\n          editedRow = { ...targetRow, ...rowChanges[rowId] };\r\n\r\n          const processValueChange = ({ target: { name, value } }: any) => {\r\n            const changeArgs = {\r\n              rowId,\r\n              change: createRowChange(editedRow, value, name),\r\n            };\r\n            changeRow(changeArgs);\r\n          };\r\n          const rowIds = editingRowIds;\r\n          const applyChanges = () => {\r\n            stopEditRows({ rowIds });\r\n            commitChangedRows({ rowIds });\r\n          };\r\n          const cancelChanges = () => {\r\n            stopEditRows({ rowIds });\r\n            cancelChangedRows({ rowIds });\r\n          };\r\n\r\n          const open = editingRowIds.length > 0;\r\n          return (\r\n            <Popup\r\n              open={open}\r\n              row={editedRow}\r\n              onChange={processValueChange}\r\n              onApplyChanges={applyChanges}\r\n              onCancelChanges={cancelChanges}\r\n            />\r\n          );\r\n        }}\r\n      </TemplateConnector>\r\n    </Template>\r\n    <Template name='root'>\r\n      <TemplatePlaceholder />\r\n      <TemplatePlaceholder name='popupEditing' />\r\n    </Template>\r\n  </Plugin>\r\n));\r\n","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { IRootState } from \"redux/reducers\";\r\nimport { writeSimulatedDataToDb } from \"services/firebase\";\r\n\r\nimport { getKeyValue } from \"get-key-value\";\r\nimport theme from \"styles/theme\";\r\n\r\nimport {\r\n  Theme,\r\n  createStyles,\r\n  makeStyles,\r\n  withStyles,\r\n  emphasize,\r\n} from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport Input from \"@material-ui/core/Input\";\r\n\r\nimport {\r\n  SortingState,\r\n  IntegratedSorting,\r\n  IntegratedFiltering,\r\n  SearchState,\r\n  DataTypeProvider,\r\n  GroupingState,\r\n  IntegratedGrouping,\r\n  SummaryState,\r\n  IntegratedSummary,\r\n  TableGroupRowProps,\r\n  EditingState,\r\n  TreeDataState,\r\n  CustomTreeData,\r\n} from \"@devexpress/dx-react-grid\";\r\nimport {\r\n  Grid,\r\n  TableHeaderRow,\r\n  VirtualTable,\r\n  Toolbar,\r\n  SearchPanel,\r\n  ColumnChooser,\r\n  TableColumnVisibility,\r\n  TableFixedColumns,\r\n  TableGroupRow,\r\n  TableSummaryRow,\r\n  GroupingPanel,\r\n  TableEditColumn,\r\n  TableEditRow,\r\n  TableTreeColumn,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\n\r\nimport _, { update } from \"lodash\";\r\n\r\nimport ColumnData from \"./ColumnData\";\r\nimport {\r\n  GroupCell,\r\n  SummaryCell,\r\n  LookupEditCell,\r\n  EditCell,\r\n  MaterialProductCell,\r\n} from \"components/TableUtilities/CustomCells\";\r\nimport {\r\n  DecimalTypeProvider,\r\n  SortLabel,\r\n  SimulatedFieldTypeProvider,\r\n} from \"components/TableUtilities/Formatters\";\r\nimport { Popup, PopupEditing } from \"components/TableUtilities/EditPlugin\";\r\nimport allActions from \"redux/actions\";\r\nimport { mergeSimulatedDataIntoMaterialProducts } from \"helpers/materialHelpers\";\r\n\r\ninterface Props {\r\n  data: IMaterialTableRow[];\r\n}\r\n\r\nconst getRowId = (row: any) => row.idmaterialInventory;\r\n\r\nconst getHiddenColumnsFilteringExtensions = (hiddenColumnNames: string[]) =>\r\n  hiddenColumnNames.map((columnName) => ({\r\n    columnName,\r\n    predicate: () => false,\r\n  }));\r\n\r\nconst EditButton = ({ onExecute }: any) => (\r\n  <Tooltip title='Edit material'>\r\n    <IconButton onClick={onExecute}>\r\n      <EditIcon />\r\n    </IconButton>\r\n  </Tooltip>\r\n);\r\n\r\nconst commandComponents: any = {\r\n  edit: EditButton,\r\n};\r\n\r\nconst Command = ({ id, onExecute }: any) => {\r\n  const CommandButton = commandComponents[id];\r\n  return <CommandButton onExecute={onExecute} />;\r\n};\r\n\r\nconst CustomTreeCell = ({ row, style, ...props }: any) => (\r\n  <TableTreeColumn.Cell\r\n    {...props}\r\n    style={{\r\n      fontWeight: row.parentId === null ? \"bold\" : undefined,\r\n      ...style,\r\n    }}\r\n  />\r\n);\r\n\r\nconst ProductTable = (props: Props) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const selectedBuildings = useSelector(\r\n    (state: IRootState) => state.selectedBuildings\r\n  );\r\n  const materialProducts = useSelector(\r\n    (state: IRootState) => state.materialProducts\r\n  );\r\n  const simulatedMaterialProducts = useSelector(\r\n    (state: IRootState) => state.simulatedMaterialProducts\r\n  );\r\n  const simulatedData = useSelector((state: IRootState) => state.simulatedData);\r\n  const isSimulationModeActive = useSelector(\r\n    (state: IRootState) => state.isSimulationModeActive\r\n  );\r\n\r\n  const [rows, setRows] = useState<IMaterialTableRow[]>([]);\r\n  const [columns] = useState(ColumnData.columns);\r\n  const [columnExtensions] = useState(ColumnData.columnExtensions);\r\n  const [defaultHiddenColumnNames] = useState(\r\n    ColumnData.defaultHiddenColumnNames\r\n  );\r\n  const [tableColumnVisibilityColumnExtensions] = useState(\r\n    ColumnData.tableColumnVisibilityColumnExtensions\r\n  );\r\n\r\n  const [decimalColumns] = useState(ColumnData.decimalColumns);\r\n\r\n  useEffect(() => {\r\n    // console.log(\"Useeffect, props: \", props.data)\r\n    setRows(props.data);\r\n  }, [props.data]);\r\n\r\n  const [searchTerm, setSearchTerm] = useState<string>();\r\n\r\n  const changeSearchTerm = (value: any) => {\r\n    console.log(\"Changed search term: \", value);\r\n    setSearchTerm(value);\r\n  };\r\n\r\n  // Delays query so it is not fired on every keystroke\r\n  const delayedCallback = useCallback(_.debounce(changeSearchTerm, 300), []);\r\n\r\n  // Only search in visible columns\r\n  const [filteringColumnExtensions, setFilteringColumnExtensions] = useState(\r\n    getHiddenColumnsFilteringExtensions(defaultHiddenColumnNames)\r\n  );\r\n\r\n  const onHiddenColumnNamesChange = (hiddenColumnNames: string[]) =>\r\n    setFilteringColumnExtensions(\r\n      getHiddenColumnsFilteringExtensions(hiddenColumnNames)\r\n    );\r\n\r\n  const [expandedRowIds, setExpandedRowIds] = useState<(string | number)[]>([]);\r\n\r\n  const [leftFixedColumns] = useState([TableEditColumn.COLUMN_TYPE, \"name\"]);\r\n\r\n  const getChildRows = (row: any, rootRows: any) => {\r\n    const childRows = rootRows.filter(\r\n      (r: any) => r.parentId === (row ? row.idmaterialInventory : null)\r\n    );\r\n    return childRows.length ? childRows : null;\r\n  };\r\n\r\n  const commitChanges = ({ changed }: any) => {\r\n    console.log(\"Changed: \", changed);\r\n    const changedRowId = Object.keys(changed)[0];\r\n    const originalRow = (materialProducts as IMaterialTableRow[]).find(\r\n      (row) => String(row.idmaterialInventory) === changedRowId\r\n    );\r\n\r\n    if (Object.values(changed)[0] !== undefined && originalRow !== undefined) {\r\n      const updatedSimulatedData: ISimulatedData = {\r\n        ...simulatedData,\r\n        ...changed,\r\n      };\r\n\r\n      for (const [key, value] of Object.entries(\r\n        updatedSimulatedData[changedRowId]\r\n      )) {\r\n        const originalValue = getKeyValue<\r\n          keyof IMaterialTableRow,\r\n          IMaterialTableRow\r\n        >(key as any, originalRow);\r\n        // Remove field from simulated data if has been reset to original value\r\n        if (value === originalValue) {\r\n          delete updatedSimulatedData[changedRowId][key];\r\n        }\r\n      }\r\n\r\n      // Remove simulated data row if all fields havs been removed it\r\n      if (Object.keys(updatedSimulatedData[changedRowId]).length === 0) {\r\n        delete updatedSimulatedData[changedRowId];\r\n      }\r\n\r\n      const updatedSimulatedMaterialProducts = mergeSimulatedDataIntoMaterialProducts(\r\n        materialProducts as IMaterialTableRow[],\r\n        updatedSimulatedData\r\n      );\r\n\r\n      const selectedBuildingId = String(selectedBuildings[0].idbuildings);\r\n      writeSimulatedDataToDb(selectedBuildingId, updatedSimulatedData);\r\n      dispatch(\r\n        allActions.elementAndMaterialActions.setSimulatedData(\r\n          updatedSimulatedData\r\n        )\r\n      );\r\n      dispatch(\r\n        allActions.elementAndMaterialActions.setSimulatedMaterialProducts(\r\n          updatedSimulatedMaterialProducts\r\n        )\r\n      );\r\n      setRows(updatedSimulatedMaterialProducts);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Grid rows={rows} columns={columns} getRowId={getRowId}>\r\n      {/* <SimulatedFieldTypeProvider for={decimalColumns} /> */}\r\n      <TreeDataState\r\n        expandedRowIds={expandedRowIds}\r\n        onExpandedRowIdsChange={setExpandedRowIds}\r\n      />\r\n      <CustomTreeData getChildRows={getChildRows} />\r\n      <SearchState onValueChange={delayedCallback} />\r\n      <IntegratedFiltering columnExtensions={filteringColumnExtensions} />\r\n      <SortingState />\r\n      <IntegratedSorting />\r\n      <EditingState onCommitChanges={commitChanges} />\r\n      <VirtualTable\r\n        columnExtensions={columnExtensions}\r\n        cellComponent={\r\n          isSimulationModeActive\r\n            ? (props) => MaterialProductCell(props, simulatedData)\r\n            : (props) => <VirtualTable.Cell {...props} />\r\n        }\r\n      />\r\n\r\n      <DecimalTypeProvider for={decimalColumns} />\r\n      <TableHeaderRow showSortingControls sortLabelComponent={SortLabel} />\r\n      <TableTreeColumn for='name' cellComponent={CustomTreeCell} />\r\n      <TableEditColumn\r\n        showEditCommand={isSimulationModeActive}\r\n        commandComponent={Command}\r\n        cellComponent={EditCell}\r\n        width={isSimulationModeActive ? 70 : 0.1}\r\n      />\r\n      <TableFixedColumns leftColumns={leftFixedColumns} />\r\n      <PopupEditing popupComponent={Popup} />\r\n      <TableColumnVisibility\r\n        defaultHiddenColumnNames={defaultHiddenColumnNames}\r\n        columnExtensions={tableColumnVisibilityColumnExtensions}\r\n        onHiddenColumnNamesChange={onHiddenColumnNamesChange}\r\n      />\r\n      <Toolbar />\r\n      <SearchPanel />\r\n      <ColumnChooser />\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default ProductTable;\r\n","import React, { useState, useEffect, useRef, useCallback } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { IRootState } from \"redux/reducers\";\r\nimport allActions from \"redux/actions\";\r\n\r\nimport { Theme, createStyles, makeStyles } from \"@material-ui/core/styles\";\r\nimport theme from \"styles/theme\";\r\n\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {\r\n  Chart,\r\n  Series,\r\n  CommonSeriesSettings,\r\n  Legend,\r\n  ArgumentAxis,\r\n  ValueAxis,\r\n  Title,\r\n  Tooltip,\r\n  Size,\r\n  Label,\r\n  ScrollBar,\r\n  ZoomAndPan,\r\n} from \"devextreme-react/chart\";\r\n\r\nimport {\r\n  createMaterialChartData,\r\n  sortByEE,\r\n  wrapArgumentAxisLabel,\r\n} from \"helpers/materialHelpers\";\r\nimport { customizeHint } from \"components/ChartComponents\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    chart: {\r\n      padding: theme.spacing(2),\r\n    },\r\n    argumentAxisLabel: {\r\n      fill: \"#767676\",\r\n    },\r\n  })\r\n);\r\n\r\ninterface Props {\r\n  data: IMaterialChartItem[];\r\n}\r\n\r\nconst ProductChart = (props: Props) => {\r\n  const chartRef = useRef<Chart>(null);\r\n\r\n  var renderOptions = {\r\n    force: true, // forces redrawing\r\n    animate: true, // redraws the UI component with animation\r\n  };\r\n\r\n  const resizeObserver = useRef<ResizeObserver>(\r\n    new ResizeObserver((entries: ResizeObserverEntry[]) => {\r\n      // your code to handle the size change\r\n      console.log(\"Size changed\");\r\n      chartRef?.current?.instance.render(renderOptions);\r\n    })\r\n  );\r\n\r\n  const resizedContainerRef = useCallback(\r\n    (container: HTMLDivElement) => {\r\n      if (container !== null) {\r\n        resizeObserver.current.observe(container);\r\n      }\r\n      // When element is unmounted, ref callback is called with a null argument\r\n      // => best time to cleanup the observer\r\n      else {\r\n        if (resizeObserver.current) resizeObserver.current.disconnect();\r\n      }\r\n    },\r\n    [resizeObserver.current]\r\n  );\r\n\r\n  const [chartData, setChartData] = useState<IMaterialChartItem[]>([]);\r\n  const [visualRange, setVisualRange] = useState<String[]>([]);\r\n  const isSimulationModeActive = useSelector(\r\n    (state: IRootState) => state.isSimulationModeActive\r\n  );\r\n  const simulatedData = useSelector((state: IRootState) => state.simulatedData);\r\n  const simulatedMaterialProducts = useSelector(\r\n    (state: IRootState) => state.simulatedMaterialProducts\r\n  );\r\n\r\n  useEffect(() => {\r\n    const sortedChartData = sortByEE(props.data) as IMaterialChartItem[];\r\n    setChartData(sortedChartData);\r\n    if (sortedChartData.length > 9) {\r\n      let range = [\r\n        sortedChartData[sortedChartData.length - 1]?.name,\r\n        sortedChartData[sortedChartData.length - 11]?.name,\r\n      ];\r\n      setVisualRange(range);\r\n    }\r\n  }, [props.data]);\r\n\r\n  const customizeTooltip = (arg: any) => {\r\n    return {\r\n      text: `<b>${arg.seriesName}</b>\\n ${arg.valueText}`,\r\n    };\r\n  };\r\n\r\n  const labelToMaterialId = (label: string): number => {\r\n    return (\r\n      (simulatedMaterialProducts as IMaterialTableRow[]).find(\r\n        (material) => material.name === label\r\n      )?.idmaterialInventory || 0\r\n    );\r\n  };\r\n\r\n  const onDrawn = (e: any) => {\r\n    if (isSimulationModeActive) {\r\n      // Color emission series if contains simulated values\r\n      e.element\r\n        .querySelector(\".dxc-arg-elements\")\r\n        .childNodes.forEach((el: any) => {\r\n          // const fieldName = labelToFieldname(el.innerHTML);\r\n          var labelText = \"\";\r\n          if (el.childNodes.length > 1) {\r\n            let spans: string[] = [];\r\n            el.childNodes.forEach((subEl: any) => {\r\n              spans.push(subEl.innerHTML);\r\n            });\r\n            labelText = spans.join(\" \");\r\n          } else {\r\n            labelText = el.innerHTML;\r\n          }\r\n\r\n          if (labelToMaterialId(labelText) in simulatedData) {\r\n            el.style.fill = theme.palette.simulated.main;\r\n            el.style.fontWeight = 500;\r\n          }\r\n        });\r\n    }\r\n  };\r\n\r\n  const handleOptionChange = (e: any) => {\r\n    if (e.fullName === \"argumentAxis.visualRange\") {\r\n      if (!visualRange.length) return;\r\n      const range = e.value;\r\n      setVisualRange(range);\r\n    }\r\n  };\r\n\r\n  const height = 200 + chartData.length * 30;\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Paper ref={resizedContainerRef}>\r\n      <Chart\r\n        className={classes.chart}\r\n        // title=\"Embodied emissions\"\r\n        dataSource={chartData}\r\n        palette='Material'\r\n        rotated={true}\r\n        onDrawn={onDrawn}\r\n        ref={chartRef}\r\n        onOptionChanged={handleOptionChange}\r\n      >\r\n        <Size height={500} />\r\n        <CommonSeriesSettings\r\n          argumentField='name'\r\n          type='stackedBar'\r\n          barWidth={40}\r\n          hoverMode='allArgumentPoints'\r\n        ></CommonSeriesSettings>\r\n        <Series valueField='A1A3' name='A1-A3' />\r\n        <Series valueField='A4' name='A4' />\r\n        <Series valueField='B4_m' name='B4 (m)' />\r\n        <Series valueField='B4_t' name='B4 (t)' />\r\n        <ValueAxis>\r\n          <Title\r\n            text={\"kgCO2e\"}\r\n            font={{\r\n              size: 14,\r\n            }}\r\n          />\r\n        </ValueAxis>\r\n        <ArgumentAxis visualRange={visualRange}>\r\n          <Label customizeText={wrapArgumentAxisLabel} />\r\n        </ArgumentAxis>\r\n        <ScrollBar visible={visualRange.length} />\r\n        <ZoomAndPan argumentAxis='pan' />\r\n        <Legend\r\n          verticalAlignment='bottom'\r\n          horizontalAlignment='center'\r\n          itemTextPosition='top'\r\n          customizeHint={customizeHint}\r\n        />\r\n        <Tooltip\r\n          enabled={true}\r\n          location='edge'\r\n          customizeTooltip={customizeTooltip}\r\n          zIndex={1200}\r\n          arrowLength={6}\r\n          format={{\r\n            format: (value: string) => parseFloat(value).toLocaleString(),\r\n          }}\r\n          interactive\r\n        />\r\n      </Chart>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default ProductChart;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { IRootState } from \"redux/reducers\";\r\nimport allActions from \"redux/actions\";\r\n\r\nimport { Theme, createStyles, makeStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\nimport ProductTable from \"./ProductTable\";\r\nimport ProductChart from \"./ProductChart\";\r\nimport {\r\n  groupByMaterial,\r\n  createChildRows,\r\n  createMaterialChartData,\r\n} from \"helpers/materialHelpers\";\r\n\r\ninterface Props {\r\n  materials?: IMaterialInventory[];\r\n}\r\n\r\nconst ProductView = (props: Props) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const displayMode = useSelector((state: IRootState) => state.displayMode);\r\n  const materialInventory = useSelector(\r\n    (state: IRootState) => state.materialInventory\r\n  );\r\n  const materialProducts = useSelector(\r\n    (state: IRootState) => state.materialProducts\r\n  );\r\n  const simulatedMaterialProducts = useSelector(\r\n    (state: IRootState) => state.simulatedMaterialProducts\r\n  );\r\n  const isSimulationModeActive = useSelector(\r\n    (state: IRootState) => state.isSimulationModeActive\r\n  );\r\n  const simulatedData = useSelector((state: IRootState) => state.simulatedData);\r\n\r\n  const [tableData, setTableData] = useState<IMaterialTableRow[]>([]);\r\n  const [chartData, setChartData] = useState<IMaterialChartItem[]>([]);\r\n\r\n  useEffect(() => {\r\n    let groupedMaterials;\r\n    if (isSimulationModeActive) {\r\n      groupedMaterials = simulatedMaterialProducts;\r\n    } else {\r\n      groupedMaterials = props.materials\r\n        ? groupByMaterial(props.materials)\r\n        : materialProducts;\r\n    }\r\n    const childRows = createChildRows(props.materials ?? materialInventory);\r\n    const treeData = (groupedMaterials as IMaterialTableRow[]).concat(\r\n      childRows as IMaterialTableRow[]\r\n    );\r\n\r\n    const chartData = createMaterialChartData(groupedMaterials);\r\n    setTableData(treeData);\r\n    setChartData(chartData);\r\n  }, [isSimulationModeActive, simulatedData]);\r\n\r\n  return (\r\n    <div>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs>\r\n          {displayMode == \"table\" ? (\r\n            <Paper>\r\n              <ProductTable data={tableData} />\r\n            </Paper>\r\n          ) : (\r\n            <ProductChart data={chartData} />\r\n          )}\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProductView;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { IRootState } from \"redux/reducers\";\r\nimport allActions from \"redux/actions\";\r\n\r\nimport {\r\n  Theme,\r\n  createStyles,\r\n  makeStyles,\r\n  withStyles,\r\n  emphasize,\r\n} from \"@material-ui/core/styles\";\r\nimport { palette } from \"@material-ui/system\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Breadcrumbs from \"@material-ui/core/Breadcrumbs\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\nimport InfoOutlinedIcon from \"@material-ui/icons/InfoOutlined\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport NavigateBeforeIcon from \"@material-ui/icons/NavigateBefore\";\r\nimport NavigateNextIcon from \"@material-ui/icons/NavigateNext\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\n\r\nimport ElementsTable from \"./ElementsTable\";\r\nimport ElementsChart from \"./ElementsChart\";\r\nimport ProductView from \"../ProductView\";\r\n\r\nimport { getChildElements, getElementMaterials } from \"helpers/materialHelpers\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    breadCrumbs: {\r\n      marginTop: \"3px\",\r\n    },\r\n    infoIcon: {\r\n      color: theme.palette.text.secondary,\r\n    },\r\n    infoContainer: {\r\n      marginBottom: theme.spacing(1),\r\n    },\r\n    infoIconGridItem: {\r\n      height: \"28px\",\r\n    },\r\n  })\r\n);\r\n\r\nconst StyledBreadcrumb = withStyles((theme: Theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.grey[100],\r\n    height: theme.spacing(3),\r\n    color: theme.palette.grey[800],\r\n    fontWeight: theme.typography.fontWeightRegular,\r\n    \"&:hover, &:focus\": {\r\n      backgroundColor: theme.palette.grey[300],\r\n    },\r\n    \"&:active\": {\r\n      boxShadow: theme.shadows[1],\r\n      backgroundColor: emphasize(theme.palette.grey[300], 0.12),\r\n    },\r\n  },\r\n}))(Chip) as typeof Chip; // TypeScript only: need a type cast here because https://github.com/Microsoft/TypeScript/issues/26591\r\n\r\nconst StyledBreadcrumbActive = withStyles((theme: Theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.secondary.light,\r\n    height: theme.spacing(3),\r\n    // color: theme.palette.grey[800],\r\n    fontWeight: theme.typography.fontWeightRegular,\r\n    \"&:hover, &:focus\": {\r\n      // backgroundColor: theme.palette.grey[300],\r\n    },\r\n    \"&:active\": {\r\n      boxShadow: theme.shadows[1],\r\n      // backgroundColor: emphasize(theme.palette.grey[300], 0.12),\r\n    },\r\n  },\r\n}))(Chip) as typeof Chip;\r\n\r\nconst BuildingElementsView = (props: any) => {\r\n  const dispatch = useDispatch();\r\n  const buildingElements = useSelector(\r\n    (state: IRootState) => state.buildingElements\r\n  );\r\n  const materialInventory = useSelector(\r\n    (state: IRootState) => state.materialInventory\r\n  );\r\n  const selectedBuildingElement = useSelector(\r\n    (state: IRootState) => state.selectedBuildingElement\r\n  );\r\n  const elementRoute = useSelector(\r\n    (state: IRootState) => state.buildingElementRoute\r\n  );\r\n  const displayMode = useSelector((state: IRootState) => state.displayMode);\r\n\r\n  useEffect(() => {\r\n    const rootElement = buildingElements.find(\r\n      (element: IBuildingElement) => element.hierarchy === 0\r\n    );\r\n    if (rootElement !== undefined) {\r\n      dispatch(\r\n        allActions.elementAndMaterialActions.selectBuildingElement(rootElement)\r\n      );\r\n      dispatch(\r\n        allActions.elementAndMaterialActions.setElementRoute([rootElement])\r\n      );\r\n    }\r\n  }, []);\r\n\r\n  const handleBreadcrumbClick = (index: number) => {\r\n    var tempRoute = elementRoute.slice(0, index + 1);\r\n    dispatch(\r\n      allActions.elementAndMaterialActions.selectBuildingElement(\r\n        tempRoute[tempRoute.length - 1]\r\n      )\r\n    );\r\n    dispatch(allActions.elementAndMaterialActions.setElementRoute(tempRoute));\r\n  };\r\n\r\n  const [poppedRouteItem, setPoppedRouteItem] = useState<IBuildingElement>();\r\n\r\n  const navigateBack = () => {\r\n    var tempRoute = elementRoute;\r\n    setPoppedRouteItem(tempRoute.pop());\r\n    dispatch(\r\n      allActions.elementAndMaterialActions.selectBuildingElement(\r\n        tempRoute[tempRoute.length - 1]\r\n      )\r\n    );\r\n    dispatch(allActions.elementAndMaterialActions.setElementRoute(tempRoute));\r\n  };\r\n\r\n  const navigateForward = () => {\r\n    var tempRoute = elementRoute;\r\n    if (poppedRouteItem !== undefined) tempRoute.push(poppedRouteItem);\r\n    dispatch(\r\n      allActions.elementAndMaterialActions.selectBuildingElement(\r\n        tempRoute[tempRoute.length - 1]\r\n      )\r\n    );\r\n    dispatch(allActions.elementAndMaterialActions.setElementRoute(tempRoute));\r\n  };\r\n\r\n  const childElements = getChildElements(\r\n    buildingElements,\r\n    selectedBuildingElement\r\n  );\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div>\r\n      <Grid container spacing={3} alignItems='center'>\r\n        <Grid item>\r\n          <Tooltip title='Back'>\r\n            <span>\r\n              <IconButton\r\n                size='small'\r\n                onClick={navigateBack}\r\n                disabled={elementRoute.length < 2}\r\n              >\r\n                <NavigateBeforeIcon />\r\n              </IconButton>\r\n            </span>\r\n          </Tooltip>\r\n          <Tooltip title='Forward'>\r\n            <span>\r\n              <IconButton\r\n                size='small'\r\n                onClick={navigateForward}\r\n                disabled={true}\r\n              >\r\n                <NavigateNextIcon />\r\n              </IconButton>\r\n            </span>\r\n          </Tooltip>\r\n        </Grid>\r\n        <Grid item xs={10}>\r\n          <Breadcrumbs>\r\n            {elementRoute.map((element, index) =>\r\n              index !== elementRoute.length - 1 ? (\r\n                <StyledBreadcrumb\r\n                  className={classes.breadCrumbs}\r\n                  key={index}\r\n                  label={element.idlevels + \" - \" + element.name}\r\n                  variant='default'\r\n                  icon={\r\n                    element.idlevels === 0 ? (\r\n                      <HomeIcon fontSize='small' />\r\n                    ) : undefined\r\n                  }\r\n                  color={\r\n                    index === elementRoute.length - 1 ? \"secondary\" : \"default\"\r\n                  }\r\n                  onClick={() => handleBreadcrumbClick(index)}\r\n                />\r\n              ) : (\r\n                <StyledBreadcrumbActive\r\n                  className={classes.breadCrumbs}\r\n                  key={index}\r\n                  label={element.idlevels + \" - \" + element.name}\r\n                  variant='default'\r\n                  icon={\r\n                    element.idlevels === 0 ? (\r\n                      <HomeIcon fontSize='small' />\r\n                    ) : undefined\r\n                  }\r\n                  color='secondary'\r\n                />\r\n              )\r\n            )}\r\n          </Breadcrumbs>\r\n        </Grid>\r\n\r\n        <Grid item xs={12}>\r\n          {childElements?.length ? (\r\n            [\r\n              <Grid\r\n                container\r\n                alignItems='center'\r\n                justify='center'\r\n                spacing={1}\r\n                className={classes.infoContainer}\r\n              >\r\n                <Grid item className={classes.infoIconGridItem}>\r\n                  <InfoOutlinedIcon\r\n                    className={classes.infoIcon}\r\n                    fontSize='small'\r\n                  />\r\n                </Grid>\r\n                <Grid item>\r\n                  <Typography\r\n                    variant='body2'\r\n                    color='textSecondary'\r\n                    align='center'\r\n                  >\r\n                    Click on a building element to see its sub-elements\r\n                  </Typography>\r\n                </Grid>\r\n              </Grid>,\r\n              displayMode === \"table\" ? (\r\n                <React.Fragment>\r\n                  <Paper>\r\n                    <ElementsTable />\r\n                  </Paper>\r\n                </React.Fragment>\r\n              ) : (\r\n                <ElementsChart />\r\n              ),\r\n            ]\r\n          ) : (\r\n            <ProductView\r\n              materials={getElementMaterials(\r\n                materialInventory,\r\n                selectedBuildingElement\r\n              )}\r\n            />\r\n          )}\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BuildingElementsView;\r\n","import { Column, EditingState } from \"@devexpress/dx-react-grid\";\r\nimport { Table } from \"@devexpress/dx-react-grid-material-ui\";\r\n\r\nclass ColumnData {\r\n  static readonly columns: Column[] = [\r\n    { name: \"name\", title: \"Name\" },\r\n    // { name: \"idmaterialInventory\", title: \"ID\" },\r\n    { name: \"quantity\", title: \"Quantity\" },\r\n    { name: \"FU\", title: \"FU\" },\r\n    { name: \"materialCat\", title: \"Category\" },\r\n    { name: \"sourceType\", title: \"Data source\" },\r\n    { name: \"RSL_mi\", title: \"RSL\" },\r\n    { name: \"A1A3\", title: \"A1-A3\" },\r\n    { name: \"A4\", title: \"A4\" },\r\n    { name: \"B4_m\", title: \"B4 (m)\" },\r\n    { name: \"B4_t\", title: \"B4 (t)\" },\r\n    // { name: \"RSL\", title: \"RSL\" },\r\n    { name: \"source\", title: \"Source\" },\r\n    { name: \"dataType\", title: \"Data type\" },\r\n    { name: \"dataYear\", title: \"Data year\" },\r\n    { name: \"density\", title: \"Density\" },\r\n    { name: \"EEf_A1A3\", title: \"EEf_A1A3\" },\r\n    { name: \"country\", title: \"Country\" },\r\n    { name: \"city\", title: \"City\" },\r\n    { name: \"comments\", title: \"Comments\" },\r\n    // { name: \"buildingElementName\", title: \"Building element\" },\r\n  ];\r\n\r\n  static readonly columnExtensions: Table.ColumnExtension[] = [\r\n    { columnName: \"idmaterialInventory\", width: 80},\r\n    { columnName: \"name\", width: 270, wordWrapEnabled: true },\r\n    { columnName: \"dataType\", width: 120 },\r\n    { columnName: \"sourceType\", width: 120 },\r\n    { columnName: \"source\", width: 200, wordWrapEnabled: true },\r\n    { columnName: \"dataYear\", width: 100 },\r\n    { columnName: \"FU\", width: 70 },\r\n    { columnName: \"EEf_A1A3\", width: 110 },\r\n    // { columnName: \"RSL\", width: 80 },\r\n    { columnName: \"comments\", width: 400 },\r\n    { columnName: \"materialCat\", width: 150 },\r\n    { columnName: \"quantity\", width: 130 },\r\n    { columnName: \"RSL_mi\", width: 80 },\r\n    { columnName: \"A1A3\", width: 130 },\r\n    { columnName: \"A4\", width: 130 },\r\n    { columnName: \"B4_m\", width: 130 },\r\n    { columnName: \"B4_t\", width: 130 },\r\n    { columnName: \"buildingElementName\", width: 160, wordWrapEnabled: true },\r\n  ];\r\n\r\n  static readonly defaultHiddenColumnNames: string[] = [\r\n    \"source\",\r\n    // \"RSL\",\r\n    \"dataType\",\r\n    \"dataYear\",\r\n    \"comments\",\r\n    \"EEf_A1A3\",\r\n    \"density\",\r\n    \"country\",\r\n    \"city\"\r\n  ];\r\n\r\n  static readonly tableColumnVisibilityColumnExtensions = [\r\n    { columnName: \"name\", togglingEnabled: false },\r\n  ];\r\n\r\n  static readonly decimalColumns = [\r\n    \"quantity\",\r\n    \"EEf_A1A3\",\r\n    \"A1A3\",\r\n    \"A4\",\r\n    \"B4_t\",\r\n    \"B4_m\",\r\n    \"RSL_mi\"\r\n  ];\r\n\r\n  static readonly groupSummaryItems = [\r\n    {\r\n      columnName: \"quantity\",\r\n      type: \"sum\",\r\n      showInGroupFooter: false,\r\n      alignByColumn: true,\r\n    },\r\n    {\r\n      columnName: \"FU\",\r\n      type: \"staticValue\",\r\n      showInGroupFooter: false,\r\n      alignByColumn: true,\r\n    },\r\n    {\r\n      columnName: \"sourceType\",\r\n      type: \"staticValue\",\r\n      showInGroupFooter: false,\r\n      alignByColumn: true,\r\n    },\r\n    /* {\r\n      columnName: \"materialCat\",\r\n      type: \"staticValue\",\r\n      showInGroupFooter: false,\r\n      alignByColumn: true,\r\n    }, */\r\n    {\r\n      columnName: \"RSL_mi\",\r\n      type: \"avg\",\r\n      showInGroupFooter: false,\r\n      alignByColumn: true,\r\n    },\r\n    {\r\n      columnName: \"A1A3\",\r\n      type: \"sum\",\r\n      showInGroupFooter: false,\r\n      alignByColumn: true,\r\n    },\r\n    {\r\n      columnName: \"A4\",\r\n      type: \"sum\",\r\n      showInGroupFooter: false,\r\n      alignByColumn: true,\r\n    },\r\n    {\r\n      columnName: \"B4_m\",\r\n      type: \"sum\",\r\n      showInGroupFooter: false,\r\n      alignByColumn: true,\r\n    },\r\n    {\r\n      columnName: \"B4_t\",\r\n      type: \"sum\",\r\n      showInGroupFooter: false,\r\n      alignByColumn: true,\r\n    },\r\n  ];\r\n\r\n  static readonly editingStateColumnExtensions: EditingState.ColumnExtension[] = [\r\n    { columnName: \"idmaterialInventory\", editingEnabled: false},\r\n    { columnName: \"name\", editingEnabled: false},\r\n    { columnName: \"buildingElementName\", editingEnabled: false},\r\n    // { columnName: \"quantity\", editingEnabled: false},\r\n    { columnName: \"FU\", editingEnabled: false},\r\n    // { columnName: \"sourceType\", editingEnabled: false},\r\n    // { columnName: \"RSL\", editingEnabled: false},\r\n    { columnName: \"materialCat\", editingEnabled: false},\r\n    { columnName: \"RSL_mi\", editingEnabled: false},\r\n    // { columnName: \"EEf_A1A3\", editingEnabled: false},\r\n    // { columnName: \"A1A3\", editingEnabled: false},\r\n    // { columnName: \"A4\", editingEnabled: false},\r\n    // { columnName: \"B4_m\", editingEnabled: false},\r\n    // { columnName: \"B4_t\", editingEnabled: false},\r\n    { columnName: \"dataType\",  editingEnabled: false},\r\n    { columnName: \"dataYear\", editingEnabled: false},\r\n    { columnName: \"comments\", editingEnabled: false},\r\n  ];\r\n}\r\n\r\nexport default ColumnData;\r\n","import React from \"react\";\r\nimport ChevronRight from \"@material-ui/icons/ChevronRight\";\r\nimport ExpandMore from \"@material-ui/icons/ExpandMore\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Input from \"@material-ui/core/Input\";\r\n\r\nimport {\r\n  Theme,\r\n  createStyles,\r\n  makeStyles,\r\n  withStyles,\r\n  emphasize,\r\n} from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    cell: {\r\n      padding: theme.spacing(1),\r\n    },\r\n    indentCell: {\r\n      padding: 0,\r\n    },\r\n    groupButton: {\r\n      height: theme.spacing(4),\r\n      width: theme.spacing(4),\r\n    },\r\n    lookupEditCell: {\r\n      padding: theme.spacing(1),\r\n    },\r\n    inputRoot: {\r\n      width: \"100%\",\r\n    },\r\n    selectMenu: {\r\n      position: \"absolute !important\" as \"absolute\",\r\n    },\r\n  })\r\n);\r\n\r\nexport const GroupCell = ({\r\n  style,\r\n  colSpan,\r\n  row,\r\n  column,\r\n  expanded,\r\n  onToggle,\r\n  classes,\r\n  children,\r\n  className,\r\n  tableRow,\r\n  tableColumn,\r\n  contentComponent,\r\n  iconComponent,\r\n  indentCellComponent,\r\n  inlineSummaryComponent,\r\n  inlineSummaryItemComponent,\r\n  summaryCellComponent,\r\n  summaryItemComponent,\r\n  containerComponent,\r\n  inlineSummaries,\r\n  getMessage,\r\n  ...restProps\r\n}: any) => {\r\n  const handleClick = () => onToggle();\r\n  const styles = useStyles();\r\n  return (\r\n    <TableCell\r\n      colSpan={colSpan}\r\n      style={style}\r\n      className={styles.cell}\r\n      onClick={handleClick}\r\n      {...restProps}\r\n    >\r\n      <Grid container alignItems='center' justify='space-around'>\r\n        <Grid item xs={2}>\r\n          <IconButton className={styles.groupButton}>\r\n            {expanded ? <ExpandMore /> : <ChevronRight />}\r\n          </IconButton>\r\n        </Grid>\r\n        <Grid item xs={10}>\r\n          <span>\r\n            <strong>{children || row.value}</strong>\r\n          </span>\r\n        </Grid>\r\n      </Grid>\r\n    </TableCell>\r\n  );\r\n};\r\n\r\nexport const SummaryCell = ({\r\n  style,\r\n  colSpan,\r\n  row,\r\n  column,\r\n  expanded,\r\n  onToggle,\r\n  classes,\r\n  children,\r\n  className,\r\n  tableRow,\r\n  tableColumn,\r\n  contentComponent,\r\n  iconComponent,\r\n  indentCellComponent,\r\n  inlineSummaryComponent,\r\n  inlineSummaryItemComponent,\r\n  summaryCellComponent,\r\n  summaryItemComponent,\r\n  containerComponent,\r\n  inlineSummaries,\r\n  getMessage,\r\n  ...restProps\r\n}: any) => {\r\n  const styles = useStyles();\r\n  const handleClick = () => onToggle();\r\n  //   console.log(\"Children: \", children)\r\n  var tooltipTitle: string = \"\";\r\n  switch (children.props.columnSummaries[0].type) {\r\n    case \"sum\":\r\n      tooltipTitle = \"Sum\";\r\n      break;\r\n    case \"avg\":\r\n      tooltipTitle = \"Average\";\r\n      break;\r\n    case \"staticValue\":\r\n      tooltipTitle = \"Static\";\r\n      break;\r\n  }\r\n  return (\r\n    <TableCell\r\n      colSpan={colSpan}\r\n      onClick={handleClick}\r\n      className={styles.cell}\r\n      {...restProps}\r\n    >\r\n      {tooltipTitle === \"Static\" ? (\r\n        <span>{children}</span>\r\n      ) : (\r\n        <Tooltip title={tooltipTitle}>\r\n          <span>{children}</span>\r\n        </Tooltip>\r\n      )}\r\n    </TableCell>\r\n  );\r\n};\r\n\r\nexport const LookupEditCell = ({\r\n  availableColumnValues,\r\n  value,\r\n  onValueChange,\r\n}: any) => (\r\n  <TableCell className={useStyles().lookupEditCell}>\r\n    <Select\r\n      value={value}\r\n      onChange={(event) => onValueChange(event.target.value)}\r\n      MenuProps={{\r\n        className: useStyles().selectMenu,\r\n      }}\r\n      input={<Input classes={{ root: useStyles().inputRoot }} />}\r\n    >\r\n      {availableColumnValues.map((item: any) => (\r\n        <MenuItem key={item} value={item}>\r\n          {item}\r\n        </MenuItem>\r\n      ))}\r\n    </Select>\r\n  </TableCell>\r\n);\r\n","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { IRootState } from \"redux/reducers\";\r\nimport { writeSimulatedDataToDb } from \"services/firebase\";\r\n\r\nimport {\r\n  Theme,\r\n  createStyles,\r\n  makeStyles,\r\n  withStyles,\r\n  emphasize,\r\n} from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport Input from \"@material-ui/core/Input\";\r\n\r\nimport {\r\n  SortingState,\r\n  IntegratedSorting,\r\n  IntegratedFiltering,\r\n  SearchState,\r\n  DataTypeProvider,\r\n  GroupingState,\r\n  IntegratedGrouping,\r\n  SummaryState,\r\n  IntegratedSummary,\r\n  TableGroupRowProps,\r\n  EditingState,\r\n  TreeDataState,\r\n  CustomTreeData,\r\n} from \"@devexpress/dx-react-grid\";\r\nimport {\r\n  Grid,\r\n  TableHeaderRow,\r\n  VirtualTable,\r\n  Toolbar,\r\n  SearchPanel,\r\n  ColumnChooser,\r\n  TableColumnVisibility,\r\n  TableFixedColumns,\r\n  TableGroupRow,\r\n  TableSummaryRow,\r\n  GroupingPanel,\r\n  TableEditColumn,\r\n  TableEditRow,\r\n  TableTreeColumn,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\n\r\nimport _ from \"lodash\";\r\n\r\nimport ColumnData from \"./ColumnData\";\r\nimport { GroupCell, SummaryCell, LookupEditCell } from \"./CustomCells\";\r\n// import { DecimalTypeProvider } from \"./DecimalTypeProvider\";\r\nimport { DecimalTypeProvider, SortLabel } from \"components/TableUtilities/Formatters\";\r\nimport allActions from \"redux/actions\";\r\n\r\ninterface Props {\r\n  materials: IMaterialTableRow[];\r\n}\r\n\r\nconst getRowId = (row: any) => row.idmaterialInventory;\r\n\r\nconst getHiddenColumnsFilteringExtensions = (hiddenColumnNames: string[]) =>\r\n  hiddenColumnNames.map((columnName) => ({\r\n    columnName,\r\n    predicate: () => false,\r\n  }));\r\n\r\nconst CategoryTable = (props: Props) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [columns] = useState(ColumnData.columns);\r\n  const [columnExtensions] = useState(ColumnData.columnExtensions);\r\n  const [defaultHiddenColumnNames] = useState(\r\n    ColumnData.defaultHiddenColumnNames\r\n  );\r\n  const [tableColumnVisibilityColumnExtensions] = useState(\r\n    ColumnData.tableColumnVisibilityColumnExtensions\r\n  );\r\n\r\n  const [decimalColumns] = useState(ColumnData.decimalColumns);\r\n\r\n  const [searchTerm, setSearchTerm] = useState<string>();\r\n\r\n  const changeSearchTerm = (value: any) => {\r\n    console.log(\"Changed search term: \", value);\r\n    setSearchTerm(value);\r\n  };\r\n\r\n  // Delays query so it is not fired on every keystroke\r\n  const delayedCallback = useCallback(_.debounce(changeSearchTerm, 300), []);\r\n\r\n  // Only search in visible columns\r\n  const [filteringColumnExtensions, setFilteringColumnExtensions] = useState(\r\n    getHiddenColumnsFilteringExtensions(defaultHiddenColumnNames)\r\n  );\r\n\r\n  const onHiddenColumnNamesChange = (hiddenColumnNames: string[]) =>\r\n    setFilteringColumnExtensions(\r\n      getHiddenColumnsFilteringExtensions(hiddenColumnNames)\r\n    );\r\n\r\n  const [expandedRowIds, setExpandedRowIds] = useState<(string | number)[]>([]);\r\n\r\n  const [leftFixedColumns] = useState([\"name\"]);\r\n\r\n  const [grouping] = useState([{ columnName: \"materialCat\" }]);\r\n  const [groupSummaryItems] = useState(ColumnData.groupSummaryItems);\r\n\r\n  const groupRowSummaryItem = ({ value }: any) => {\r\n    // Removes summary type label (i.e. \"Sum: \" or \"Count: \")\r\n    var formattedValue;\r\n    if (typeof value === \"string\") {\r\n      formattedValue = value;\r\n    } else {\r\n      // Formats decimal numbers\r\n      formattedValue =\r\n        value && value > 0.0 ? parseFloat(value).toLocaleString() : \"0\";\r\n    }\r\n\r\n    return <strong>{formattedValue}</strong>;\r\n  };\r\n\r\n  const staticValueCalculator = (type: string, rows: any[], getValue: any) => {\r\n    if (type === \"staticValue\") {\r\n      if (!rows.length) {\r\n        return null;\r\n      }\r\n      const firstRowValue = getValue(rows[0]);\r\n\r\n      // Show ellipses if not all values are equal\r\n      const allEqual = (arr: any[]) =>\r\n        arr.every((v) => getValue(v) === firstRowValue);\r\n      if (allEqual(rows)) return firstRowValue;\r\n      else return \"...\";\r\n    }\r\n    return IntegratedSummary.defaultCalculator(type, rows, getValue);\r\n  };\r\n\r\n  return (\r\n    <Grid rows={props.materials} columns={columns} getRowId={getRowId}>\r\n      <DecimalTypeProvider for={decimalColumns} />\r\n      <SearchState onValueChange={delayedCallback} />\r\n      <IntegratedFiltering columnExtensions={filteringColumnExtensions} />\r\n      <SortingState />\r\n      <IntegratedSorting />\r\n      <GroupingState grouping={grouping} />\r\n      <SummaryState groupItems={groupSummaryItems} />\r\n      <IntegratedGrouping />\r\n      <IntegratedSummary calculator={staticValueCalculator} />\r\n\r\n      <VirtualTable columnExtensions={columnExtensions} />\r\n      <TableHeaderRow showSortingControls sortLabelComponent={SortLabel} />\r\n      <TableGroupRow\r\n        cellComponent={GroupCell}\r\n        summaryCellComponent={SummaryCell}\r\n        summaryItemComponent={groupRowSummaryItem}\r\n        // indentColumnWidth={48}\r\n      />\r\n      <TableSummaryRow />\r\n      <TableFixedColumns leftColumns={leftFixedColumns} />\r\n      <TableColumnVisibility\r\n        defaultHiddenColumnNames={defaultHiddenColumnNames}\r\n        columnExtensions={tableColumnVisibilityColumnExtensions}\r\n        onHiddenColumnNamesChange={onHiddenColumnNamesChange}\r\n      />\r\n      <Toolbar />\r\n      <GroupingPanel showSortingControls />\r\n      <SearchPanel />\r\n      <ColumnChooser />\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default CategoryTable;\r\n","import React, { useState, useEffect, useRef, useCallback } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { IRootState } from \"redux/reducers\";\r\nimport allActions from \"redux/actions\";\r\n\r\nimport { Theme, createStyles, makeStyles } from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport NavigateBeforeIcon from \"@material-ui/icons/NavigateBefore\";\r\nimport MuiTooltip from \"@material-ui/core/Tooltip\";\r\n\r\nimport {\r\n  Chart,\r\n  Series,\r\n  CommonSeriesSettings,\r\n  Legend,\r\n  ArgumentAxis,\r\n  ValueAxis,\r\n  Title,\r\n  Tooltip,\r\n  Size,\r\n  Label,\r\n  Font,\r\n  Margin,\r\n  Subtitle,\r\n} from \"devextreme-react/chart\";\r\n\r\nimport { Grid, Typography } from \"@material-ui/core\";\r\nimport { grey } from \"@material-ui/core/colors\";\r\n\r\nimport { wrapArgumentAxisLabel } from \"helpers/materialHelpers\";\r\nimport { customizeHint } from \"components/ChartComponents\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    container: {\r\n      position: \"relative\",\r\n      // padding: theme.spacing(2),\r\n    },\r\n    chart: {\r\n      overflowX: \"hidden\",\r\n      // padding: theme.spacing(2),\r\n    },\r\n    argumentAxisLabel: {\r\n      fill: \"#767676\",\r\n    },\r\n    button: {\r\n      position: \"absolute\",\r\n      top: \"12px\",\r\n      left: \"18px\",\r\n    },\r\n  })\r\n);\r\n\r\ninterface Props {\r\n  data: IMaterialChartItem[];\r\n}\r\n\r\nconst CategoryChart = (props: Props) => {\r\n  const chartRef = useRef<Chart>(null);\r\n\r\n  var renderOptions = {\r\n    force: true, // forces redrawing\r\n    animate: true, // redraws the UI component with animation\r\n  };\r\n\r\n  const resizeObserver = useRef<ResizeObserver>(\r\n    new ResizeObserver((entries: ResizeObserverEntry[]) => {\r\n      // your code to handle the size change\r\n      console.log(\"Size changed\");\r\n      chartRef?.current?.instance.render(renderOptions);\r\n    })\r\n  );\r\n\r\n  const resizedContainerRef = useCallback(\r\n    (container: HTMLDivElement) => {\r\n      if (container !== null) {\r\n        resizeObserver.current.observe(container);\r\n      }\r\n      // When element is unmounted, ref callback is called with a null argument\r\n      // => best time to cleanup the observer\r\n      else {\r\n        if (resizeObserver.current) resizeObserver.current.disconnect();\r\n      }\r\n    },\r\n    [resizeObserver.current]\r\n  );\r\n\r\n  const [chartData, setChartData] = useState<IMaterialChartItem[]>([]);\r\n  const [isFirstLevel, setIsFirstLevel] = useState<boolean>(true);\r\n  const [selectedCategory, setSelectedCategory] = useState<string>(\"\");\r\n  const [chartHeight, setChartHeight] = useState(0);\r\n\r\n  useEffect(() => {\r\n    const parentRows = filterData(\"\");\r\n    setChartData(parentRows);\r\n    setChartHeight(parentRows.length * 30 + 200);\r\n  }, [props.data]);\r\n\r\n  const customizeTooltip = (arg: any) => {\r\n    return {\r\n      text: `<b>${arg.seriesName}</b>\\n ${arg.valueText}`,\r\n    };\r\n  };\r\n\r\n  const onPointClick = (e: any) => {\r\n    if (isFirstLevel) {\r\n      setIsFirstLevel(false);\r\n      setSelectedCategory(e.target.originalArgument);\r\n      setChartData(filterData(e.target.originalArgument));\r\n    }\r\n  };\r\n\r\n  const onDrawn = (e: any) => {\r\n    if (isFirstLevel) {\r\n      // Add pointer cursor to all bar points\r\n      e.element.querySelectorAll(\".dxc-markers rect\").forEach((el: any) => {\r\n        el.style.cursor = \"pointer\";\r\n      });\r\n\r\n      // Add pointer cursor to argument axis labels\r\n      e.element\r\n        .querySelector(\".dxc-arg-elements\")\r\n        .childNodes.forEach((el: any) => {\r\n          el.style.cursor = \"pointer\";\r\n        });\r\n    }\r\n  };\r\n\r\n  const filterData = (name: string) => {\r\n    return props.data.filter(function (item) {\r\n      return item.materialCat === name;\r\n    });\r\n  };\r\n\r\n  const handleBackClick = () => {\r\n    if (!isFirstLevel) {\r\n      setIsFirstLevel(true);\r\n      setSelectedCategory(\"\");\r\n      setChartData(filterData(\"\"));\r\n    }\r\n  };\r\n\r\n  const minHeight = 600;\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Paper className={classes.container} ref={resizedContainerRef}>\r\n      <MuiTooltip title='Back'>\r\n        <span>\r\n          <IconButton\r\n            className={classes.button}\r\n            onClick={handleBackClick}\r\n            disabled={isFirstLevel}\r\n          >\r\n            <NavigateBeforeIcon />\r\n          </IconButton>\r\n        </span>\r\n      </MuiTooltip>\r\n      <Chart\r\n        className={classes.chart}\r\n        dataSource={chartData}\r\n        // title={selectedCategory}\r\n        palette='Material'\r\n        rotated={true}\r\n        onPointClick={onPointClick}\r\n        onDrawn={onDrawn}\r\n        ref={chartRef}\r\n      >\r\n        {selectedCategory === \"\" ? (\r\n          <Title\r\n            text='Click on a bar to see materials'\r\n            horizontalAlignment='center'\r\n            font={{\r\n              size: 16,\r\n              color: grey[500],\r\n              weight: 400,\r\n            }}\r\n          ></Title>\r\n        ) : (\r\n          <Title\r\n            text={selectedCategory}\r\n            horizontalAlignment='center'\r\n            font={{\r\n              size: 18,\r\n              color: \"black\",\r\n              weight: 500,\r\n              family:\r\n                'Roboto, \"Segoe UI Light\", \"Helvetica Neue Light\", \"Segoe UI\", \"Helvetica Neue\", \"Trebuchet MS\", Verdana, sans-serif',\r\n            }}\r\n          ></Title>\r\n        )}\r\n        <Size height={chartHeight > minHeight ? chartHeight : minHeight} />\r\n        <Margin top={10} bottom={10} left={30} right={30} />\r\n        <CommonSeriesSettings\r\n          argumentField='name'\r\n          type='stackedBar'\r\n          barWidth={50}\r\n          hoverMode='allArgumentPoints'\r\n        ></CommonSeriesSettings>\r\n        <Series valueField='A1A3' name='A1-A3' />\r\n        <Series valueField='A4' name='A4' />\r\n        <Series valueField='B4_m' name='B4 (m)' />\r\n        <Series valueField='B4_t' name='B4 (t)' />\r\n        <ValueAxis>\r\n          <Title\r\n            text={\"kgCO2e\"}\r\n            font={{\r\n              size: 14,\r\n            }}\r\n          />\r\n        </ValueAxis>\r\n        <ArgumentAxis>\r\n          <Label customizeText={wrapArgumentAxisLabel} />\r\n        </ArgumentAxis>\r\n        <Legend\r\n          verticalAlignment='bottom'\r\n          horizontalAlignment='center'\r\n          itemTextPosition='top'\r\n          customizeHint={customizeHint}\r\n        />\r\n        <Tooltip\r\n          enabled={true}\r\n          location='edge'\r\n          customizeTooltip={customizeTooltip}\r\n          zIndex={1200}\r\n          arrowLength={6}\r\n          format={{\r\n            format: (value: string) => parseFloat(value).toLocaleString(),\r\n          }}\r\n          interactive\r\n        />\r\n      </Chart>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default CategoryChart;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { IRootState } from \"redux/reducers\";\r\nimport allActions from \"redux/actions\";\r\n\r\nimport {\r\n  Theme,\r\n  createStyles,\r\n  makeStyles,\r\n  withStyles,\r\n  emphasize,\r\n} from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Breadcrumbs from \"@material-ui/core/Breadcrumbs\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormLabel from \"@material-ui/core/FormLabel\";\r\n\r\nimport CategoryTable from \"./CategoryTable\";\r\nimport CategoryChart from \"./CategoryChart\";\r\nimport {\r\n  groupByMaterial,\r\n  createChildRows,\r\n  createMaterialChartData,\r\n  groupByCategory,\r\n  sortByEE,\r\n} from \"helpers/materialHelpers\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    breadCrumbs: {\r\n      marginBottom: theme.spacing(2),\r\n    },\r\n    chart: {\r\n      // height: 600,\r\n      padding: theme.spacing(2),\r\n    },\r\n    elementTable: {\r\n      padding: theme.spacing(2),\r\n    },\r\n  })\r\n);\r\n\r\ninterface Props {\r\n  materials: IMaterialInventory[];\r\n}\r\n\r\nconst CategoryView = (props: Props) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const displayMode = useSelector((state: IRootState) => state.displayMode);\r\n  const materialInventory = useSelector(\r\n    (state: IRootState) => state.materialInventory\r\n  );\r\n\r\n  const [tableData, setTableData] = useState<IMaterialTableRow[]>([]);\r\n  const [chartData, setChartData] = useState<IMaterialChartItem[]>([]);\r\n\r\n  useEffect(() => {\r\n    const groupedMaterials = groupByMaterial(props.materials);\r\n\r\n    const materialChildRows = createMaterialChartData(groupedMaterials);\r\n    const categoryParentRows = groupByCategory(materialChildRows);\r\n    const chartData = materialChildRows.concat(categoryParentRows);\r\n    const sortedChartData = sortByEE(chartData) as IMaterialChartItem[];\r\n\r\n    setTableData(groupedMaterials as IMaterialTableRow[]);\r\n    setChartData(sortedChartData);\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs>\r\n          {displayMode === \"table\" ? (\r\n            <Paper>\r\n              <CategoryTable materials={tableData} />\r\n            </Paper>\r\n          ) : (\r\n            <CategoryChart data={chartData} />\r\n          )}\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CategoryView;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { IRootState } from \"redux/reducers\";\r\nimport allActions from \"redux/actions\";\r\n\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport { withStyles, Theme, createStyles } from \"@material-ui/core/styles\";\r\nimport { purple } from \"@material-ui/core/colors\";\r\n\r\nimport { GroupBy } from \"interfaces/enums\";\r\nimport theme from \"styles/theme\";\r\n\r\nconst CustomSwitch = withStyles({\r\n  switchBase: {\r\n    // color: theme.palette.simulated.light,\r\n    \"&$checked\": {\r\n      color: theme.palette.simulated.main,\r\n    },\r\n    \"&$checked + $track\": {\r\n      backgroundColor: theme.palette.simulated.main,\r\n    },\r\n  },\r\n  checked: {},\r\n  track: {},\r\n})(Switch);\r\n\r\nconst SimulationModeSwitch = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const isSimulationModeActive = useSelector(\r\n    (state: IRootState) => state.isSimulationModeActive\r\n  );\r\n  const materialsGroupBy = useSelector(\r\n    (state: IRootState) => state.materialsGroupBy\r\n  );\r\n\r\n  const handleSimulationModeChanged = () => {\r\n    dispatch(allActions.uiActions.toggleSimulationMode());\r\n    if (materialsGroupBy !== GroupBy.Product) {\r\n      dispatch(allActions.uiActions.setMaterialsGroupBy(GroupBy.Product));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <FormControlLabel\r\n      control={\r\n        <CustomSwitch\r\n          checked={isSimulationModeActive}\r\n          onChange={handleSimulationModeChanged}\r\n          name='simulationChecked'\r\n          color='primary'\r\n          // size=\"small\"\r\n        />\r\n      }\r\n      label='Edit mode'\r\n    />\r\n  );\r\n};\r\n\r\nexport default SimulationModeSwitch;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { IRootState } from \"redux/reducers\";\r\nimport allActions from \"redux/actions\";\r\nimport { getSimulatedDataFromDb } from \"services/firebase\";\r\n\r\nimport ReactDOM from \"react-dom\";\r\nimport { Theme, createStyles, makeStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormLabel from \"@material-ui/core/FormLabel\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport Skeleton from \"@material-ui/lab/Skeleton\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\n\r\nimport BuildingElementsView from \"./BuildingElementsView\";\r\nimport ProductView from \"./ProductView\";\r\nimport CategoryView from \"./CategoryView\";\r\nimport SimulationModeSwitch from \"components/SimulationModeSwitch\";\r\nimport { GroupBy } from \"interfaces/enums\";\r\nimport {\r\n  groupByMaterial,\r\n  mergeSimulatedDataIntoMaterialProducts,\r\n} from \"helpers/materialHelpers\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    formControl: {\r\n      marginRight: theme.spacing(2),\r\n      minWidth: 180,\r\n    },\r\n    verticalDivider: {\r\n      marginRight: theme.spacing(2),\r\n      marginTop: theme.spacing(1),\r\n      marginBottom: theme.spacing(1)\r\n    }\r\n  })\r\n);\r\n\r\nconst MaterialsContainer = (props: any) => {\r\n  const dispatch = useDispatch();\r\n  const selectedBuildings = useSelector(\r\n    (state: IRootState) => state.selectedBuildings\r\n  );\r\n  const materialInventory = useSelector(\r\n    (state: IRootState) => state.materialInventory\r\n  );\r\n  const isSimulationModeActive = useSelector(\r\n    (state: IRootState) => state.isSimulationModeActive\r\n  );\r\n\r\n  const groupBy = useSelector((state: IRootState) => state.materialsGroupBy);\r\n  const displayMode = useSelector((state: IRootState) => state.displayMode);\r\n\r\n  const [loading, setLoading] = useState(false);\r\n  const [tooltipOpen, setTooltipOpen] = useState(false);\r\n\r\n  const handleSelectChange = (event: React.ChangeEvent<{ value: unknown }>) => {\r\n    dispatch(\r\n      allActions.uiActions.setMaterialsGroupBy(event.target.value as string)\r\n    );\r\n  };\r\n\r\n  const handleRadioButtonChange = (\r\n    event: React.ChangeEvent<HTMLInputElement>\r\n  ) => {\r\n    dispatch(allActions.uiActions.setDisplayMode(event.target.value as string));\r\n  };\r\n\r\n  const handleTooltip = (isOpen: boolean) => {\r\n    setTooltipOpen(isOpen);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (selectedBuildings.length) {\r\n      loadData();\r\n    }\r\n  }, [selectedBuildings]);\r\n\r\n  const loadData = () => {\r\n    const buildingId = selectedBuildings[0].idbuildings;\r\n    const URL = process.env.REACT_APP_API_URI;\r\n    const elementQuery = `${URL}/building_elements/${buildingId}`;\r\n    const inventoryQuery = `${URL}/material_inventory/${buildingId}`;\r\n\r\n    if (!loading) {\r\n      setLoading(true);\r\n      Promise.all([fetch(elementQuery), fetch(inventoryQuery)])\r\n        .then((responses) =>\r\n          Promise.all(responses.map((response) => response.json()))\r\n        )\r\n        .then((data) => {\r\n          getSimulatedDataFromDb(String(buildingId))\r\n            .then((doc) => {\r\n              let simulatedData: ISimulatedData = {};\r\n              if (doc.exists) {\r\n                simulatedData = doc.data() ?? {};\r\n              }\r\n\r\n              const buildingElements = data[0];\r\n              const materialInventory = data[1];\r\n              const materialProducts = groupByMaterial(materialInventory);\r\n              const simulatedMaterialProducts = mergeSimulatedDataIntoMaterialProducts(\r\n                materialProducts as IMaterialTableRow[],\r\n                simulatedData\r\n              );\r\n\r\n              ReactDOM.unstable_batchedUpdates(() => {\r\n                dispatch(\r\n                  allActions.elementAndMaterialActions.setBuildingElements(\r\n                    buildingElements\r\n                  )\r\n                );\r\n                dispatch(\r\n                  allActions.elementAndMaterialActions.setMaterialInventory(\r\n                    materialInventory\r\n                  )\r\n                );\r\n                dispatch(\r\n                  allActions.elementAndMaterialActions.setMaterialProducts(\r\n                    materialProducts\r\n                  )\r\n                );\r\n                dispatch(\r\n                  allActions.elementAndMaterialActions.setSimulatedData(\r\n                    simulatedData\r\n                  )\r\n                );\r\n                dispatch(\r\n                  allActions.elementAndMaterialActions.setSimulatedMaterialProducts(\r\n                    simulatedMaterialProducts\r\n                  )\r\n                );\r\n                setLoading(false);\r\n              });\r\n            })\r\n            .catch((error) => {\r\n              console.log(\"Error getting simulation data:\", error);\r\n              setLoading(false);\r\n            });\r\n        })\r\n        .catch(() => setLoading(false));\r\n    }\r\n    getSimulatedDataFromDb(String(buildingId));\r\n  };\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div>\r\n      <Grid\r\n        container\r\n        spacing={3}\r\n        alignItems='center'\r\n        justify='space-between'\r\n        direction='row'\r\n      >\r\n        <Grid item>\r\n          <Typography variant='h5' color='textSecondary'>\r\n            Materials\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item>\r\n          <Grid container alignItems='center'>\r\n            <Grid item>\r\n              <SimulationModeSwitch />\r\n            </Grid>\r\n            <Divider orientation='vertical' flexItem className={classes.verticalDivider} />\r\n            <Grid item>\r\n              <Tooltip\r\n                title='Disable Edit mode to select different grouping'\r\n                // open={tooltipOpen}\r\n                disableFocusListener={!isSimulationModeActive}\r\n                disableHoverListener={!isSimulationModeActive}\r\n                disableTouchListener={!isSimulationModeActive}\r\n              >\r\n                <FormControl className={classes.formControl} variant='outlined'>\r\n                  <InputLabel>Group by</InputLabel>\r\n                  <Select\r\n                    displayEmpty\r\n                    value={groupBy}\r\n                    label='Group by'\r\n                    onChange={handleSelectChange}\r\n                    onMouseEnter={() => handleTooltip(true)}\r\n                    onMouseLeave={() => handleTooltip(false)}\r\n                    onOpen={() => handleTooltip(false)}\r\n                  >\r\n                    <MenuItem value={GroupBy.Product}>Product</MenuItem>\r\n                    <MenuItem\r\n                      value={GroupBy.BuildingElement}\r\n                      disabled={isSimulationModeActive}\r\n                    >\r\n                      Building element\r\n                    </MenuItem>\r\n                    <MenuItem\r\n                      value={GroupBy.Category}\r\n                      disabled={isSimulationModeActive}\r\n                    >\r\n                      Category\r\n                    </MenuItem>\r\n                  </Select>\r\n                </FormControl>\r\n              </Tooltip>\r\n            </Grid>\r\n            <Grid item>\r\n              <FormControl component='fieldset'>\r\n                <FormLabel component='legend' color='secondary'>\r\n                  Display mode\r\n                </FormLabel>\r\n                <RadioGroup\r\n                  value={displayMode}\r\n                  onChange={handleRadioButtonChange}\r\n                  row\r\n                >\r\n                  <FormControlLabel\r\n                    value='table'\r\n                    control={<Radio />}\r\n                    label='Table'\r\n                  />\r\n                  <FormControlLabel\r\n                    value='chart'\r\n                    control={<Radio />}\r\n                    label='Chart'\r\n                  />\r\n                </RadioGroup>\r\n              </FormControl>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n      {loading || props.parentIsLoading ? (\r\n        <Skeleton style={{ marginTop: \"65px\" }} variant='rect' height={350} />\r\n      ) : groupBy === GroupBy.BuildingElement ? (\r\n        <BuildingElementsView />\r\n      ) : groupBy === GroupBy.Product ? (\r\n        <ProductView materials={materialInventory} />\r\n      ) : (\r\n        <CategoryView materials={materialInventory} />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MaterialsContainer;\r\n","import React, { useState, useEffect, useRef, useCallback } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { IRootState } from \"redux/reducers\";\r\nimport allActions from \"redux/actions\";\r\n\r\nimport { getKeyValue } from \"get-key-value\";\r\nimport theme from \"styles/theme\";\r\n\r\nimport {\r\n  Theme,\r\n  createStyles,\r\n  makeStyles,\r\n  withStyles,\r\n  WithStyles,\r\n  emphasize,\r\n} from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nimport {\r\n  Chart,\r\n  Series,\r\n  ArgumentAxis,\r\n  CommonSeriesSettings,\r\n  SeriesTemplate,\r\n  ValueAxis,\r\n  Title,\r\n  Tooltip,\r\n  Label,\r\n} from \"devextreme-react/chart\";\r\n\r\nimport { calculatePercentageChange } from \"helpers/simulationHelpers\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    chart: {\r\n      height: 200,\r\n      padding: theme.spacing(2),\r\n    },\r\n  })\r\n);\r\n\r\nconst SingleBuildingChart = () => {\r\n  const chartRef = useRef<Chart>(null);\r\n\r\n  var renderOptions = {\r\n    force: true, // forces redrawing\r\n    animate: true, // redraws the UI component with animation\r\n  };\r\n\r\n  const resizeObserver = useRef<ResizeObserver>(\r\n    new ResizeObserver((entries: ResizeObserverEntry[]) => {\r\n      // your code to handle the size change\r\n      console.log(\"Size changed\");\r\n      chartRef?.current?.instance.render(renderOptions);\r\n    })\r\n  );\r\n\r\n  const resizedContainerRef = useCallback(\r\n    (container: HTMLDivElement) => {\r\n      if (container !== null) {\r\n        resizeObserver.current.observe(container);\r\n      }\r\n      // When element is unmounted, ref callback is called with a null argument\r\n      // => best time to cleanup the observer\r\n      else {\r\n        if (resizeObserver.current) resizeObserver.current.disconnect();\r\n      }\r\n    },\r\n    [resizeObserver.current]\r\n  );\r\n\r\n  const selectedBuildings = useSelector(\r\n    (state: IRootState) => state.selectedBuildings\r\n  );\r\n  const simulatedMaterialProducts = useSelector(\r\n    (state: IRootState) => state.simulatedMaterialProducts\r\n  );\r\n  const isSimulationModeActive = useSelector(\r\n    (state: IRootState) => state.isSimulationModeActive\r\n  );\r\n  const simulatedData = useSelector((state: IRootState) => state.simulatedData);\r\n  const checkedEEMetrics = useSelector((state: IRootState) => state.EEMetric);\r\n\r\n  var initialEmissionValues = {\r\n    A1A3: 0,\r\n    A4: 0,\r\n    B4_m: 0,\r\n    B4_t: 0,\r\n  };\r\n\r\n  const [emissionValues, setEmissionValues] = useState(initialEmissionValues);\r\n  const [chartData, setChartData] = useState<ISingleChartDataItem[]>([]);\r\n\r\n  useEffect(() => {\r\n    var A1A3: number;\r\n    var A4: number;\r\n    var B4_m: number;\r\n    var B4_t: number;\r\n\r\n    var nonSimulatedValues = {\r\n      A1A3: Number(selectedBuildings[0].A1A3) || 0.0,\r\n      A4: Number(selectedBuildings[0].A4) || 0.0,\r\n      B4_m: Number(selectedBuildings[0].B4_m) || 0.0,\r\n      B4_t: Number(selectedBuildings[0].B4_t) || 0.0,\r\n    };\r\n    var simulatedValues = {};\r\n\r\n    if (isSimulationModeActive) {\r\n      A1A3 = isSeriesSimulated(\"A1A3\")\r\n        ? sumMaterialEmissions(\"A1A3\")\r\n        : nonSimulatedValues.A1A3;\r\n      A4 = isSeriesSimulated(\"A4\")\r\n        ? sumMaterialEmissions(\"A4\")\r\n        : nonSimulatedValues.A4;\r\n      B4_m = isSeriesSimulated(\"B4_m\")\r\n        ? sumMaterialEmissions(\"B4_m\")\r\n        : nonSimulatedValues.B4_m;\r\n      B4_t = isSeriesSimulated(\"B4_t\")\r\n        ? sumMaterialEmissions(\"B4_t\")\r\n        : nonSimulatedValues.B4_t;\r\n    } else {\r\n      A1A3 = Number(selectedBuildings[0].A1A3) || 0.0;\r\n      A4 = Number(selectedBuildings[0].A4) || 0.0;\r\n      B4_m = Number(selectedBuildings[0].B4_m) || 0.0;\r\n      B4_t = Number(selectedBuildings[0].B4_t) || 0.0;\r\n    }\r\n\r\n    const emissions = {\r\n      A1A3: A1A3,\r\n      A4: A4,\r\n      B4_m: B4_m,\r\n      B4_t: B4_t,\r\n    };\r\n\r\n    setEmissionValues(emissions);\r\n\r\n    // Divides by floor area if setting is checked\r\n    if (checkedEEMetrics.perSqM) {\r\n      A1A3 = A1A3 / selectedBuildings[0].floor_area;\r\n      A4 = A4 / selectedBuildings[0].floor_area;\r\n      B4_m = B4_m / selectedBuildings[0].floor_area;\r\n      B4_t = B4_t / selectedBuildings[0].floor_area;\r\n    }\r\n\r\n    // Divides by lifetime year if setting is checked\r\n    if (checkedEEMetrics.perYear) {\r\n      A1A3 = A1A3 / selectedBuildings[0].lifetime;\r\n      A4 = A4 / selectedBuildings[0].lifetime;\r\n      B4_m = B4_m / selectedBuildings[0].lifetime;\r\n      B4_t = B4_t / selectedBuildings[0].lifetime;\r\n    }\r\n\r\n    const chartData: ISingleChartDataItem[] = [\r\n      { lcaPhase: \"A1-A3\", gwp: A1A3 },\r\n      { lcaPhase: \"A4\", gwp: A4 },\r\n      { lcaPhase: \"B4 (m)\", gwp: B4_m },\r\n      { lcaPhase: \"B4 (t)\", gwp: B4_t },\r\n    ];\r\n\r\n    setChartData(chartData);\r\n  }, [\r\n    selectedBuildings[0],\r\n    isSimulationModeActive,\r\n    simulatedData,\r\n    checkedEEMetrics,\r\n  ]);\r\n\r\n  const isSeriesSimulated = (series: string): boolean => {\r\n    return Object.values(simulatedData).some(function (value: any) {\r\n      return series in value;\r\n    });\r\n  };\r\n\r\n  const sumMaterialEmissions = (column: string): number => {\r\n    const sum = simulatedMaterialProducts.reduce(\r\n      (a, b) =>\r\n        a +\r\n        (Number(\r\n          getKeyValue<keyof IMaterialTableParentRow, IMaterialTableParentRow>(\r\n            column as any,\r\n            b\r\n          )\r\n        ) || 0),\r\n      0\r\n    );\r\n    return sum;\r\n  };\r\n\r\n  const onDrawn = (e: any) => {\r\n    if (isSimulationModeActive) {\r\n      // Color emission series if contains simulated values\r\n      e.element\r\n        .querySelector(\".dxc-arg-elements\")\r\n        .childNodes.forEach((el: any) => {\r\n          const fieldName = labelToFieldname(el.innerHTML);\r\n          if (isSeriesSimulated(fieldName)) {\r\n            el.style.fill = theme.palette.simulated.main;\r\n            el.style.fontWeight = 500;\r\n          }\r\n        });\r\n    }\r\n  };\r\n\r\n  const labelToFieldname = (seriesLabel: string) => {\r\n    switch (seriesLabel) {\r\n      case \"A1-A3\":\r\n        return \"A1A3\";\r\n      case \"A4\":\r\n        return \"A4\";\r\n      case \"B4 (m)\":\r\n        return \"B4_m\";\r\n      case \"B4 (t)\":\r\n        return \"B4_t\";\r\n      default:\r\n        return \"A1A3\";\r\n    }\r\n  };\r\n\r\n  const customizeTooltip = (props: any) => {\r\n    if (isSimulationModeActive) {\r\n      const fieldName = labelToFieldname(props.argument);\r\n      if (isSeriesSimulated(fieldName)) {\r\n        const originalValue = Number(selectedBuildings[0][fieldName]);\r\n        const simulatedValue = emissionValues[fieldName];\r\n\r\n        const percentageChange = calculatePercentageChange(\r\n          originalValue,\r\n          simulatedValue\r\n        );\r\n\r\n        const emissionStringLine = props.valueText + \"\\n\";\r\n        const percentStringLine = \"(-\" + percentageChange +\"%)\";\r\n        const tooltipText = emissionStringLine + percentStringLine;\r\n\r\n        return {\r\n          text: tooltipText,\r\n          fontColor: theme.palette.reducedEmission.light,\r\n        };\r\n      }\r\n    }\r\n  };\r\n\r\n  var axisTitle = \"kgCO2e\";\r\n  if (checkedEEMetrics.perSqM) axisTitle += \"/m\\xB2\";\r\n  if (checkedEEMetrics.perYear) axisTitle += \"/year\";\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Paper ref={resizedContainerRef}>\r\n      <Chart\r\n        className={classes.chart}\r\n        dataSource={chartData}\r\n        palette='Material'\r\n        onDrawn={onDrawn}\r\n        ref={chartRef}\r\n      >\r\n        <CommonSeriesSettings\r\n          argumentField='lcaPhase'\r\n          valueField='gwp'\r\n          type='bar'\r\n          showInLegend={false}\r\n          ignoreEmptyPoints={true}\r\n        />\r\n        {/* <Series\r\n                    valueField=\"gwp\"\r\n                    argumentField=\"lcaPhase\"\r\n                    name=\"Embodied emissions\"\r\n                    type=\"bar\"\r\n                    showInLegend={false}\r\n                /> */}\r\n        <ValueAxis>\r\n          <Title\r\n            text={axisTitle}\r\n            font={{\r\n              size: 12,\r\n            }}\r\n          />\r\n        </ValueAxis>\r\n        <ArgumentAxis>\r\n          {/* <Label\r\n            font={{\r\n              color: isSimulationModeActive\r\n                ? theme.palette.simulated.main\r\n                : \"#767676\",\r\n            }}\r\n          /> */}\r\n        </ArgumentAxis>\r\n        <SeriesTemplate nameField='lcaPhase' />\r\n        <Tooltip\r\n          enabled={true}\r\n          zIndex={1200}\r\n          arrowLength={6}\r\n          format={{\r\n            format: (value: string) => parseFloat(value).toLocaleString(),\r\n          }}\r\n          interactive\r\n          customizeTooltip={customizeTooltip}\r\n        />\r\n      </Chart>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default SingleBuildingChart;\r\n","import React, { useEffect, useState, ReactText } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport allActions from \"redux/actions\";\r\nimport { IRootState } from \"redux/reducers\";\r\n\r\nimport { Theme, createStyles, makeStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport SettingsIcon from \"@material-ui/icons/Settings\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\n\r\ninterface Props {\r\n  iconSize?: \"small\" | \"inherit\" | \"large\" | \"default\" | undefined;\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      width: \"100%\",\r\n      maxWidth: 360,\r\n      minWidth: 220,\r\n    },\r\n    content: {\r\n      width: 350,\r\n      padding: theme.spacing(2),\r\n    },\r\n    formControl: {\r\n      marginTop: theme.spacing(3),\r\n    },\r\n  })\r\n);\r\n\r\nfunction SettingsButton(props: Props) {\r\n  const dispatch = useDispatch();\r\n  const checkedEEMetrics = useSelector((state: IRootState) => state.EEMetric);\r\n\r\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\r\n\r\n  const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const handleEEMetricChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    dispatch(\r\n      allActions.settingsActions.setEEMetric({\r\n        name: event.target.name,\r\n        checked: event.target.checked,\r\n      })\r\n    );\r\n  };\r\n\r\n  const { perSqM, perYear } = checkedEEMetrics;\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div>\r\n      <Tooltip title='Metric settings'>\r\n        <IconButton aria-label='help' onClick={handleClick}>\r\n          <SettingsIcon fontSize={props.iconSize} />\r\n        </IconButton>\r\n      </Tooltip>\r\n      <Menu\r\n        id='simple-menu'\r\n        anchorEl={anchorEl}\r\n        keepMounted\r\n        open={Boolean(anchorEl)}\r\n        onClose={handleClose}\r\n        PaperProps={{\r\n          style: {\r\n            width: 170,\r\n          },\r\n        }}\r\n      >\r\n        <ListSubheader>Metric settings</ListSubheader>\r\n        <ListItem>\r\n          <ListItemText id='switch-list-label-sqm' primary={\"Per m\\xB2\"} />\r\n          <ListItemSecondaryAction>\r\n            <Switch\r\n              edge='end'\r\n              checked={perSqM}\r\n              onChange={handleEEMetricChange}\r\n              name='perSqM'\r\n            />\r\n          </ListItemSecondaryAction>\r\n        </ListItem>\r\n        <ListItem>\r\n          <ListItemText id='switch-list-label-year' primary='Per year' />\r\n          <ListItemSecondaryAction>\r\n            <Switch\r\n              edge='end'\r\n              checked={perYear}\r\n              onChange={handleEEMetricChange}\r\n              name='perYear'\r\n            />\r\n          </ListItemSecondaryAction>\r\n        </ListItem>\r\n      </Menu>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SettingsButton;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { IRootState } from \"redux/reducers\";\r\nimport allActions from \"redux/actions\";\r\n\r\nimport {\r\n  createStyles,\r\n  Theme,\r\n  withStyles,\r\n  WithStyles,\r\n  makeStyles,\r\n} from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormGroup from \"@material-ui/core/FormGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\n\r\nimport MaterialsContainer from \"components/MaterialsContainer\";\r\nimport SingleBuildingChart from \"./SingleBuildingChart\";\r\nimport SimulationModeSwitch from \"components/SimulationModeSwitch\";\r\nimport SettingsButton from \"components/SettingsButton\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    buildingSection: {\r\n      marginBottom: theme.spacing(2),\r\n    },\r\n    divider: {\r\n      marginBottom: theme.spacing(2),\r\n    },\r\n    materialSection: {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n    buildingInfoLabels: {\r\n      fontWeight: \"bold\",\r\n    },\r\n    heading: {\r\n      marginBottom: theme.spacing(1)\r\n    },\r\n    content: {\r\n      // margin: theme.spacing(1),\r\n      padding: theme.spacing(2),\r\n      // height: '600px'\r\n    },\r\n  })\r\n);\r\n\r\nconst initialBuildingState: IBuilding = {\r\n  idbuildings: 0,\r\n  building_identifier: \"\",\r\n  building_name: \"\",\r\n  project: \"\",\r\n  country: \"\",\r\n  city: \"\",\r\n  typology: \"\",\r\n  construction_type: \"\",\r\n  lifetime: 0,\r\n  floor_area: 0,\r\n  A1A3: null,\r\n  A4: null,\r\n  B4_m: null,\r\n  B4_t: null,\r\n};\r\n\r\nfunction SingleBuildingView() {\r\n  const dispatch = useDispatch();\r\n\r\n  const selectedBuildings = useSelector(\r\n    (state: IRootState) => state.selectedBuildings\r\n  );\r\n\r\n  const isSimulationModeChecked = useSelector(\r\n    (state: IRootState) => state.isSimulationModeActive\r\n  );\r\n\r\n  const handleSimulationModeChanged = () => {\r\n    dispatch(allActions.uiActions.toggleSimulationMode());\r\n  };\r\n\r\n  const {\r\n    building_identifier,\r\n    building_name,\r\n    project,\r\n    typology,\r\n    construction_type,\r\n    floor_area,\r\n    A1A3,\r\n    A4,\r\n    B4_m,\r\n    B4_t,\r\n  } = selectedBuildings[0];\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.content}>\r\n      <Grid container spacing={3} className={classes.buildingSection}>\r\n        <Grid item container alignItems='flex-start' justify='space-between'>\r\n          <Grid item>\r\n            <Typography variant='h4' color='textPrimary'>\r\n              {building_name}\r\n            </Typography>\r\n            <Typography variant='subtitle1' color='textSecondary' gutterBottom>\r\n              {building_identifier}\r\n            </Typography>\r\n          </Grid>\r\n          {/* <Grid item>\r\n            <SimulationModeSwitch />\r\n          </Grid> */}\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          <Grid container alignItems='center' justify='space-between' className={classes.heading}>\r\n            <Grid item>\r\n              <Typography variant='h5' color='textSecondary'>\r\n                General info\r\n              </Typography>\r\n            </Grid>\r\n          </Grid>\r\n          <div>\r\n            <TextField\r\n              key={project || \"project\"}\r\n              inputProps={{\r\n                readOnly: true,\r\n                disabled: true,\r\n              }}\r\n              InputProps={{ disableUnderline: true }}\r\n              fullWidth={true}\r\n              label='Project'\r\n              name='project'\r\n              margin='dense'\r\n              defaultValue={project || \"nil\"}\r\n            />\r\n            <TextField\r\n              key={typology || \"typology\"}\r\n              inputProps={{\r\n                readOnly: true,\r\n                disabled: true,\r\n              }}\r\n              InputProps={{ disableUnderline: true }}\r\n              fullWidth={true}\r\n              label='Typology'\r\n              name='typology'\r\n              margin='dense'\r\n              defaultValue={typology || \"nil\"}\r\n            />\r\n            <TextField\r\n              key={construction_type || \"c_type\"}\r\n              inputProps={{\r\n                readOnly: true,\r\n                disabled: true,\r\n              }}\r\n              InputProps={{ disableUnderline: true }}\r\n              fullWidth={true}\r\n              label='Construction type'\r\n              name='construction_type'\r\n              margin='dense'\r\n              defaultValue={construction_type || \"nil\"}\r\n            />\r\n            <TextField\r\n              key={floor_area || \"f_area\"}\r\n              inputProps={{\r\n                readOnly: true,\r\n                disabled: true,\r\n              }}\r\n              InputProps={{ disableUnderline: true }}\r\n              fullWidth={true}\r\n              label='Floor area'\r\n              name='floor_area'\r\n              margin='dense'\r\n              defaultValue={floor_area + \" m\\xB2\" || \"nil\"}\r\n            />\r\n          </div>\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          <Grid container alignItems='center' justify='space-between' className={classes.heading}>\r\n            <Grid item>\r\n              <Typography variant='h5' color='textSecondary'>\r\n                Embodied emissions\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item>\r\n              <SettingsButton iconSize='default' />\r\n            </Grid>\r\n          </Grid>\r\n          <SingleBuildingChart />\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Grid container spacing={3}>\r\n        <Grid item xs>\r\n          <Divider variant='middle' light={true} className={classes.divider} />\r\n          <MaterialsContainer />\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SingleBuildingView;\r\n","import React, { useState, useEffect, useRef, useCallback } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { IRootState } from \"redux/reducers\";\r\nimport allActions from \"redux/actions\";\r\n\r\nimport {\r\n  Theme,\r\n  createStyles,\r\n  makeStyles,\r\n  withStyles,\r\n  WithStyles,\r\n  emphasize,\r\n} from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nimport {\r\n  Chart,\r\n  Series,\r\n  CommonSeriesSettings,\r\n  Legend,\r\n  ValueAxis,\r\n  ArgumentAxis,\r\n  Title,\r\n  Tooltip,\r\n  Size,\r\n  Label,\r\n} from \"devextreme-react/chart\";\r\n\r\nimport { customizeHint } from \"components/ChartComponents\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    chart: {\r\n      padding: theme.spacing(2),\r\n    },\r\n  })\r\n);\r\n\r\nconst MultipleBuildingsChart = () => {\r\n  const chartRef = useRef<Chart>(null);\r\n\r\n  var renderOptions = {\r\n    force: true, // forces redrawing\r\n    animate: true, // redraws the UI component with animation\r\n  };\r\n\r\n  const resizeObserver = useRef<ResizeObserver>(\r\n    new ResizeObserver((entries: ResizeObserverEntry[]) => {\r\n      // your code to handle the size change\r\n      console.log(\"Size changed\");\r\n      chartRef?.current?.instance.render(renderOptions);\r\n    })\r\n  );\r\n\r\n  const resizedContainerRef = useCallback(\r\n    (container: HTMLDivElement) => {\r\n      if (container !== null) {\r\n        resizeObserver.current.observe(container);\r\n      }\r\n      // When element is unmounted, ref callback is called with a null argument\r\n      // => best time to cleanup the observer\r\n      else {\r\n        if (resizeObserver.current) resizeObserver.current.disconnect();\r\n      }\r\n    },\r\n    [resizeObserver.current]\r\n  );\r\n\r\n  const selectedBuildings = useSelector(\r\n    (state: IRootState) => state.selectedBuildings\r\n  );\r\n  const checkedEEMetrics = useSelector((state: IRootState) => state.EEMetric);\r\n\r\n  const [chartData, setChartData] = useState<ICompareChartDataItem[]>([]);\r\n\r\n  useEffect(() => {\r\n    const chartData: ICompareChartDataItem[] = [];\r\n\r\n    selectedBuildings.forEach((building) => {\r\n      var A1A3: number = Number(building.A1A3) || 0.0;\r\n      var A4: number = Number(building.A4) || 0.0;\r\n      var B4_m: number = Number(building.B4_m) || 0.0;\r\n      var B4_t: number = Number(building.B4_t) || 0.0;\r\n\r\n      // Divides by floor area if setting is checked\r\n      if (checkedEEMetrics.perSqM) {\r\n        A1A3 = A1A3 / building.floor_area;\r\n        A4 = A4 / building.floor_area;\r\n        B4_m = B4_m / building.floor_area;\r\n        B4_t = B4_t / building.floor_area;\r\n      }\r\n\r\n      // Divides by lifetime year if setting is checked\r\n      if (checkedEEMetrics.perYear) {\r\n        A1A3 = A1A3 / building.lifetime;\r\n        A4 = A4 / building.lifetime;\r\n        B4_m = B4_m / building.lifetime;\r\n        B4_t = B4_t / building.lifetime;\r\n      }\r\n\r\n      const dataEntry: ICompareChartDataItem = {\r\n        name: building.building_name,\r\n        identifier: building.building_identifier,\r\n        a1a3: A1A3,\r\n        a4: A4,\r\n        b4m: B4_m,\r\n        b4t: B4_t,\r\n      };\r\n\r\n      chartData.push(dataEntry);\r\n    });\r\n\r\n    setChartData(chartData.reverse());\r\n  }, [selectedBuildings, checkedEEMetrics]);\r\n\r\n  const customizeTooltip = (arg: any) => {\r\n    return {\r\n      text: `<b>${arg.seriesName}</b>\\n ${arg.valueText}`,\r\n    };\r\n  };\r\n\r\n  // Wraps label over two lines if longer than 15 characters\r\n  const customizeArgumentAxisLabel = (data: any) => {\r\n    if (data.value.length > 17) {\r\n      const wordArray = data.value.split(\" \");\r\n      if (wordArray.length > 2) {\r\n        const firstLine = wordArray.slice(0, 2).join(\" \");\r\n        const secondLine = wordArray.slice(2).join(\" \");\r\n        return firstLine + \"\\n\" + secondLine;\r\n      } else {\r\n        return wordArray.join(\"\\n\");\r\n      }\r\n    }\r\n\r\n    return data.value;\r\n  };\r\n\r\n  var axisTitle = \"kgCO2e\";\r\n  if (checkedEEMetrics.perSqM) axisTitle += \"/m\\xB2\";\r\n  if (checkedEEMetrics.perYear) axisTitle += \"/year\";\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Paper ref={resizedContainerRef}>\r\n      <Chart\r\n        className={classes.chart}\r\n        dataSource={chartData}\r\n        palette='Material'\r\n        rotated\r\n        ref={chartRef}\r\n      >\r\n        <Size height={500} />\r\n        <CommonSeriesSettings\r\n          argumentField='name'\r\n          type='stackedBar'\r\n          barWidth={60}\r\n        />\r\n        <Series valueField='a1a3' name='A1-A3' />\r\n        <Series valueField='a4' name='A4' />\r\n        <Series valueField='b4m' name='B4 (m)' />\r\n        <Series valueField='b4t' name='B4 (t)' />\r\n        <ValueAxis>\r\n          <Title\r\n            text={axisTitle}\r\n            font={{\r\n              size: 14,\r\n            }}\r\n          />\r\n        </ValueAxis>\r\n        <ArgumentAxis>\r\n          <Label customizeText={customizeArgumentAxisLabel} />\r\n        </ArgumentAxis>\r\n        <Legend\r\n          verticalAlignment='bottom'\r\n          horizontalAlignment='center'\r\n          itemTextPosition='top'\r\n          customizeHint={customizeHint}\r\n        />\r\n        <Tooltip\r\n          enabled={true}\r\n          location='edge'\r\n          customizeTooltip={customizeTooltip}\r\n          zIndex={1200}\r\n          arrowLength={6}\r\n          format={{\r\n            format: (value: string) => parseFloat(value).toLocaleString(),\r\n          }}\r\n        />\r\n      </Chart>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default MultipleBuildingsChart;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { IRootState } from \"redux/reducers\";\r\nimport allActions from \"redux/actions\";\r\n\r\nimport {\r\n  createStyles,\r\n  Theme,\r\n  withStyles,\r\n  WithStyles,\r\n  makeStyles,\r\n} from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nimport MultipleBuildingsChart from \"./MultipleBuildingsChart\";\r\nimport SettingsButton from \"components/SettingsButton\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    content: {\r\n      padding: theme.spacing(2),\r\n    },\r\n    heading: {\r\n      marginBottom: theme.spacing(1),\r\n    },\r\n  })\r\n);\r\n\r\nconst MultipleBuildingsView = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const selectedBuildings = useSelector(\r\n    (state: IRootState) => state.selectedBuildings\r\n  );\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.content}>\r\n      <Grid\r\n        container\r\n        alignItems='center'\r\n        justify='space-between'\r\n        className={classes.heading}\r\n      >\r\n        <Grid item>\r\n          <Typography variant='h5' color='textSecondary'>\r\n            Embodied emissions\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item>\r\n          <SettingsButton iconSize='default' />\r\n        </Grid>\r\n      </Grid>\r\n      <MultipleBuildingsChart />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MultipleBuildingsView;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { IRootState } from \"redux/reducers\";\r\nimport allActions from \"redux/actions\";\r\n\r\nimport {\r\n  createStyles,\r\n  Theme,\r\n  withStyles,\r\n  WithStyles,\r\n  makeStyles,\r\n} from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport SingleBuildingView from \"./SingleBuildingView\";\r\nimport MultipleBuildingsView from \"./MultipleBuildingsView\";\r\n\r\nconst drawerWidth = \"50vw\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    buildingSection: {\r\n      marginBottom: theme.spacing(2),\r\n    },\r\n    divider: {\r\n      marginBottom: theme.spacing(2),\r\n    },\r\n    elementSection: {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n    buildingInfoLabels: {\r\n      fontWeight: \"bold\",\r\n    },\r\n    noSelectionContainer: {\r\n      height: \"100vh\",\r\n    },\r\n    drawer: {\r\n      width: drawerWidth,\r\n      flexShrink: 0,\r\n    },\r\n    drawerPaper: {\r\n      // padding: theme.spacing(2),\r\n      // marginBottom: theme.spacing(2),\r\n      width: drawerWidth,\r\n      overflowY: \"scroll\",\r\n    },\r\n    content: {\r\n      // margin: theme.spacing(1),\r\n      padding: theme.spacing(2),\r\n      // height: '600px'\r\n    },\r\n  })\r\n);\r\n\r\nconst BuildingDetails = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const selectedBuildings = useSelector(\r\n    (state: IRootState) => state.selectedBuildings\r\n  );\r\n  const canSelectMultipleBuildings = useSelector(\r\n    (state: IRootState) => state.canSelectMultipleBuildings\r\n  );\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    // <Drawer\r\n    //   className={classes.drawer}\r\n    //   variant='permanent'\r\n    //   classes={{\r\n    //     paper: classes.drawerPaper,\r\n    //   }}\r\n    //   anchor='right'\r\n    // >\r\n    <div>\r\n      {selectedBuildings.length ? (\r\n        canSelectMultipleBuildings ? (\r\n          <MultipleBuildingsView />\r\n        ) : (\r\n          <SingleBuildingView />\r\n        )\r\n      ) : (\r\n        <Grid\r\n          container\r\n          justify='center'\r\n          alignItems='center'\r\n          className={classes.noSelectionContainer}\r\n        >\r\n          <Grid item xs={12}>\r\n            <Typography variant='h5' color='textSecondary' align='center'>\r\n              Select a building\r\n            </Typography>\r\n          </Grid>\r\n        </Grid>\r\n      )}\r\n    </div>\r\n    // </Drawer>\r\n  );\r\n};\r\n\r\nexport default BuildingDetails;\r\n","import React, { useEffect, useState, ReactText } from \"react\";\r\nimport HelpStrings from \"./HelpStrings\";\r\n\r\nimport {\r\n  createStyles,\r\n  Theme,\r\n  withStyles,\r\n  WithStyles,\r\n} from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport HelpOutlineIcon from \"@material-ui/icons/HelpOutline\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport MuiDialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport MuiDialogContent from \"@material-ui/core/DialogContent\";\r\nimport MuiDialogActions from \"@material-ui/core/DialogActions\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\n\r\nconst styles = (theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      margin: 0,\r\n      padding: theme.spacing(2),\r\n    },\r\n    closeButton: {\r\n      position: \"absolute\",\r\n      right: theme.spacing(1),\r\n      top: theme.spacing(1),\r\n      color: theme.palette.grey[500],\r\n    },\r\n    middleDivider: {\r\n      marginTop: theme.spacing(2),\r\n    }\r\n  });\r\n\r\nexport interface DialogTitleProps extends WithStyles<typeof styles> {\r\n  id: string;\r\n  children: React.ReactNode;\r\n  onClose: () => void;\r\n}\r\n\r\nconst DialogTitle = withStyles(styles)((props: DialogTitleProps) => {\r\n  const { children, classes, onClose, ...other } = props;\r\n  return (\r\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n      <Typography variant='h6'>{children}</Typography>\r\n      {onClose ? (\r\n        <IconButton\r\n          aria-label='close'\r\n          className={classes.closeButton}\r\n          onClick={onClose}\r\n        >\r\n          <CloseIcon />\r\n        </IconButton>\r\n      ) : null}\r\n    </MuiDialogTitle>\r\n  );\r\n});\r\n\r\nconst DialogContent = withStyles((theme: Theme) => ({\r\n  root: {\r\n    padding: theme.spacing(2),\r\n  },\r\n}))(MuiDialogContent);\r\n\r\nconst DialogActions = withStyles((theme: Theme) => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(1),\r\n  },\r\n}))(MuiDialogActions);\r\n\r\nconst terminologyDictionary = [\r\n  { term: \"A1-A3\", definition: \"Material production\" },\r\n  {\r\n    term: \"A4\",\r\n    definition: \"Transportation of materials to the building site\",\r\n  },\r\n  {\r\n    term: \"B4 (m)\",\r\n    definition: \"Material replacements throughout the study lifetime period\",\r\n  },\r\n  { term: \"B4 (t)\", definition: \"Transportation of material replacements\" },\r\n  { term: \"RSL\", definition: \"Reference service life\" },\r\n];\r\n\r\nfunction HelpButton() {\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Tooltip title='Help'>\r\n        <IconButton aria-label='help' onClick={handleClickOpen}>\r\n          <HelpOutlineIcon fontSize='large' />\r\n        </IconButton>\r\n      </Tooltip>\r\n      <Dialog onClose={handleClose} open={open}>\r\n        {/* <DialogTitle id='customized-dialog-title' onClose={handleClose}>\r\n          How to use\r\n        </DialogTitle> */}\r\n        <DialogContent /* dividers */>\r\n          {<Typography variant='h6'>How to use</Typography>}\r\n          <Typography>\r\n            <ul>\r\n              <li>\r\n                Click on a row to see more details about the building, including\r\n                its <b>materials</b> and <b>building elements</b>.\r\n              </li>\r\n              <li>\r\n                Turn on <b>Edit mode</b> to edit a building's materials and see\r\n                how the changes affect the rest of the building.\r\n              </li>\r\n              <li>\r\n                Select multiple rows to <b>compare</b> the emission values of\r\n                different buildings.\r\n              </li>\r\n            </ul>\r\n          </Typography>\r\n          <Divider variant='middle' light style={{marginBottom: \"16px\"}} />\r\n          <Typography variant='h6'>Terminology</Typography>\r\n          <List>\r\n            {terminologyDictionary.map((entry, index) => (\r\n              <ListItem\r\n                key={index}\r\n                divider={index < terminologyDictionary.length - 1}\r\n              >\r\n                <Grid container spacing={1} alignItems='center'>\r\n                  <Grid item xs={2}>\r\n                    <Typography variant='body1' color='textSecondary'>\r\n                      {entry.term}\r\n                    </Typography>\r\n                  </Grid>\r\n                  <Grid item xs={10}>\r\n                    <Typography variant='body1'>{entry.definition}</Typography>\r\n                  </Grid>\r\n                </Grid>\r\n              </ListItem>\r\n            ))}\r\n          </List>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button autoFocus onClick={handleClose} color='primary'>\r\n            Close\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n\r\n/* \r\ninterface Props {\r\n  iconSize?: \"small\" | \"inherit\" | \"large\" | \"default\" | undefined;\r\n  alertContentId: string;\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    container: {\r\n      width: \"55vw\",\r\n      marginTop: theme.spacing(2),\r\n    },\r\n    mainContent: {\r\n      width: \"90%\",\r\n    },\r\n    titleBar: {\r\n      marginBottom: theme.spacing(2),\r\n    },\r\n  })\r\n);\r\n\r\nfunction HelpButton(props: Props) {\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div>\r\n      <Tooltip title='Help'>\r\n        <IconButton aria-label='help' onClick={handleClickOpen}>\r\n          <HelpOutlineIcon fontSize={props.iconSize} />\r\n        </IconButton>\r\n      </Tooltip>\r\n      <Dialog open={open} onClose={handleClose}>\r\n        <DialogTitle>How to use</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            {HelpStrings.helpDict[props.alertContentId]}\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color='primary' autoFocus>\r\n            Ok\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n} */\r\n\r\nexport default HelpButton;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport allActions from \"redux/actions\";\r\nimport { IRootState } from \"redux/reducers\";\r\n\r\nimport \"devextreme/dist/css/dx.common.css\";\r\nimport \"devextreme/dist/css/dx.material.blue.light.css\";\r\n\r\nimport \"react-reflex/styles.css\";\r\nimport { ReflexContainer, ReflexSplitter, ReflexElement } from \"react-reflex\";\r\n\r\nimport { Theme, createStyles, makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nimport BuildingsTable from \"../BuildingsTable\";\r\nimport BuildingDetails from \"../BuildingDetails\";\r\nimport HelpButton from \"../HelpButton\";\r\nimport SettingsButton from \"../SettingsButton\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    container: {\r\n      height: \"100vh\",\r\n    },\r\n    titleBar: {\r\n      marginBottom: theme.spacing(2),\r\n    },\r\n    content: {\r\n      padding: theme.spacing(2),\r\n      boxSizing: \"border-box\",\r\n      // maxHeight: \"100vh\"\r\n    },\r\n  })\r\n);\r\n\r\nfunction HomePage() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <ReflexContainer className={classes.container} orientation='vertical'>\r\n      <ReflexElement className={classes.content} minSize={400}>\r\n        <Grid\r\n          container\r\n          alignItems='center'\r\n          justify='space-between'\r\n          spacing={2}\r\n          className={classes.titleBar}\r\n        >\r\n          <Grid item>\r\n            <Typography variant='h2' component='h1'>\r\n              ExploreLCA\r\n            </Typography>\r\n          </Grid>\r\n\r\n          <Grid item>\r\n            <HelpButton />\r\n          </Grid>\r\n        </Grid>\r\n\r\n        {/* TODO: use flexbox or something to make height stretch all the way to bottom of viewport */}\r\n        <div style={{ height: \"80vh\" }}>\r\n          <BuildingsTable />\r\n        </div>\r\n      </ReflexElement>\r\n\r\n      <ReflexSplitter />\r\n\r\n      <ReflexElement minSize={400}>\r\n        <div>\r\n          <BuildingDetails />\r\n        </div>\r\n      </ReflexElement>\r\n    </ReflexContainer>\r\n  );\r\n}\r\n\r\nexport default HomePage;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport MuiLink from \"@material-ui/core/Link\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\n\r\nimport { Router, RouteComponentProps, Link } from \"@reach/router\";\r\nimport firebase from \"firebase/app\";\r\nimport { auth } from \"services/firebase\";\r\nimport allActions from \"redux/actions\";\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant='body2' color='textSecondary' align='center'>\r\n      {\"Copyright © \"}\r\n      <MuiLink color='inherit' href='https://github.com/ericvel'>\r\n        Eric Veliyulin\r\n      </MuiLink>{\" \"}\r\n      {new Date().getFullYear()}\r\n      {\".\"}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nfunction SignIn() {\r\n  const dispatch = useDispatch();\r\n\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  const signInWithEmailAndPasswordHandler = (\r\n    event: any,\r\n    email: string,\r\n    password: string\r\n  ) => {\r\n    event.preventDefault();\r\n\r\n    firebase\r\n      .auth()\r\n      .setPersistence(firebase.auth.Auth.Persistence.SESSION)\r\n      .then(() => {\r\n        // Existing and future Auth states are now persisted in the current\r\n        // session only. Closing the window would clear any existing state even\r\n        // if a user forgets to sign out.\r\n        // ...\r\n        // New sign-in will be persisted with session persistence.\r\n        return firebase.auth().signInWithEmailAndPassword(email, password);\r\n      })\r\n      .catch((error) => {\r\n        switch (error.code) {\r\n          case \"auth/invalid-email\":\r\n            setError(\"The email address is invalid\");\r\n            break;\r\n          case \"auth/wrong-password\": {\r\n            setError(\"The password is invalid\");\r\n            break;\r\n          }\r\n          case \"auth/user-not-found\": {\r\n            setError(\"The user does not exist\");\r\n            break;\r\n          }\r\n        }\r\n        console.error(\"Error signing in: \", error);\r\n      });\r\n  };\r\n\r\n  const onChangeHandler = (event: any) => {\r\n    const { name, value } = event.currentTarget;\r\n\r\n    if (name === \"email\") {\r\n      setEmail(value);\r\n    } else if (name === \"password\") {\r\n      setPassword(value);\r\n    }\r\n  };\r\n\r\n  function handleSubmit(event: any) {\r\n    event.preventDefault();\r\n  }\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Container component='main' maxWidth='xs'>\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component='h1' variant='h5'>\r\n          Sign in\r\n        </Typography>\r\n        {error !== null && (\r\n          <Typography color='error'>Error: {error}</Typography>\r\n        )}\r\n        <form className={classes.form} noValidate onSubmit={handleSubmit}>\r\n          <TextField\r\n            variant='outlined'\r\n            margin='normal'\r\n            required\r\n            fullWidth\r\n            id='email'\r\n            label='Email Address'\r\n            name='email'\r\n            autoComplete='email'\r\n            autoFocus\r\n            onChange={(event) => onChangeHandler(event)}\r\n          />\r\n          <TextField\r\n            variant='outlined'\r\n            margin='normal'\r\n            required\r\n            fullWidth\r\n            name='password'\r\n            label='Password'\r\n            type='password'\r\n            id='password'\r\n            autoComplete='current-password'\r\n            onChange={(event) => onChangeHandler(event)}\r\n          />\r\n          <Button\r\n            type='submit'\r\n            fullWidth\r\n            variant='contained'\r\n            color='primary'\r\n            className={classes.submit}\r\n            onClick={(event) => {\r\n              signInWithEmailAndPasswordHandler(event, email, password);\r\n            }}\r\n          >\r\n            Sign In\r\n          </Button>\r\n        </form>\r\n      </div>\r\n      <Box mt={8}>\r\n        <Copyright />\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default SignIn;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport allActions from \"redux/actions\";\r\nimport { IRootState } from \"redux/reducers\";\r\n\r\nimport firebase from \"firebase/app\";\r\n\r\nimport \"devextreme/dist/css/dx.common.css\";\r\nimport \"devextreme/dist/css/dx.material.blue.light.css\";\r\n\r\nimport { ThemeProvider } from \"@material-ui/core/styles\";\r\nimport theme from \"styles/theme\";\r\n\r\nimport HomePage from \"components/HomePage\";\r\nimport SignIn from \"components/SignIn\";\r\n\r\nfunction App() {\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n  firebase.auth().onAuthStateChanged(function (user) {\r\n    if (user) {\r\n      // User is signed in.\r\n      setIsAuthenticated(true);\r\n    } else {\r\n      // No user is signed in.\r\n      setIsAuthenticated(false);\r\n    }\r\n  });\r\n\r\n  return isAuthenticated ? (\r\n    <ThemeProvider theme={theme}>\r\n      <HomePage />\r\n    </ThemeProvider>\r\n  ) : (\r\n    <SignIn />\r\n  );\r\n  /*  <ThemeProvider theme={theme}>\r\n      {isAuthenticated ? <HomePage /> : <SignIn />}\r\n    </ThemeProvider> */\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            \"This web app is being served cache-first by a service \" +\r\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === \"installed\") {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                \"New content is available and will be used when all \" +\r\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log(\"Content is cached for offline use.\");\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"Error during service worker registration:\", error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { \"Service-Worker\": \"script\" },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get(\"content-type\");\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        \"No internet connection found. App is running in offline mode.\"\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister();\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import {\r\n  BuildingElementActionTypes,\r\n  MaterialInventoryActionTypes,\r\n  SelectBuildingElementAction,\r\n  ElementRouteActionTypes,\r\n  HoverBuildingElementActionTypes,\r\n  SimulatedDataActionTypes,\r\n  MaterialProductsActionTypes,\r\n  SimulatedMaterialProductsActionTypes,\r\n  SET_BUILDING_ELEMENTS,\r\n  SET_MATERIAL_INVENTORY,\r\n  SELECT_BUILDING_ELEMENT,\r\n  ADD_TO_ELEMENT_ROUTE,\r\n  SET_BUILDING_ELEMENT_ROUTE,\r\n  HOVER_BUILDING_ELEMENT,\r\n  STOP_HOVER_BUILDING_ELEMENT,\r\n  SET_SIMULATED_DATA,\r\n  SET_MATERIAL_PRODUCTS,\r\n  SET_SIMULATED_MATERIAL_PRODUCTS,\r\n} from \"../actions/types\";\r\n\r\nexport const buildingElements = (\r\n  state: IBuildingElement[] = [],\r\n  action: BuildingElementActionTypes\r\n) => {\r\n  switch (action.type) {\r\n    case SET_BUILDING_ELEMENTS:\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const materialInventory = (\r\n  state: IMaterialInventory[] = [],\r\n  action: MaterialInventoryActionTypes\r\n) => {\r\n  switch (action.type) {\r\n    case SET_MATERIAL_INVENTORY:\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst initialSelectedElementState: IBuildingElement = {\r\n  idbuilding_elements: 0,\r\n  idlevels: 0,\r\n  name: \"\",\r\n  hierarchy: 0,\r\n  A1A3: null,\r\n  A4: null,\r\n  B4_m: null,\r\n  B4_t: null,\r\n  idparent: null,\r\n};\r\n\r\nexport const selectedBuildingElement = (\r\n  state: IBuildingElement = initialSelectedElementState,\r\n  action: SelectBuildingElementAction\r\n) => {\r\n  switch (action.type) {\r\n    case SELECT_BUILDING_ELEMENT:\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const buildingElementRoute = (\r\n  state: IBuildingElement[] = [],\r\n  action: ElementRouteActionTypes\r\n) => {\r\n  switch (action.type) {\r\n    case ADD_TO_ELEMENT_ROUTE:\r\n      return [...state, action.payload];\r\n    case SET_BUILDING_ELEMENT_ROUTE:\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const hoveredBuildingElement = (\r\n  state: number | null = null,\r\n  action: HoverBuildingElementActionTypes\r\n) => {\r\n  switch (action.type) {\r\n    case HOVER_BUILDING_ELEMENT:\r\n      return action.payload;\r\n    case STOP_HOVER_BUILDING_ELEMENT:\r\n      return null;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const simulatedData = (\r\n  state: ISimulatedData = {},\r\n  action: SimulatedDataActionTypes\r\n) => {\r\n  switch (action.type) {\r\n    case SET_SIMULATED_DATA:\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const materialProducts = (\r\n  state: IMaterialTableParentRow[] = [],\r\n  action: MaterialProductsActionTypes\r\n) => {\r\n  switch (action.type) {\r\n    case SET_MATERIAL_PRODUCTS:\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const simulatedMaterialProducts = (\r\n  state: IMaterialTableParentRow[] = [],\r\n  action: SimulatedMaterialProductsActionTypes\r\n) => {\r\n  switch (action.type) {\r\n    case SET_SIMULATED_MATERIAL_PRODUCTS:\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { SET_EE_METRIC, EEMetricActionTypes } from \"../actions/types\";\r\n\r\nconst initialEEMetric: IEEMetric = {\r\n  perSqM: true,\r\n  perYear: false,\r\n};\r\n\r\nexport const EEMetric = (\r\n  state = initialEEMetric,\r\n  action: EEMetricActionTypes\r\n) => {\r\n  switch (action.type) {\r\n    case SET_EE_METRIC:\r\n      return { ...state, [action.name]: action.checked };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport { buildings, selectedBuildings } from \"./buildings\";\r\nimport { isCompareDialogOpen } from \"./flags\";\r\nimport {\r\n  buildingElements,\r\n  materialInventory,\r\n  selectedBuildingElement,\r\n  buildingElementRoute,\r\n  hoveredBuildingElement,\r\n  simulatedData,\r\n  materialProducts,\r\n  simulatedMaterialProducts,\r\n} from \"./elementsAndMaterials\";\r\nimport {\r\n  materialsGroupBy,\r\n  displayMode,\r\n  canSelectMultipleBuildings,\r\n  isSimulationModeActive,\r\n} from \"./ui\";\r\nimport { EEMetric } from \"./settings\";\r\nimport { currentUser } from \"./user\";\r\n\r\nconst rootReducer = combineReducers({\r\n  buildings,\r\n  selectedBuildings,\r\n  isCompareDialogOpen,\r\n  buildingElements,\r\n  materialInventory,\r\n  selectedBuildingElement,\r\n  buildingElementRoute,\r\n  hoveredBuildingElement,\r\n  materialsGroupBy,\r\n  displayMode,\r\n  canSelectMultipleBuildings,\r\n  isSimulationModeActive,\r\n  EEMetric,\r\n  simulatedData,\r\n  currentUser,\r\n  materialProducts,\r\n  simulatedMaterialProducts,\r\n});\r\n\r\nexport default rootReducer;\r\n\r\nexport type IRootState = ReturnType<typeof rootReducer>;\r\n","import {\r\n  BuildingActionTypes,\r\n  SET_BUILDINGS,\r\n  SelectedBuildingActionTypes,\r\n  SELECT_BUILDINGS,\r\n  DESELECT_ALL_BUILDINGS,\r\n} from \"../actions/types\";\r\n\r\nexport const buildings = (\r\n  state: IBuilding[] = [],\r\n  action: BuildingActionTypes\r\n) => {\r\n  switch (action.type) {\r\n    case SET_BUILDINGS:\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const selectedBuildings = (\r\n  state: IBuilding[] = [],\r\n  action: SelectedBuildingActionTypes\r\n) => {\r\n  switch (action.type) {\r\n    case SELECT_BUILDINGS:\r\n      return action.payload;\r\n    case DESELECT_ALL_BUILDINGS:\r\n      return [];\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  ToggleCompareDialogOpenAction,\r\n  TOGGLE_COMPARE_DIALOG_OPEN,\r\n} from \"../actions/types\";\r\n\r\nexport const isCompareDialogOpen = (\r\n  state = false,\r\n  action: ToggleCompareDialogOpenAction\r\n) => {\r\n  switch (action.type) {\r\n    case TOGGLE_COMPARE_DIALOG_OPEN:\r\n      return !state;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  SET_MATERIALS_GROUP_BY,\r\n  MaterialsGroupByActionTypes,\r\n  SET_DISPLAY_MODE,\r\n  DisplayModeActionTypes,\r\n  TOGGLE_CAN_SELECT_MULTIPLE,\r\n  CanSelectMultipleActionTypes,\r\n  TOGGLE_SIMULATION_MODE,\r\n  SimulationModeActionTypes\r\n} from \"../actions/types\";\r\n\r\nimport { GroupBy } from \"interfaces/enums\";\r\n \r\nexport const materialsGroupBy = (\r\n  state = GroupBy.Product,\r\n  action: MaterialsGroupByActionTypes\r\n) => {\r\n  switch (action.type) {\r\n    case SET_MATERIALS_GROUP_BY:\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const displayMode = (\r\n  state = \"table\",\r\n  action: DisplayModeActionTypes\r\n) => {\r\n  switch (action.type) {\r\n    case SET_DISPLAY_MODE:\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const canSelectMultipleBuildings = (\r\n  state = false,\r\n  action: CanSelectMultipleActionTypes\r\n) => {\r\n  switch (action.type) {\r\n    case TOGGLE_CAN_SELECT_MULTIPLE:\r\n      return !state;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const isSimulationModeActive = (\r\n  state = false,\r\n  action: SimulationModeActionTypes\r\n) => {\r\n  switch (action.type) {\r\n    case TOGGLE_SIMULATION_MODE:\r\n      return !state;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import firebase from \"firebase/app\";\r\nimport { SET_CURRENT_USER, CurrentUserActionTypes } from \"../actions/types\";\r\n\r\nexport const currentUser = (\r\n  state: firebase.User | null = null,\r\n  action: CurrentUserActionTypes\r\n) => {\r\n  switch (action.type) {\r\n    case SET_CURRENT_USER:\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./components/App\";\r\nimport SignIn from \"./components/SignIn\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport \"fontsource-roboto\";\r\n\r\nimport { Provider } from \"react-redux\";\r\nimport { createStore, applyMiddleware } from \"redux\";\r\nimport rootReducer from \"./redux/reducers\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport HomePage from \"components/HomePage\";\r\nrequire(\"dotenv\").config();\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ &&\r\n    window.__REDUX_DEVTOOLS_EXTENSION__()\r\n);\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n    {/* <HomePage /> */}\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}
{"version":3,"sources":["interfaces/enums.ts","styles/theme.tsx","redux/actions/index.ts","redux/actions/buildingActions.ts","redux/actions/types.ts","redux/actions/uiActions.ts","redux/actions/elementAndMaterialActions.ts","redux/actions/settingsActions.ts","redux/actions/userActions.ts","components/TableUtilities/Formatters.tsx","components/BuildingsTable/ColumnData.tsx","components/LoadingIndicator/LoadingIndicator.tsx","components/BuildingsTable/BuildingsTable.tsx","services/firebase_config.js","services/firebase.tsx","components/MaterialsContainer/BuildingElementsView/ElementsTable/ColumnData.tsx","helpers/materialHelpers.tsx","components/MaterialsContainer/BuildingElementsView/ElementsTable/ElementsTable.tsx","components/ChartComponents/index.tsx","components/MaterialsContainer/BuildingElementsView/ElementsChart/ElementsChart.tsx","components/MaterialsContainer/ProductView/ProductTable/ColumnData.tsx","components/TableUtilities/CustomCells.tsx","components/TableUtilities/SimulationHelpers.tsx","components/TableUtilities/EditPlugin.tsx","components/MaterialsContainer/ProductView/ProductTable/ProductTable.tsx","components/MaterialsContainer/ProductView/ProductChart/ProductChart.tsx","components/MaterialsContainer/ProductView/ProductView.tsx","components/MaterialsContainer/BuildingElementsView/BuildingElementsView.tsx","components/MaterialsContainer/CategoryView/CategoryTable/ColumnData.tsx","components/MaterialsContainer/CategoryView/CategoryTable/CustomCells.tsx","components/MaterialsContainer/CategoryView/CategoryTable/CategoryTable.tsx","components/MaterialsContainer/CategoryView/CategoryChart/CategoryChart.tsx","components/MaterialsContainer/CategoryView/CategoryView.tsx","components/MaterialsContainer/MaterialsContainer.tsx","components/BuildingDetails/SingleBuildingView/SingleBuildingChart/SingleBuildingChart.tsx","components/BuildingDetails/SingleBuildingView/SimulationModeSwitch/SimulationModeSwitch.tsx","components/BuildingDetails/SingleBuildingView/SingleBuildingView.tsx","components/BuildingDetails/MultipleBuildingsView/GWPCompareChart/GWPCompareChart.tsx","components/BuildingDetails/MultipleBuildingsView/MultipleBuildingsView.tsx","components/BuildingDetails/BuildingDetails.tsx","components/HelpButton/HelpButton.tsx","components/SettingsButton/SettingsButton.tsx","components/HomePage/HomePage.tsx","components/SignIn/SignIn.tsx","components/App/App.tsx","serviceWorker.js","redux/reducers/elementsAndMaterials.ts","redux/reducers/settings.ts","redux/reducers/index.ts","redux/reducers/buildings.ts","redux/reducers/flags.ts","redux/reducers/ui.ts","redux/reducers/user.ts","index.js"],"names":["GroupBy","LCAPhaseTooltip","theme","createMuiTheme","palette","simulated","main","light","dark","allActions","buildingActions","setBuildings","buildings","type","payload","selectBuildings","deselectAllBuildings","uiActions","setMaterialsGroupBy","groupBy","setDisplayMode","displayMode","toggleCanSelectMultiple","toggleSimulationMode","elementAndMaterialActions","setBuildingElements","buildingElements","setMaterialInventory","materialInventory","selectBuildingElement","buildingElement","addToElementRoute","route","setElementRoute","hoverBuildingElement","elementId","stopHoverBuildingElement","setSimulatedData","simulatedData","setMaterialProducts","materialProducts","setSimulatedMaterialProducts","simulatedMaterialProducts","settingsActions","setEEMetric","eeMetric","name","checked","userActions","setCurrentUser","user","makeStyles","createStyles","simulatedField","color","DecimalFormatter","value","parseFloat","toLocaleString","DecimalTypeProvider","props","formatterComponent","BoldFormatter","BoldTypeProvider","SortLabel","getMessage","column","restProps","message","A1A3","A4","B4","B4m","B4t","B6","B7","ColumnData","columns","title","columnExtensions","columnName","width","wordWrapEnabled","defaultHiddenColumnNames","tableColumnVisibilityColumnExtensions","togglingEnabled","LoadingIndicator","className","CircularProgress","size","thickness","getRowId","row","Object","keys","Root","style","height","getHiddenColumnsFilteringExtensions","hiddenColumnNames","map","predicate","BuildingsTable","dispatch","useDispatch","useSelector","state","useState","loading","setLoading","setSearchTerm","TableSelection","COLUMN_TYPE","leftColumns","multipleSwitchChecked","canSelectMultipleBuildings","decimalColumns","useEffect","loadData","URL","process","REACT_APP_API_URI","console","log","fetch","then","response","json","data","catch","error","delayedCallback","useCallback","_","debounce","filteringColumnExtensions","setFilteringColumnExtensions","selectedRow","setSelectedRow","Paper","rows","rootComponent","for","onValueChange","selection","onSelectionChange","selectedBuildings","filter","building","includes","idbuildings","lastSelected","find","selected","indexOf","undefined","rowId","length","showSortingControls","sortLabelComponent","selectByRowClick","highlightRow","showSelectionColumn","onHiddenColumnNamesChange","FormControlLabel","control","Switch","onChange","label","firebaseConfig","apiKey","REACT_APP_FIREBASE_API_KEY","authDomain","REACT_APP_FIREBASE_AUTH_DOMAIN","projectId","REACT_APP_FIREBASE_PROJECT_ID","storageBucket","REACT_APP_FIREBASE_STORAGE_BUCKET","messagingSenderId","REACT_APP_FIREBASE_MESSAGING_SENDER_ID","appId","REACT_APP_FIREBASE_APP_ID","measurementId","REACT_APP_FIREBASE_MEASUREMENT_ID","firebase","initializeApp","auth","firestore","db","getSimulatedDataFromDb","buildingId","username","currentUser","email","collection","doc","get","getChildElements","parentElement","childElements","element","idparent","idlevels","getElementMaterials","elementMaterials","material","idbuilding_elements","wrapArgumentAxisLabel","wordArray","split","breakPoint","Math","ceil","slice","join","sortByEE","chartData","sort","a","b","B4_m","B4_t","createMaterialChartData","materials","idmaterials","sourceType","RSL_mi","source","dataType","dataYear","density","EEf_A1A3","RSL","comments","parentId","groupByMaterial","materialsGrouped","reduce","res","idmaterialInventory","quantity","buildingElementName","push","mergeSimulatedDataIntoMaterialProducts","materialRows","changedRows","useStyles","customRow","backgroundColor","cursor","ElementsTable","selectedBuildingElement","boldColumns","handleRowClick","commandComponents","edit","onExecute","Tooltip","IconButton","onClick","onCommitChanges","rowComponent","Row","id","showEditCommand","commandComponent","CommandButton","customizeHint","e","seriesName","chart","padding","spacing","argumentAxisLabel","fill","ElementsChart","setChartData","forEach","dataEntry","String","Number","sortedChartData","classes","dataSource","rotated","onPointClick","point","target","clickedElementId","el","onDrawn","querySelectorAll","querySelector","childNodes","argumentField","barWidth","hoverMode","valueField","text","font","customizeText","verticalAlignment","horizontalAlignment","itemTextPosition","enabled","location","customizeTooltip","arg","valueText","zIndex","arrowLength","format","interactive","groupSummaryItems","showInGroupFooter","alignByColumn","editingStateColumnExtensions","editingEnabled","EditCell","cell","indentCell","groupButton","lookupEditCell","inputRoot","selectMenu","position","editCell","paddingTop","paddingBottom","children","Cell","SimulatedFieldCell","fontWeight","roundTo","num","places","factor","round","labelAsterisk","fontSize","subtitleAsterisk","sourceTypes","Popup","onApplyChanges","onCancelChanges","open","originalRow","setOriginalRow","setSourceType","setA1A3","nonSimulatedRow","product","Dialog","onClose","DialogTitle","disableTypography","Typography","variant","component","noWrap","DialogContent","Grid","container","item","xs","FormGroup","TextField","select","required","margin","event","simulatedValue","emissionNumber","textFieldEvent","InputLabelProps","asterisk","option","MenuItem","key","disabled","materialCat","InputProps","startAdornment","InputAdornment","FU","enterDelay","placement","DialogActions","Button","PopupEditing","React","memo","popupComponent","editedRow","editingRowIds","createRowChange","rowChanges","changeRow","commitChangedRows","stopEditRows","cancelChangedRows","targetRow","rowIds","changeArgs","change","Command","CustomTreeCell","ProductTable","isSimulationModeActive","setRows","expandedRowIds","setExpandedRowIds","TableEditColumn","leftFixedColumns","onExpandedRowIdsChange","getChildRows","rootRows","childRows","r","changed","changedRowId","values","updatedSimulatedData","entries","getKeyValue","updatedSimulatedMaterialProducts","set","writeSimulatedDataToDb","cellComponent","MaterialProductCell","ProductChart","labelText","spans","subEl","innerHTML","labelToMaterialId","ProductView","tableData","setTableData","groupedMaterials","m","treeData","concat","breadCrumbs","marginTop","infoIcon","secondary","infoContainer","marginBottom","infoIconGridItem","StyledBreadcrumb","withStyles","root","grey","typography","fontWeightRegular","boxShadow","shadows","emphasize","Chip","StyledBreadcrumbActive","BuildingElementsView","elementRoute","buildingElementRoute","rootElement","hierarchy","poppedRouteItem","setPoppedRouteItem","alignItems","tempRoute","pop","Breadcrumbs","index","icon","handleBreadcrumbClick","Fragment","justify","align","GroupCell","colSpan","expanded","onToggle","tableRow","tableColumn","contentComponent","iconComponent","indentCellComponent","inlineSummaryComponent","inlineSummaryItemComponent","summaryCellComponent","summaryItemComponent","containerComponent","inlineSummaries","styles","TableCell","SummaryCell","tooltipTitle","columnSummaries","CategoryTable","grouping","groupItems","calculator","getValue","firstRowValue","every","v","IntegratedSummary","defaultCalculator","formattedValue","overflowX","button","top","left","CategoryChart","isFirstLevel","setIsFirstLevel","selectedCategory","setSelectedCategory","chartHeight","setChartHeight","parentRows","filterData","originalArgument","weight","family","bottom","right","CategoryView","elementTable","materialChildRows","categoryParentRows","groupByCategory","formControl","marginRight","minWidth","MaterialsContainer","materialsGroupBy","setTooltipOpen","handleTooltip","isOpen","elementQuery","inventoryQuery","Promise","all","responses","exists","ReactDOM","unstable_batchedUpdates","gutterBottom","disableFocusListener","disableHoverListener","disableTouchListener","FormControl","InputLabel","Select","displayEmpty","onMouseEnter","onMouseLeave","onOpen","Product","BuildingElement","Category","FormLabel","RadioGroup","Radio","parentIsLoading","Skeleton","SingleBuildingChart","checkedEEMetrics","EEMetric","nonSimulatedValues","isSeriesSimulated","sumMaterialEmissions","perSqM","floor_area","perYear","lifetime","lcaPhase","gwp","series","some","labelToFieldname","seriesLabel","axisTitle","fieldName","showInLegend","ignoreEmptyPoints","nameField","CustomSwitch","switchBase","track","SimulationModeSwitch","buildingSection","divider","elementSection","buildingInfoLabels","content","SingleBuildingView","building_identifier","building_name","project","typology","construction_type","inputProps","readOnly","disableUnderline","fullWidth","defaultValue","Divider","GWPCompareChart","identifier","a1a3","a4","b4m","b4t","reverse","MultipleBuildingsView","noSelectionContainer","drawer","flexShrink","drawerPaper","overflowY","BuildingDetails","Drawer","paper","anchor","closeButton","other","aria-label","MuiDialogContent","MuiDialogActions","terminologyDictionary","term","definition","HelpButton","setOpen","handleClose","dividers","List","entry","ListItem","autoFocus","maxWidth","SettingsButton","handleEEMetricChange","iconSize","subheader","ListSubheader","ListItemText","primary","ListItemSecondaryAction","edge","mainContent","titleBar","HomePage","Container","Copyright","href","Date","getFullYear","display","flexDirection","avatar","form","submit","SignIn","setEmail","password","setPassword","setError","onChangeHandler","currentTarget","CssBaseline","Avatar","noValidate","onSubmit","preventDefault","autoComplete","setPersistence","Auth","Persistence","SESSION","signInWithEmailAndPassword","code","signInWithEmailAndPasswordHandler","Box","mt","App","isAuthenticated","setIsAuthenticated","onAuthStateChanged","ThemeProvider","Boolean","window","hostname","match","initialSelectedElementState","initialEEMetric","rootReducer","combineReducers","action","isCompareDialogOpen","hoveredBuildingElement","require","config","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.44f88bb2.chunk.js","sourcesContent":["export enum GroupBy {\r\n  Category = \"category\",\r\n  BuildingElement = \"buildingElement\",\r\n  Product = \"product\",\r\n}\r\n\r\nexport enum LCAPhaseTooltip {\r\n  A1A3 = \"Material production\",\r\n  A4 = \"Transportation to building site\",\r\n  B4 = \"Replacement\",\r\n  B4m = \"Material replacements\",\r\n  B4t = \"Transportation of material replacements\",\r\n  B6 = \"Operational energy use\",\r\n  B7 = \"Operational water use\"\r\n}","import orange from \"@material-ui/core/colors/orange\";\r\nimport { createMuiTheme } from \"@material-ui/core/styles\";\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    simulated: {\r\n      main: \"#ef6c00\",\r\n      light: \"#ff9d3f\",\r\n      dark: \"#b53d00\",\r\n    },\r\n  },\r\n});\r\n\r\nexport default theme;\r\n","import buildingActions from \"./buildingActions\";\r\nimport uiActions from \"./uiActions\";\r\nimport elementAndMaterialActions from \"./elementAndMaterialActions\";\r\nimport settingsActions from \"./settingsActions\";\r\nimport userActions from \"./userActions\";\r\n\r\nconst allActions = {\r\n  buildingActions,\r\n  uiActions,\r\n  elementAndMaterialActions,\r\n  settingsActions,\r\n  userActions\r\n};\r\n\r\nexport default allActions;\r\n","import {\r\n  SET_BUILDINGS,\r\n  BuildingActionTypes,\r\n  SELECT_BUILDINGS,\r\n  DESELECT_ALL_BUILDINGS,\r\n  SelectedBuildingActionTypes,\r\n} from \"./types\";\r\n\r\nconst setBuildings = (buildings: IBuilding[]): BuildingActionTypes => {\r\n  return {\r\n    type: SET_BUILDINGS,\r\n    payload: buildings,\r\n  };\r\n};\r\n\r\nconst selectBuildings = (\r\n  buildings: IBuilding[]\r\n): SelectedBuildingActionTypes => {\r\n  return {\r\n    type: SELECT_BUILDINGS,\r\n    payload: buildings,\r\n  };\r\n};\r\n\r\nconst deselectAllBuildings = (): SelectedBuildingActionTypes => {\r\n  return {\r\n    type: DESELECT_ALL_BUILDINGS,\r\n  };\r\n};\r\n\r\nexport default {\r\n  setBuildings,\r\n  selectBuildings,\r\n  deselectAllBuildings,\r\n};\r\n","import firebase from \"firebase/app\";\r\n\r\nexport const SET_BUILDINGS = \"SET_BUILDINGS\";\r\n\r\nexport const SELECT_BUILDINGS = \"SELECT_BUILDINGS\";\r\nexport const DESELECT_ALL_BUILDINGS = \"DESELECT_ALL_BUILDINGS\";\r\n\r\nexport const SET_BUILDING_ELEMENTS = \"SET_BUILDING_ELEMENTS\";\r\nexport const SET_MATERIAL_INVENTORY = \"SET_MATERIAL_INVENTORY\";\r\nexport const SELECT_BUILDING_ELEMENT = \"SELECT_BUILDING_ELEMENT\";\r\n\r\nexport const ADD_TO_ELEMENT_ROUTE = \"ADD_TO_ELEMENT_ROUTE\";\r\nexport const SET_BUILDING_ELEMENT_ROUTE = \"SET_BUILDING_ELEMENT_ROUTE\";\r\n\r\nexport const TOGGLE_CAN_SELECT_MULTIPLE = \"TOGGLE_CAN_SELECT_MULTIPLE\";\r\nexport const TOGGLE_COMPARE_DIALOG_OPEN = \"TOGGLE_COMPARE_DIALOG_OPEN\";\r\n\r\nexport const HOVER_BUILDING_ELEMENT = \"HOVER_BUILDING_ELEMENT\";\r\nexport const STOP_HOVER_BUILDING_ELEMENT = \"STOP_HOVER_BUILDING_ELEMENT\";\r\n\r\nexport const SET_MATERIALS_GROUP_BY = \"SET_CONTENT_TYPE\";\r\nexport const SET_DISPLAY_MODE = \"SET_DISPLAY_MODE\";\r\n\r\nexport const SET_EE_METRIC = \"SET_EE_METRIC\";\r\n\r\nexport const TOGGLE_SIMULATION_MODE = \"TOGGLE_SIMULATION_MODE\";\r\nexport const SET_SIMULATED_DATA = \"SET_SIMULATED_DATA\";\r\n\r\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";\r\n\r\nexport const SET_MATERIAL_PRODUCTS = \"SET_MATERIAL_PRODUCTS\";\r\nexport const SET_SIMULATED_MATERIAL_PRODUCTS = \"SET_SIMULATED_MATERIAL_PRODUCTS\";\r\n\r\ninterface SetBuildingsAction {\r\n  type: typeof SET_BUILDINGS;\r\n  payload: IBuilding[];\r\n}\r\n\r\ninterface SelectBuildingsAction {\r\n  type: typeof SELECT_BUILDINGS;\r\n  payload: IBuilding[];\r\n}\r\n\r\ninterface DeselectAllBuildingsAction {\r\n  type: typeof DESELECT_ALL_BUILDINGS;\r\n}\r\n\r\ninterface SetBuildingElementsAction {\r\n  type: typeof SET_BUILDING_ELEMENTS;\r\n  payload: IBuildingElement[];\r\n}\r\n\r\ninterface SetMaterialInventoryAction {\r\n  type: typeof SET_MATERIAL_INVENTORY;\r\n  payload: IMaterialInventory[];\r\n}\r\n\r\nexport interface SelectBuildingElementAction {\r\n  type: typeof SELECT_BUILDING_ELEMENT;\r\n  payload: IBuildingElement;\r\n}\r\n\r\ninterface AddToElementRouteAction {\r\n  type: typeof ADD_TO_ELEMENT_ROUTE;\r\n  payload: IBuildingElement;\r\n}\r\n\r\ninterface SetElementRouteAction {\r\n  type: typeof SET_BUILDING_ELEMENT_ROUTE;\r\n  payload: IBuildingElement[];\r\n}\r\n\r\ninterface ToggleCanSelectMultipleAction {\r\n  type: typeof TOGGLE_CAN_SELECT_MULTIPLE;\r\n}\r\n\r\nexport type ToggleCompareDialogOpenAction = {\r\n  type: typeof TOGGLE_COMPARE_DIALOG_OPEN;\r\n};\r\n\r\ninterface HoverBuildingElementAction {\r\n  type: typeof HOVER_BUILDING_ELEMENT;\r\n  payload: number;\r\n}\r\n\r\ninterface StopHoverBuildingElementAction {\r\n  type: typeof STOP_HOVER_BUILDING_ELEMENT;\r\n  payload: number;\r\n}\r\n\r\ninterface SetMaterialsGroupByAction {\r\n  type: typeof SET_MATERIALS_GROUP_BY;\r\n  payload: string;\r\n}\r\n\r\ninterface SetDisplayModeAction {\r\n  type: typeof SET_DISPLAY_MODE;\r\n  payload: string;\r\n}\r\n\r\ninterface SetEEMetricAction {\r\n  type: typeof SET_EE_METRIC;\r\n  name: string;\r\n  checked: boolean;\r\n}\r\n\r\ninterface ToggleSimulationModeAction {\r\n  type: typeof TOGGLE_SIMULATION_MODE;\r\n}\r\n\r\ninterface SetSimulatednDataAction {\r\n  type: typeof SET_SIMULATED_DATA;\r\n  payload: ISimulatedData;\r\n}\r\n\r\ninterface SetCurrentUserAction {\r\n  type: typeof SET_CURRENT_USER;\r\n  payload: firebase.User | null;\r\n}\r\n\r\ninterface SetMaterialProductsAction {\r\n  type: typeof SET_MATERIAL_PRODUCTS;\r\n  payload: IMaterialTableParentRow[];\r\n}\r\n\r\ninterface SetSimulatedMaterialProductsAction {\r\n  type: typeof SET_SIMULATED_MATERIAL_PRODUCTS;\r\n  payload: IMaterialTableParentRow[];\r\n}\r\n\r\nexport type BuildingActionTypes = SetBuildingsAction;\r\nexport type SelectedBuildingActionTypes =\r\n  | SelectBuildingsAction\r\n  | DeselectAllBuildingsAction;\r\nexport type BuildingElementActionTypes = SetBuildingElementsAction;\r\nexport type MaterialInventoryActionTypes = SetMaterialInventoryAction;\r\nexport type ElementRouteActionTypes =\r\n  | AddToElementRouteAction\r\n  | SetElementRouteAction;\r\nexport type HoverBuildingElementActionTypes =\r\n  | HoverBuildingElementAction\r\n  | StopHoverBuildingElementAction;\r\nexport type MaterialsGroupByActionTypes = SetMaterialsGroupByAction;\r\nexport type DisplayModeActionTypes = SetDisplayModeAction;\r\nexport type CanSelectMultipleActionTypes = ToggleCanSelectMultipleAction;\r\nexport type EEMetricActionTypes = SetEEMetricAction;\r\nexport type SimulationModeActionTypes = ToggleSimulationModeAction;\r\nexport type SimulatedDataActionTypes = SetSimulatednDataAction;\r\nexport type CurrentUserActionTypes = SetCurrentUserAction;\r\nexport type MaterialProductsActionTypes = SetMaterialProductsAction;\r\nexport type SimulatedMaterialProductsActionTypes = SetSimulatedMaterialProductsAction;\r\n","import {\r\n  SET_MATERIALS_GROUP_BY,\r\n  MaterialsGroupByActionTypes,\r\n  SET_DISPLAY_MODE,\r\n  DisplayModeActionTypes,\r\n  TOGGLE_CAN_SELECT_MULTIPLE,\r\n  CanSelectMultipleActionTypes,\r\n  TOGGLE_SIMULATION_MODE,\r\n  SimulationModeActionTypes\r\n} from \"./types\";\r\n\r\nconst setMaterialsGroupBy = (groupBy: string): MaterialsGroupByActionTypes => {\r\n  return {\r\n    type: SET_MATERIALS_GROUP_BY,\r\n    payload: groupBy,\r\n  };\r\n};\r\n\r\nconst setDisplayMode = (displayMode: string): DisplayModeActionTypes => {\r\n  return {\r\n    type: SET_DISPLAY_MODE,\r\n    payload: displayMode,\r\n  };\r\n};\r\n\r\nconst toggleCanSelectMultiple = (): CanSelectMultipleActionTypes => {\r\n  return {\r\n    type: TOGGLE_CAN_SELECT_MULTIPLE,\r\n  };\r\n};\r\n\r\nconst toggleSimulationMode = (): SimulationModeActionTypes => {\r\n  return {\r\n    type: TOGGLE_SIMULATION_MODE,\r\n  };\r\n};\r\n\r\nexport default {\r\n  setMaterialsGroupBy,\r\n  setDisplayMode,\r\n  toggleCanSelectMultiple,\r\n  toggleSimulationMode\r\n};\r\n","import {\r\n  SET_BUILDING_ELEMENTS,\r\n  SET_MATERIAL_INVENTORY,\r\n  SELECT_BUILDING_ELEMENT,\r\n  SET_BUILDING_ELEMENT_ROUTE,\r\n  ADD_TO_ELEMENT_ROUTE,\r\n  HOVER_BUILDING_ELEMENT,\r\n  STOP_HOVER_BUILDING_ELEMENT,\r\n  SET_SIMULATED_DATA,\r\n  SET_MATERIAL_PRODUCTS,\r\n  SET_SIMULATED_MATERIAL_PRODUCTS,\r\n  BuildingElementActionTypes,\r\n  MaterialInventoryActionTypes,\r\n  SelectBuildingElementAction,\r\n  ElementRouteActionTypes,\r\n  HoverBuildingElementActionTypes,\r\n  SimulatedDataActionTypes,\r\n  MaterialProductsActionTypes,\r\n  SimulatedMaterialProductsActionTypes\r\n} from \"./types\";\r\n\r\nconst setBuildingElements = (\r\n  buildingElements: IBuildingElement[]\r\n): BuildingElementActionTypes => {\r\n  return {\r\n    type: SET_BUILDING_ELEMENTS,\r\n    payload: buildingElements,\r\n  };\r\n};\r\n\r\nconst setMaterialInventory = (\r\n  materialInventory: IMaterialInventory[]\r\n): MaterialInventoryActionTypes => {\r\n  return {\r\n    type: SET_MATERIAL_INVENTORY,\r\n    payload: materialInventory,\r\n  };\r\n};\r\nconst selectBuildingElement = (\r\n  buildingElement: IBuildingElement\r\n): SelectBuildingElementAction => {\r\n  return {\r\n    type: SELECT_BUILDING_ELEMENT,\r\n    payload: buildingElement,\r\n  };\r\n};\r\n\r\nconst addToElementRoute = (\r\n  route: IBuildingElement\r\n): ElementRouteActionTypes => {\r\n  return {\r\n    type: ADD_TO_ELEMENT_ROUTE,\r\n    payload: route,\r\n  };\r\n};\r\n\r\nconst setElementRoute = (\r\n  route: IBuildingElement[]\r\n): ElementRouteActionTypes => {\r\n  return {\r\n    type: SET_BUILDING_ELEMENT_ROUTE,\r\n    payload: route,\r\n  };\r\n};\r\n\r\nconst hoverBuildingElement = (\r\n  elementId: number\r\n): HoverBuildingElementActionTypes => {\r\n  return {\r\n    type: HOVER_BUILDING_ELEMENT,\r\n    payload: elementId,\r\n  };\r\n};\r\n\r\nconst stopHoverBuildingElement = (\r\n  elementId: number\r\n): HoverBuildingElementActionTypes => {\r\n  return {\r\n    type: STOP_HOVER_BUILDING_ELEMENT,\r\n    payload: elementId,\r\n  };\r\n};\r\n\r\nconst setSimulatedData = (\r\n  simulatedData: ISimulatedData\r\n): SimulatedDataActionTypes => {\r\n  return {\r\n    type: SET_SIMULATED_DATA,\r\n    payload: simulatedData,\r\n  };\r\n};\r\n\r\nconst setMaterialProducts = (\r\n  materialProducts: IMaterialTableParentRow[]\r\n): MaterialProductsActionTypes => {\r\n  return {\r\n    type: SET_MATERIAL_PRODUCTS,\r\n    payload: materialProducts,\r\n  };\r\n};\r\n\r\nconst setSimulatedMaterialProducts = (\r\n  simulatedMaterialProducts: IMaterialTableParentRow[]\r\n): SimulatedMaterialProductsActionTypes => {\r\n  return {\r\n    type: SET_SIMULATED_MATERIAL_PRODUCTS,\r\n    payload: simulatedMaterialProducts,\r\n  };\r\n};\r\n\r\nexport default {\r\n  setBuildingElements,\r\n  setMaterialInventory,\r\n  selectBuildingElement,\r\n  addToElementRoute,\r\n  setElementRoute,\r\n  hoverBuildingElement,\r\n  stopHoverBuildingElement,\r\n  setSimulatedData,\r\n  setMaterialProducts,\r\n  setSimulatedMaterialProducts\r\n};\r\n","import { SET_EE_METRIC, EEMetricActionTypes } from \"./types\";\r\n\r\nconst setEEMetric = (eeMetric: IEEMetricData): EEMetricActionTypes => {\r\n  return {\r\n    type: SET_EE_METRIC,\r\n    name: eeMetric.name,\r\n    checked: eeMetric.checked,\r\n  };\r\n};\r\n\r\nexport default {\r\n  setEEMetric,\r\n};\r\n","import firebase from \"firebase/app\";\r\nimport {\r\n  SET_CURRENT_USER,\r\n  CurrentUserActionTypes,\r\n} from \"./types\";\r\n\r\nconst setCurrentUser = (user: firebase.User | null): CurrentUserActionTypes => {\r\n  return {\r\n    type: SET_CURRENT_USER,\r\n    payload: user,\r\n  };\r\n};\r\n\r\nexport default {\r\n  setCurrentUser,\r\n};\r\n","import React from \"react\";\r\nimport { DataTypeProvider } from \"@devexpress/dx-react-grid\";\r\nimport { LCAPhaseTooltip } from \"interfaces/enums\";\r\nimport { TableHeaderRow } from \"@devexpress/dx-react-grid-material-ui\";\r\nimport { Theme, createStyles, makeStyles } from \"@material-ui/core/styles\";\r\nimport theme from \"styles/theme\";\r\n\r\nconst useStyles = makeStyles((/* theme: Theme */) =>\r\n  createStyles({\r\n    simulatedField: {\r\n      color: theme.palette.simulated.main,\r\n      // fontWeight: \"bolder\",\r\n    },\r\n  }));\r\n\r\nconst DecimalFormatter = ({ value }: any) =>\r\n  value ? parseFloat(value).toLocaleString() : 0;\r\n\r\nexport const DecimalTypeProvider = (props: any) => (\r\n  <DataTypeProvider formatterComponent={DecimalFormatter} {...props} />\r\n);\r\n\r\nconst BoldFormatter = ({ value }: any) => <b>{value}</b>;\r\n\r\nexport const BoldTypeProvider = (props: any) => (\r\n  <DataTypeProvider formatterComponent={BoldFormatter} {...props} />\r\n);\r\n\r\nconst SimulatedFieldFormatter = ({ value, row }: any) => {\r\n  console.log(\"Row: \", row)\r\n  return <b className={useStyles().simulatedField}>{value}</b>;\r\n};\r\n\r\nexport const SimulatedFieldTypeProvider = (props: any) => (\r\n  <DataTypeProvider formatterComponent={SimulatedFieldFormatter} {...props} />\r\n);\r\n\r\nexport const SortLabel = ({ getMessage, column, ...restProps }: any) => {\r\n  var message: string = \"\";\r\n  switch (column.name) {\r\n    case \"A1A3\":\r\n      message = LCAPhaseTooltip.A1A3;\r\n      break;\r\n    case \"A4\":\r\n      message = LCAPhaseTooltip.A4;\r\n      break;\r\n    case \"B4\":\r\n      message = LCAPhaseTooltip.B4;\r\n      break;\r\n    case \"B4_m\":\r\n      message = LCAPhaseTooltip.B4m;\r\n      break;\r\n    case \"B4_t\":\r\n      message = LCAPhaseTooltip.B4t;\r\n      break;\r\n    case \"GWP_B6\":\r\n      message = LCAPhaseTooltip.B6;\r\n      break;\r\n    case \"GWP_B7\":\r\n      message = LCAPhaseTooltip.B7;\r\n      break;\r\n    case \"FU\":\r\n      message = \"Functional unit\";\r\n      break;\r\n    case \"RSL_mi\":\r\n      message = \"Reference service life\";\r\n      break;\r\n    case \"RSL\":\r\n      message = \"Reference service life\";\r\n      break;\r\n    default:\r\n      message = `Sort by ${column.name}`;\r\n      break;\r\n  }\r\n  return (\r\n    <TableHeaderRow.SortLabel\r\n      column={column}\r\n      getMessage={() => {\r\n        return message;\r\n      }}\r\n      {...restProps}\r\n    />\r\n  );\r\n};\r\n","import { Column } from \"@devexpress/dx-react-grid\";\r\nimport { Table } from \"@devexpress/dx-react-grid-material-ui\";\r\n\r\nclass ColumnData {\r\n  static readonly columns: Column[] = [\r\n    { name: \"building_identifier\", title: \"ID\" },\r\n    { name: \"building_name\", title: \"Building name\" },\r\n    { name: \"project\", title: \"Project\" },\r\n    { name: \"country\", title: \"Country\" },\r\n    { name: \"city\", title: \"City\" },\r\n    { name: \"typology\", title: \"Typology\" },\r\n    { name: \"construction_type\", title: \"Construction type\" },\r\n    { name: \"built_status\", title: \"Built status\" },\r\n    { name: \"energy_ambition_level\", title: \"Energy ambition level\" },\r\n    { name: \"calculation_method\", title: \"Calculation method\" },\r\n    { name: \"main_data_source\", title: \"Data source\" },\r\n    { name: \"study_type\", title: \"Study type\" },\r\n    { name: \"study_year\", title: \"Study year\" },\r\n    { name: \"floor_area\", title: \"Floor area (m\\xB2)\" },\r\n    { name: \"lifetime\", title: \"Lifetime\" },\r\n    { name: \"A1A3\", title: \"A1-A3\" },\r\n    { name: \"A4\", title: \"A4\" },\r\n    { name: \"B4_m\", title: \"B4 (m)\" },\r\n    { name: \"B4_t\", title: \"B4 (t)\" },\r\n    { name: \"GWP_B6\", title: \"B6\" },\r\n    { name: \"GWP_B7\", title: \"B7\" },\r\n    { name: \"heated_volume\", title: \"Heated volume\" },\r\n    { name: \"area_footprint\", title: \"Area footprint\" },\r\n    { name: \"area_roof\", title: \"Area roof\" },\r\n    { name: \"area_wall\", title: \"Area wall\" },\r\n    { name: \"area_windowAndDoor\", title: \"Area window and door\" },\r\n    { name: \"heatloss_number\", title: \"Heatloss number\" },\r\n    { name: \"comments\", title: \"Comments\" },\r\n  ];\r\n\r\n  static readonly columnExtensions: Table.ColumnExtension[] = [\r\n    { columnName: \"building_identifier\", width: 80 },\r\n    { columnName: \"building_name\", width: 200, wordWrapEnabled: true },\r\n    { columnName: \"project\", width: 120 },\r\n    { columnName: \"country\", width: 110 },\r\n    { columnName: \"city\", width: 120 },\r\n    { columnName: \"typology\", width: 130 },\r\n    { columnName: \"construction_type\", width: 160 },\r\n    { columnName: \"built_status\", width: 120 },\r\n    { columnName: \"energy_ambition_level\", width: 180 },\r\n    { columnName: \"calculation_method\", width: 170 },\r\n    { columnName: \"main_data_source\", width: 120 },\r\n    { columnName: \"study_type\", width: 160 },\r\n    { columnName: \"study_year\", width: 110 },\r\n    { columnName: \"lifetime\", width: 100 },\r\n    { columnName: \"floor_area\", width: 150 },\r\n    { columnName: \"heated_volume\", width: 150 },\r\n    { columnName: \"area_footprint\", width: 150 },\r\n    { columnName: \"area_roof\", width: 150 },\r\n    { columnName: \"area_wall\", width: 150 },\r\n    { columnName: \"area_windowAndDoor\", width: 150 },\r\n    { columnName: \"heatloss_number\", width: 150 },\r\n    { columnName: \"comments\", width: 400, wordWrapEnabled: true },\r\n  ];\r\n\r\n  static readonly defaultHiddenColumnNames: string[] = [\r\n    \"country\",\r\n    \"built_status\",\r\n    \"energy_ambition_level\",\r\n    \"main_data_source\",\r\n    \"calculation_method\",\r\n    // \"lifetime\",\r\n    \"heated_volume\",\r\n    \"area_footprint\",\r\n    \"area_roof\",\r\n    \"area_wall\",\r\n    \"area_windowAndDoor\",\r\n    \"heatloss_number\",\r\n    \"comments\",\r\n  ];\r\n\r\n  static readonly tableColumnVisibilityColumnExtensions = [\r\n    { columnName: \"building_identifier\", togglingEnabled: false },\r\n    { columnName: \"building_name\", togglingEnabled: false },\r\n  ];\r\n}\r\n\r\nexport default ColumnData;\r\n","import * as React from \"react\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\nimport \"./LoadingIndicator.css\";\r\n\r\nconst LoadingIndicator = () => (\r\n  <div className='loading-shading-mui'>\r\n    <CircularProgress className='loading-icon-mui' size={50} thickness={5} />\r\n  </div>\r\n);\r\n\r\nexport default LoadingIndicator;\r\n","import React, { useState, useEffect, useCallback, ReactText } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport allActions from \"redux/actions\";\r\nimport { IRootState } from \"redux/reducers\";\r\n\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport {\r\n  SortingState,\r\n  IntegratedSorting,\r\n  SearchState,\r\n  SelectionState,\r\n  IntegratedFiltering,\r\n  DataTypeProvider,\r\n} from \"@devexpress/dx-react-grid\";\r\nimport {\r\n  Grid,\r\n  Toolbar,\r\n  SearchPanel,\r\n  TableHeaderRow,\r\n  ColumnChooser,\r\n  TableColumnVisibility,\r\n  VirtualTable,\r\n  TableSelection,\r\n  TableFixedColumns,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\nimport { Template, TemplatePlaceholder } from \"@devexpress/dx-react-core\";\r\nimport _ from \"lodash\";\r\n\r\nimport {\r\n  DecimalTypeProvider,\r\n  SortLabel,\r\n} from \"components/TableUtilities/Formatters\";\r\nimport ColumnData from \"./ColumnData\";\r\nimport LoadingIndicator from \"components/LoadingIndicator\";\r\n\r\nconst getRowId = (row: any) => row[Object.keys(row)[0]];\r\nconst Root = (props: any) => (\r\n  <Grid.Root {...props} style={{ height: \"100%\" }} />\r\n);\r\n\r\nconst getHiddenColumnsFilteringExtensions = (hiddenColumnNames: string[]) =>\r\n  hiddenColumnNames.map((columnName) => ({\r\n    columnName,\r\n    predicate: () => false,\r\n  }));\r\n\r\nfunction BuildingsTable() {\r\n  const dispatch = useDispatch();\r\n  const buildings = useSelector((state: IRootState) => state.buildings);\r\n\r\n  const [columns] = useState(ColumnData.columns);\r\n  const [columnExtensions] = useState(ColumnData.columnExtensions);\r\n  const [loading, setLoading] = useState(false);\r\n  const [searchTerm, setSearchTerm] = useState<string>();\r\n\r\n  const [defaultHiddenColumnNames] = useState(\r\n    ColumnData.defaultHiddenColumnNames\r\n  );\r\n  const [tableColumnVisibilityColumnExtensions] = useState(\r\n    ColumnData.tableColumnVisibilityColumnExtensions\r\n  );\r\n  const [leftColumns] = useState([TableSelection.COLUMN_TYPE, \"building_name\"]);\r\n  const multipleSwitchChecked = useSelector(\r\n    (state: IRootState) => state.canSelectMultipleBuildings\r\n  );\r\n\r\n  const [decimalColumns] = useState([\r\n    \"A1A3\",\r\n    \"A4\",\r\n    \"B4_t\",\r\n    \"B4_m\",\r\n    \"GWP_B6\",\r\n    \"GWP_B7\",\r\n  ]);\r\n\r\n  const handleMultipleSwitchChange = () => {\r\n    dispatch(allActions.uiActions.toggleCanSelectMultiple());\r\n    dispatch(allActions.buildingActions.deselectAllBuildings());\r\n    setSelectedRow([]);\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadData();\r\n  }, []);\r\n\r\n  const loadData = () => {\r\n    if (!loading) {\r\n      setLoading(true);\r\n\r\n      var URL = process.env.REACT_APP_API_URI + \"/buildings\";\r\n      \r\n      console.log(\"URL: \", URL);\r\n      fetch(URL)\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          dispatch(allActions.buildingActions.setBuildings(data));\r\n          setLoading(false);\r\n          console.log(\"Fetched rows: \", buildings);\r\n        })\r\n        .catch((error) => {\r\n          console.log(\"Error getting building data:\", error);\r\n          setLoading(false);\r\n        });\r\n    }\r\n  };\r\n\r\n  const changeSearchTerm = (value: any) => {\r\n    console.log(\"Changed search term: \", value);\r\n    setSearchTerm(value);\r\n  };\r\n\r\n  // Delays query so it is not fired on every keystroke\r\n  const delayedCallback = useCallback(_.debounce(changeSearchTerm, 300), []);\r\n\r\n  // Only search in visible columns\r\n  const [filteringColumnExtensions, setFilteringColumnExtensions] = useState(\r\n    getHiddenColumnsFilteringExtensions(defaultHiddenColumnNames)\r\n  );\r\n\r\n  const onHiddenColumnNamesChange = (hiddenColumnNames: string[]) =>\r\n    setFilteringColumnExtensions(\r\n      getHiddenColumnsFilteringExtensions(hiddenColumnNames)\r\n    );\r\n\r\n  const [selectedRow, setSelectedRow] = useState<ReactText[]>([]);\r\n\r\n  function changeSelection(selection: ReactText[]) {\r\n    // Select one row or multiple rows at a time\r\n    if (!multipleSwitchChecked) {\r\n      const lastSelected = selection.find(\r\n        (selected) => selectedRow.indexOf(selected) === -1\r\n      );\r\n\r\n      if (lastSelected !== undefined) {\r\n        setSelectedRow([lastSelected]);\r\n\r\n        const rowId = selection[selection.length - 1];\r\n        console.log(\"Selected row: \", rowId);\r\n        const building = buildings.find(\r\n          (building) => building.idbuildings === rowId\r\n        );\r\n        if (building !== undefined)\r\n          dispatch(allActions.buildingActions.selectBuildings([building]));\r\n      } else {\r\n        // Clear selection by double-click on same row\r\n        setSelectedRow([]);\r\n        dispatch(allActions.buildingActions.deselectAllBuildings());\r\n      }\r\n    } else {\r\n      setSelectedRow(selection);\r\n      const selectedBuildings = buildings.filter((building) =>\r\n        selection.includes(building.idbuildings)\r\n      );\r\n      dispatch(allActions.buildingActions.selectBuildings(selectedBuildings));\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Paper style={{ height: \"600px\" }}>\r\n      <Grid\r\n        rows={buildings}\r\n        columns={columns}\r\n        getRowId={getRowId}\r\n        rootComponent={Root}\r\n      >\r\n        <DecimalTypeProvider for={decimalColumns} />\r\n        <SearchState onValueChange={delayedCallback} />\r\n        <IntegratedFiltering columnExtensions={filteringColumnExtensions} />\r\n        <SortingState />\r\n        <IntegratedSorting />\r\n        <SelectionState\r\n          selection={selectedRow}\r\n          onSelectionChange={changeSelection}\r\n        />\r\n        <VirtualTable height='auto' columnExtensions={columnExtensions} />\r\n        <TableHeaderRow showSortingControls sortLabelComponent={SortLabel} />\r\n        <TableSelection\r\n          selectByRowClick\r\n          highlightRow={true}\r\n          showSelectionColumn={multipleSwitchChecked}\r\n        />\r\n        <TableFixedColumns leftColumns={leftColumns} />\r\n        <TableColumnVisibility\r\n          defaultHiddenColumnNames={defaultHiddenColumnNames}\r\n          columnExtensions={tableColumnVisibilityColumnExtensions}\r\n          onHiddenColumnNamesChange={onHiddenColumnNamesChange}\r\n        />\r\n        <Toolbar />\r\n        <Template name='toolbarContent'>\r\n          <TemplatePlaceholder />\r\n          <FormControlLabel\r\n            control={\r\n              <Switch\r\n                checked={multipleSwitchChecked}\r\n                onChange={handleMultipleSwitchChange}\r\n                name='checkedB'\r\n                color='primary'\r\n              />\r\n            }\r\n            label='Select multiple'\r\n          />\r\n        </Template>\r\n        <SearchPanel />\r\n        <ColumnChooser />\r\n      </Grid>\r\n      {loading && <LoadingIndicator />}\r\n    </Paper>\r\n  );\r\n}\r\n\r\nexport default BuildingsTable;\r\n","// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\r\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\r\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\r\n  appId: process.env.REACT_APP_FIREBASE_APP_ID,\r\n  measurementId: process.env.REACT_APP_FIREBASE_MEASUREMENT_ID,\r\n};\r\n\r\nexport default firebaseConfig;\r\n","// Firebase App (the core Firebase SDK) is always required and must be listed first\r\nimport firebase from \"firebase/app\";\r\nimport firebaseConfig from \"./firebase_config\";\r\n\r\n// If you enabled Analytics in your project, add the Firebase SDK for Analytics\r\nimport \"firebase/analytics\";\r\n// Add the Firebase products that you want to use\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\n\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\nexport const auth = firebase.auth();\r\nexport const firestore = firebase.firestore();\r\nconst db = firebase.firestore();\r\n\r\nexport function authenticateAnonymously() {\r\n  return firebase.auth().signInAnonymously();\r\n}\r\n\r\nexport function signInWithEmailPassword(email: string, password: string) {\r\n  firebase\r\n    .auth()\r\n    .signInWithEmailAndPassword(email, password)\r\n    .then((userCredential) => {\r\n      // Signed in\r\n      var user = userCredential.user;\r\n      // ...\r\n    })\r\n    .catch((error) => {\r\n      var errorCode = error.code;\r\n      var errorMessage = error.message;\r\n    });\r\n}\r\n\r\nexport function getSimulatedDataFromDb(buildingId: string) {\r\n  let username = \"anonymous\";\r\n  const user = firebase.auth().currentUser;\r\n  if (user) {\r\n    // User is signed in.\r\n    if (user.email !== null) username = user.email;\r\n  }\r\n\r\n  var docRef = db\r\n    .collection(\"users\")\r\n    .doc(username)\r\n    .collection(\"simulatedData\")\r\n    .doc(buildingId);\r\n\r\n  return docRef.get();\r\n}\r\n\r\nexport function writeSimulatedDataToDb(buildingId: string, simulatedData: any) {\r\n  let username = \"anonymous\";\r\n  const user = firebase.auth().currentUser;\r\n  if (user) {\r\n    // User is signed in.\r\n    if (user.email !== null) username = user.email;\r\n  }\r\n  \r\n  db.collection(\"users\")\r\n    .doc(username)\r\n    .collection(\"simulatedData\")\r\n    .doc(buildingId)\r\n    .set(simulatedData)\r\n    .then(() => {\r\n      console.log(\"Document successfully written!\");\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"Error writing document: \", error);\r\n    });\r\n}\r\n","import { Column } from \"@devexpress/dx-react-grid\";\r\nimport { Table } from \"@devexpress/dx-react-grid-material-ui\";\r\n\r\nclass ColumnData {\r\n  static readonly columns: Column[] = [\r\n    // { name: 'idbuilding_elements', title: 'ID' },\r\n    { name: \"name\", title: \"Name\" },\r\n    { name: \"A1A3\", title: \"A1-A3\" },\r\n    { name: \"A4\", title: \"A4\" },\r\n    { name: \"B4_m\", title: \"B4 (m)\" },\r\n    { name: \"B4_t\", title: \"B4 (t)\" },\r\n  ];\r\n\r\n  static readonly columnExtensions: Table.ColumnExtension[] = [\r\n    // { columnName: 'idbuilding_elements', width: 90 },\r\n    { columnName: \"name\", width: 180, wordWrapEnabled: true },\r\n    { columnName: \"A1A3\", width: 130 },\r\n    { columnName: \"A4\", width: 130 },\r\n    { columnName: \"B4_m\", width: 130 },\r\n    { columnName: \"B4_t\", width: 130 },\r\n  ];\r\n\r\n  static readonly defaultHiddenColumnNames: string[] = [];\r\n\r\n  static readonly tableColumnVisibilityColumnExtensions = [\r\n    { columnName: \"name\", togglingEnabled: false },\r\n  ];\r\n}\r\n\r\nexport default ColumnData;\r\n","/*\r\nCOMMON FUNCTIONS\r\n*/\r\n\r\nexport const getChildElements = (\r\n  buildingElements: IBuildingElement[],\r\n  parentElement: IBuildingElement\r\n) => {\r\n  const childElements = buildingElements.filter(\r\n    (element) => element.idparent === parentElement.idlevels\r\n  );\r\n  if (childElements !== undefined) {\r\n    return childElements;\r\n  }\r\n\r\n  return [];\r\n};\r\n\r\n// Get materials associated with a building element\r\nexport const getElementMaterials = (\r\n  materialInventory: IMaterialInventory[],\r\n  parentElement: IBuildingElement\r\n) => {\r\n  const elementMaterials = materialInventory.filter(\r\n    (material) =>\r\n      material.idbuilding_elements === parentElement.idbuilding_elements\r\n  );\r\n  if (elementMaterials !== undefined) {\r\n    return elementMaterials;\r\n  }\r\n\r\n  return [];\r\n};\r\n\r\n/* \r\nCHART FUNCTIONS\r\n*/\r\n\r\n// Wraps label over two lines if longer than 15 characters\r\nexport const wrapArgumentAxisLabel = (data: any) => {\r\n  if (data.value.length > 15) {\r\n    const wordArray: string[] = data.value.split(\" \");\r\n    if (wordArray.length > 2) {\r\n      const breakPoint = Math.ceil(wordArray.length / 2);\r\n      const firstLine = wordArray.slice(0, breakPoint).join(\" \");\r\n      const secondLine = wordArray.slice(breakPoint).join(\" \");\r\n      return firstLine + \"\\n\" + secondLine;\r\n    } else {\r\n      return wordArray.join(\"\\n\");\r\n    }\r\n  }\r\n\r\n  return data.value;\r\n};\r\n\r\n// Sorts chart data by the sum of each item's embodied emission values\r\nexport const sortByEE = (\r\n  chartData: IMaterialChartItem[] | IElementChartItem[]\r\n) => {\r\n  chartData.sort(function (a: any, b: any) {\r\n    const aSum = a.A1A3 + a.A4 + a.B4_m + a.B4_t;\r\n    const bSum = b.A1A3 + b.A4 + b.B4_m + b.B4_t;\r\n    return aSum - bSum;\r\n  });\r\n\r\n  return chartData;\r\n};\r\n\r\n// Group material inventory by material type, sum material inventory embodied emission values\r\nexport const createMaterialChartData = (\r\n  materials: IMaterialTableParentRow[]\r\n) => {\r\n  // Only keep certain attributes from MaterialTableRow\r\n  const chartData: IMaterialChartItem[] = materials.map(\r\n    ({\r\n      idmaterials,\r\n      sourceType,\r\n      RSL_mi,\r\n      source,\r\n      dataType,\r\n      dataYear,\r\n      density,\r\n      EEf_A1A3,\r\n      RSL,\r\n      comments,\r\n      parentId,\r\n      ...keepAttrs\r\n    }) => keepAttrs\r\n  );\r\n\r\n  return chartData;\r\n};\r\n\r\n// Group material inventory by material category, sum material inventory embodied emission values\r\nexport const groupByCategory = (materials: IMaterialChartItem[]) => {\r\n  const materialsGrouped: IMaterialChartItem[] = [];\r\n\r\n  materials.reduce(function (res: any, value: IMaterialChartItem) {\r\n    if (!res[value.materialCat]) {\r\n      res[value.materialCat] = {\r\n        name: value.materialCat,\r\n        A1A3: 0.0,\r\n        A4: 0.0,\r\n        B4_m: 0.0,\r\n        B4_t: 0.0,\r\n        materialCat: \"\",\r\n      };\r\n      materialsGrouped.push(res[value.materialCat]);\r\n    }\r\n    res[value.materialCat].A1A3 += value.A1A3;\r\n    res[value.materialCat].A4 += value.A4;\r\n    res[value.materialCat].B4_m += value.B4_m;\r\n    res[value.materialCat].B4_t += value.B4_t;\r\n    return res;\r\n  }, {});\r\n\r\n  return materialsGrouped;\r\n};\r\n\r\n/*\r\nTABLE FUNCTIONS\r\n*/\r\n\r\n// Group material inventory by material type, sum material inventory embodied emission values\r\nexport const groupByMaterial = (materials: IMaterialInventory[]) => {\r\n  const materialsGrouped: IMaterialTableParentRow[] = [];\r\n\r\n  materials.reduce(function (res: any, value: IMaterialInventory) {\r\n    if (!res[value.name]) {\r\n      res[value.name] = {\r\n        ...value,\r\n        idmaterialInventory: value.parentId,\r\n        quantity: 0.0,\r\n        A1A3: 0.0,\r\n        A4: 0.0,\r\n        B4_m: 0.0,\r\n        B4_t: 0.0,\r\n        parentId: null,\r\n        buildingElementName: value.buildingElementName,\r\n      };\r\n      materialsGrouped.push(res[value.name]);\r\n    }\r\n\r\n    res[value.name].quantity += value.quantity;\r\n    res[value.name].A1A3 += value.A1A3;\r\n    res[value.name].A4 += value.A4;\r\n    res[value.name].B4_m += value.B4_m;\r\n    res[value.name].B4_t += value.B4_t;\r\n\r\n    // Display ellipses if materials in group don't share the same building element\r\n    if (res[value.name].buildingElementName !== value.buildingElementName) {\r\n      res[value.name].buildingElementName = \"...\";\r\n    }\r\n    return res;\r\n  }, {});\r\n\r\n  return materialsGrouped;\r\n};\r\n\r\n// Rows containing the individual material inventory entries\r\nexport const createChildRows = (materials: IMaterialInventory[]) => {\r\n  const childRows: IMaterialTableChildRow[] = materials.map((m) => ({\r\n    idmaterialInventory: m.idmaterialInventory,\r\n    name: \"ID: \" + String(m.idmaterialInventory),\r\n    buildingElementName: m.buildingElementName,\r\n    quantity: m.quantity,\r\n    FU: m.FU,\r\n    A1A3: m.A1A3 || 0.0,\r\n    A4: m.A4 || 0.0,\r\n    B4_m: m.B4_m || 0.0,\r\n    B4_t: m.B4_t || 0.0,\r\n    RSL_mi: m.RSL_mi,\r\n    parentId: m.parentId,\r\n  }));\r\n\r\n  return childRows;\r\n};\r\n\r\n/*\r\nSIMULATION MODE\r\n*/\r\n\r\nexport const mergeSimulatedDataIntoMaterialProducts = (\r\n  materialRows: IMaterialTableRow[],\r\n  simulatedData: ISimulatedData\r\n) => {\r\n  let changedRows: IMaterialTableRow[] = [];\r\n  if (simulatedData) {\r\n    changedRows = materialRows.map((row) =>\r\n      simulatedData[row.idmaterialInventory]\r\n        ? { ...row, ...simulatedData[row.idmaterialInventory] }\r\n        : row\r\n    );\r\n  }\r\n\r\n  return changedRows;\r\n};\r\n","import React, { useState, useEffect, useCallback, ReactText } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { IRootState } from \"redux/reducers\";\r\nimport allActions from \"redux/actions\";\r\n\r\nimport {\r\n  Theme,\r\n  createStyles,\r\n  makeStyles,\r\n  withStyles,\r\n  emphasize,\r\n} from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport SubdirectoryArrowRightIcon from \"@material-ui/icons/SubdirectoryArrowRight\";\r\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\n\r\nimport {\r\n  SortingState,\r\n  IntegratedSorting,\r\n  SearchState,\r\n  SelectionState,\r\n  DataTypeProvider,\r\n  EditingState,\r\n} from \"@devexpress/dx-react-grid\";\r\nimport {\r\n  Grid,\r\n  TableHeaderRow,\r\n  Table,\r\n  VirtualTable,\r\n  Toolbar,\r\n  SearchPanel,\r\n  ColumnChooser,\r\n  TableColumnVisibility,\r\n  TableFixedColumns,\r\n  TableSelection,\r\n  TableEditColumn,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\nimport _ from \"lodash\";\r\n\r\nimport {\r\n  DecimalTypeProvider,\r\n  BoldTypeProvider,\r\n  SortLabel,\r\n} from \"components/TableUtilities/Formatters\";\r\nimport { EditCell } from \"components/TableUtilities/CustomCells\";\r\nimport ColumnData from \"./ColumnData\";\r\nimport { getChildElements } from \"helpers/materialHelpers\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    customRow: {\r\n      \"&:hover\": {\r\n        backgroundColor: \"#F5F5F5\",\r\n        cursor: \"pointer\",\r\n      },\r\n    },\r\n  })\r\n);\r\n\r\nconst ElementsTable = (props: any) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const buildingElements = useSelector(\r\n    (state: IRootState) => state.buildingElements\r\n  );\r\n  const selectedBuildingElement = useSelector(\r\n    (state: IRootState) => state.selectedBuildingElement\r\n  );\r\n\r\n  const [columns] = useState(ColumnData.columns);\r\n  const [columnExtensions] = useState(ColumnData.columnExtensions);\r\n  const [decimalColumns] = useState([\"A1A3\", \"A4\", \"B4_t\", \"B4_m\"]);\r\n  const [tooltipColumns] = useState([\"name\"]);\r\n  const [boldColumns] = useState([\"name\"]);\r\n\r\n  const CustomTableRow = ({ row, style, ...props }: any) => (\r\n    <VirtualTable.Row\r\n      {...props}\r\n      id={\"tableRow\" + row.idbuilding_elements}\r\n      className={useStyles().customRow}\r\n      onClick={() => handleRowClick(row)}\r\n    />\r\n  );\r\n\r\n  const TooltipFormatter = ({ value }: any) => (\r\n    <Tooltip title={<span>Go to sub-elements</span>}>\r\n      <span>\r\n        <b>{value}</b>\r\n      </span>\r\n    </Tooltip>\r\n  );\r\n\r\n  const CellTooltip = (props: any) => (\r\n    <DataTypeProvider formatterComponent={TooltipFormatter} {...props} />\r\n  );\r\n\r\n  const handleRowClick = (row: IBuildingElement) => {\r\n    dispatch(allActions.elementAndMaterialActions.selectBuildingElement(row));\r\n    dispatch(allActions.elementAndMaterialActions.addToElementRoute(row));\r\n  };\r\n\r\n  const EditButton = ({ onExecute }: any) => (\r\n    <Tooltip title='Go to sub-elements'>\r\n      <IconButton onClick={onExecute}>\r\n        <ChevronRightIcon />\r\n      </IconButton>\r\n    </Tooltip>\r\n  );\r\n\r\n  const commandComponents: any = {\r\n    edit: EditButton,\r\n  };\r\n\r\n  const Command = ({ id, onExecute }: any) => {\r\n    const CommandButton = commandComponents[id];\r\n    return <CommandButton onExecute={onExecute} />;\r\n  };\r\n\r\n  const rows = getChildElements(buildingElements, selectedBuildingElement);\r\n  const height = 500; // 232 + rows.length * 50;\r\n\r\n  return (\r\n    <Grid rows={rows} columns={columns}>\r\n      <BoldTypeProvider for={boldColumns} />\r\n      {/* <CellTooltip for={tooltipColumns} /> */}\r\n      <DecimalTypeProvider for={decimalColumns} />\r\n      <SortingState />\r\n      <IntegratedSorting />\r\n      <EditingState onCommitChanges={() => {}} />\r\n      <VirtualTable\r\n        columnExtensions={columnExtensions}\r\n        rowComponent={CustomTableRow}\r\n        height={height}\r\n      />\r\n      <TableHeaderRow showSortingControls sortLabelComponent={SortLabel} />\r\n      <TableEditColumn\r\n        // showEditCommand={isSimulationModeActive}\r\n        showEditCommand\r\n        commandComponent={Command}\r\n        // cellComponent={EditCell}\r\n        width={80}\r\n      />\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default ElementsTable;\r\n","import React from \"react\";\r\nimport { LCAPhaseTooltip } from \"interfaces/enums\";\r\n\r\nexport const customizeHint = (e: any) => {\r\n  switch (e.seriesName) {\r\n    case \"A1-A3\":\r\n      return LCAPhaseTooltip.A1A3;\r\n      break;\r\n    case \"A4\":\r\n      return LCAPhaseTooltip.A4;\r\n      break;\r\n    case \"B4\":\r\n      return LCAPhaseTooltip.B4;\r\n      break;\r\n    case \"B4 (m)\":\r\n      return LCAPhaseTooltip.B4m;\r\n      break;\r\n    case \"B4 (t)\":\r\n      return LCAPhaseTooltip.B4t;\r\n      break;\r\n  }\r\n};\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { IRootState } from \"redux/reducers\";\r\nimport allActions from \"redux/actions\";\r\n\r\nimport {\r\n  Theme,\r\n  createStyles,\r\n  makeStyles,\r\n} from \"@material-ui/core/styles\";\r\n\r\nimport {\r\n  Chart,\r\n  Series,\r\n  CommonSeriesSettings,\r\n  Legend,\r\n  ArgumentAxis,\r\n  ValueAxis,\r\n  Title,\r\n  Tooltip,\r\n  Size,\r\n  Label,\r\n} from \"devextreme-react/chart\";\r\n\r\nimport { sortByEE, wrapArgumentAxisLabel } from \"helpers/materialHelpers\";\r\nimport { customizeHint } from \"components/ChartComponents\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    chart: {\r\n      padding: theme.spacing(2),\r\n    },\r\n    argumentAxisLabel: {\r\n      fill: \"#767676\",\r\n    },\r\n  })\r\n);\r\n\r\nconst ElementsChart = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const buildingElements = useSelector(\r\n    (state: IRootState) => state.buildingElements\r\n  );\r\n  const selectedBuildingElement = useSelector(\r\n    (state: IRootState) => state.selectedBuildingElement\r\n  );\r\n  const [chartData, setChartData] = useState<IElementChartItem[]>([]);\r\n\r\n  useEffect(() => {\r\n    const childElements = getChildElements(selectedBuildingElement);\r\n    const chartData: IElementChartItem[] = [];\r\n\r\n    childElements.forEach((element) => {\r\n      const dataEntry: IElementChartItem = {\r\n        name: element.name,\r\n        id: String(element.idbuilding_elements),\r\n        A1A3: Number(element.A1A3) || 0.0,\r\n        A4: Number(element.A4) || 0.0,\r\n        B4_m: Number(element.B4_m) || 0.0,\r\n        B4_t: Number(element.B4_t) || 0.0,\r\n      };\r\n\r\n      chartData.push(dataEntry);\r\n    });\r\n\r\n    const sortedChartData = sortByEE(chartData) as IElementChartItem[];\r\n\r\n    setChartData(sortedChartData);\r\n  }, [selectedBuildingElement]);\r\n\r\n  const getChildElements = (parentElement: IBuildingElement) => {\r\n    const childElements = buildingElements.filter(\r\n      (element) => element.idparent === parentElement.idlevels\r\n    );\r\n    if (childElements !== undefined) {\r\n      return childElements;\r\n    }\r\n\r\n    return [];\r\n  };\r\n\r\n  const customizeTooltip = (arg: any) => {\r\n    return {\r\n      text: `<b>${arg.seriesName}</b>\\n ${arg.valueText}`,\r\n    };\r\n  };\r\n\r\n  const onPointClick = (e: any) => {\r\n    const point = e.target;\r\n    const clickedElementId = Number(point.data.id);\r\n\r\n    const element = buildingElements.find(\r\n      (el) => el.idbuilding_elements === clickedElementId\r\n    );\r\n\r\n    if (element !== undefined) {\r\n      dispatch(\r\n        allActions.elementAndMaterialActions.selectBuildingElement(element)\r\n      );\r\n      dispatch(allActions.elementAndMaterialActions.addToElementRoute(element));\r\n    }\r\n  };\r\n\r\n  const onDrawn = (e: any) => {\r\n    // Add pointer cursor to all bar points\r\n    e.element.querySelectorAll(\".dxc-markers rect\").forEach((el: any) => {\r\n      el.style.cursor = \"pointer\";\r\n    });\r\n\r\n    // Add pointer cursor to argument axis labels\r\n    e.element\r\n      .querySelector(\".dxc-arg-elements\")\r\n      .childNodes.forEach((el: any) => {\r\n        el.style.cursor = \"pointer\";\r\n      });\r\n  };\r\n\r\n  const height = 500; //+ chartData.length * 50;\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Chart\r\n      className={classes.chart}\r\n      // title=\"Embodied emissions\"\r\n      dataSource={chartData}\r\n      palette='Material'\r\n      rotated={true}\r\n      onPointClick={onPointClick}\r\n      onDrawn={onDrawn}\r\n      // customizePoint={customizePoint}\r\n      // onPointHoverChanged={onPointHoverChanged}\r\n    >\r\n      <Size height={height} />\r\n      <CommonSeriesSettings\r\n        argumentField='name'\r\n        type='stackedBar'\r\n        barWidth={40}\r\n        hoverMode='allArgumentPoints'\r\n      ></CommonSeriesSettings>\r\n      <Series valueField='A1A3' name='A1-A3' />\r\n      <Series valueField='A4' name='A4' />\r\n      <Series valueField='B4_m' name='B4 (m)' />\r\n      <Series valueField='B4_t' name='B4 (t)' />\r\n      <ValueAxis>\r\n        <Title\r\n          text={\"kgCO2e\"}\r\n          font={{\r\n            size: 14,\r\n          }}\r\n        />\r\n      </ValueAxis>\r\n      <ArgumentAxis>\r\n        <Label customizeText={wrapArgumentAxisLabel} />\r\n      </ArgumentAxis>\r\n      <Legend\r\n        verticalAlignment='bottom'\r\n        horizontalAlignment='center'\r\n        itemTextPosition='top'\r\n        customizeHint={customizeHint}\r\n      />\r\n      <Tooltip\r\n        enabled={true}\r\n        location='edge'\r\n        customizeTooltip={customizeTooltip}\r\n        zIndex={1200}\r\n        arrowLength={6}\r\n        format='fixedPoint'\r\n        interactive\r\n      />\r\n    </Chart>\r\n  );\r\n};\r\n\r\nexport default ElementsChart;\r\n","import { Column, EditingState } from \"@devexpress/dx-react-grid\";\r\nimport { Table } from \"@devexpress/dx-react-grid-material-ui\";\r\n\r\nclass ColumnData {\r\n  static readonly columns: Column[] = [\r\n    { name: \"name\", title: \"Name\" },\r\n    // { name: \"idmaterialInventory\", title: \"ID\" },\r\n    { name: \"quantity\", title: \"Quantity\" },\r\n    { name: \"FU\", title: \"FU\" },\r\n    { name: \"sourceType\", title: \"Source type\" },\r\n    { name: \"A1A3\", title: \"A1-A3\" },\r\n    { name: \"A4\", title: \"A4\" },\r\n    { name: \"B4_m\", title: \"B4 (m)\" },\r\n    { name: \"B4_t\", title: \"B4 (t)\" },\r\n    { name: \"RSL_mi\", title: \"RSL\" },\r\n    { name: \"materialCat\", title: \"Category\" },\r\n    { name: \"buildingElementName\", title: \"Building element\" },\r\n    // { name: \"RSL\", title: \"RSL\" },\r\n    { name: \"source\", title: \"Source\" },\r\n    { name: \"dataType\", title: \"Data type\" },\r\n    { name: \"dataYear\", title: \"Data year\" },\r\n    { name: \"density\", title: \"Density\" },\r\n    { name: \"EEf_A1A3\", title: \"EEf_A1A3\" },\r\n    { name: \"country\", title: \"Country\" },\r\n    { name: \"city\", title: \"City\" },\r\n    { name: \"comments\", title: \"Comments\" },\r\n  ];\r\n\r\n  static readonly columnExtensions: Table.ColumnExtension[] = [\r\n    { columnName: \"idmaterialInventory\", width: 80 },\r\n    { columnName: \"name\", width: 270, wordWrapEnabled: true },\r\n    { columnName: \"dataType\", width: 120 },\r\n    { columnName: \"sourceType\", width: 120 },\r\n    { columnName: \"source\", width: 200, wordWrapEnabled: true },\r\n    { columnName: \"dataYear\", width: 100 },\r\n    { columnName: \"FU\", width: 70 },\r\n    { columnName: \"EEf_A1A3\", width: 110 },\r\n    // { columnName: \"RSL\", width: 80 },\r\n    { columnName: \"comments\", width: 400 },\r\n    { columnName: \"materialCat\", width: 150 },\r\n    { columnName: \"quantity\", width: 110 },\r\n    { columnName: \"RSL_mi\", width: 80 },\r\n    { columnName: \"A1A3\", width: 130 },\r\n    { columnName: \"A4\", width: 130 },\r\n    { columnName: \"B4_m\", width: 130 },\r\n    { columnName: \"B4_t\", width: 130 },\r\n    { columnName: \"buildingElementName\", width: 160, wordWrapEnabled: true },\r\n  ];\r\n\r\n  static readonly defaultHiddenColumnNames: string[] = [\r\n    \"source\",\r\n    // \"RSL\",\r\n    \"dataType\",\r\n    \"dataYear\",\r\n    \"comments\",\r\n    \"EEf_A1A3\",\r\n    \"density\",\r\n    \"country\",\r\n    \"city\",\r\n  ];\r\n\r\n  static readonly tableColumnVisibilityColumnExtensions = [\r\n    { columnName: \"name\", togglingEnabled: false },\r\n  ];\r\n\r\n  static readonly decimalColumns = [\r\n    \"quantity\",\r\n    \"EEf_A1A3\",\r\n    \"A1A3\",\r\n    \"A4\",\r\n    \"B4_t\",\r\n    \"B4_m\",\r\n    \"RSL_mi\"\r\n  ];\r\n\r\n  static readonly groupSummaryItems = [\r\n    {\r\n      columnName: \"quantity\",\r\n      type: \"sum\",\r\n      showInGroupFooter: false,\r\n      alignByColumn: true,\r\n    },\r\n    {\r\n      columnName: \"FU\",\r\n      type: \"staticValue\",\r\n      showInGroupFooter: false,\r\n      alignByColumn: true,\r\n    },\r\n    {\r\n      columnName: \"sourceType\",\r\n      type: \"staticValue\",\r\n      showInGroupFooter: false,\r\n      alignByColumn: true,\r\n    },\r\n    {\r\n      columnName: \"materialCat\",\r\n      type: \"staticValue\",\r\n      showInGroupFooter: false,\r\n      alignByColumn: true,\r\n    },\r\n    {\r\n      columnName: \"RSL_mi\",\r\n      type: \"avg\",\r\n      showInGroupFooter: false,\r\n      alignByColumn: true,\r\n    },\r\n    {\r\n      columnName: \"A1A3\",\r\n      type: \"sum\",\r\n      showInGroupFooter: false,\r\n      alignByColumn: true,\r\n    },\r\n    {\r\n      columnName: \"A4\",\r\n      type: \"sum\",\r\n      showInGroupFooter: false,\r\n      alignByColumn: true,\r\n    },\r\n    {\r\n      columnName: \"B4_m\",\r\n      type: \"sum\",\r\n      showInGroupFooter: false,\r\n      alignByColumn: true,\r\n    },\r\n    {\r\n      columnName: \"B4_t\",\r\n      type: \"sum\",\r\n      showInGroupFooter: false,\r\n      alignByColumn: true,\r\n    },\r\n  ];\r\n\r\n  static readonly editingStateColumnExtensions: EditingState.ColumnExtension[] = [\r\n    { columnName: \"idmaterialInventory\", editingEnabled: false },\r\n    { columnName: \"name\", editingEnabled: false },\r\n    { columnName: \"buildingElementName\", editingEnabled: false },\r\n    // { columnName: \"quantity\", editingEnabled: false},\r\n    { columnName: \"FU\", editingEnabled: false },\r\n    // { columnName: \"sourceType\", editingEnabled: false},\r\n    // { columnName: \"RSL\", editingEnabled: false },\r\n    { columnName: \"materialCat\", editingEnabled: false },\r\n    { columnName: \"RSL_mi\", editingEnabled: false },\r\n    // { columnName: \"EEf_A1A3\", editingEnabled: false},\r\n    // { columnName: \"A1A3\", editingEnabled: false},\r\n    // { columnName: \"A4\", editingEnabled: false},\r\n    // { columnName: \"B4_m\", editingEnabled: false},\r\n    // { columnName: \"B4_t\", editingEnabled: false},\r\n    { columnName: \"dataType\", editingEnabled: false },\r\n    { columnName: \"dataYear\", editingEnabled: false },\r\n    { columnName: \"comments\", editingEnabled: false },\r\n  ];\r\n}\r\n\r\nexport default ColumnData;\r\n","import React from \"react\";\r\nimport ChevronRight from \"@material-ui/icons/ChevronRight\";\r\nimport ExpandMore from \"@material-ui/icons/ExpandMore\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Input from \"@material-ui/core/Input\";\r\n\r\nimport { VirtualTable } from \"@devexpress/dx-react-grid-material-ui\";\r\n\r\nimport { Theme, createStyles, makeStyles } from \"@material-ui/core/styles\";\r\nimport theme from \"styles/theme\";\r\n\r\nimport { useSelector } from \"react-redux\";\r\nimport { IRootState } from \"redux/reducers\";\r\n\r\nconst useStyles = makeStyles((/* theme: Theme */) =>\r\n  createStyles({\r\n    cell: {\r\n      padding: theme.spacing(1),\r\n    },\r\n    indentCell: {\r\n      padding: 0,\r\n    },\r\n    groupButton: {\r\n      height: theme.spacing(4),\r\n      width: theme.spacing(4),\r\n    },\r\n    lookupEditCell: {\r\n      padding: theme.spacing(1),\r\n    },\r\n    inputRoot: {\r\n      width: \"100%\",\r\n    },\r\n    selectMenu: {\r\n      position: \"absolute !important\" as \"absolute\",\r\n    },\r\n    editCell: {\r\n      paddingTop: theme.spacing(0),\r\n      paddingBottom: theme.spacing(0),\r\n    },\r\n    simulatedField: {\r\n      color: theme.palette.simulated.main,\r\n      // fontWeight: \"bolder\",\r\n    },\r\n  }));\r\n\r\nexport const GroupCell = ({\r\n  style,\r\n  colSpan,\r\n  row,\r\n  column,\r\n  expanded,\r\n  onToggle,\r\n  classes,\r\n  children,\r\n  className,\r\n  tableRow,\r\n  tableColumn,\r\n  contentComponent,\r\n  iconComponent,\r\n  indentCellComponent,\r\n  inlineSummaryComponent,\r\n  inlineSummaryItemComponent,\r\n  summaryCellComponent,\r\n  summaryItemComponent,\r\n  containerComponent,\r\n  inlineSummaries,\r\n  getMessage,\r\n  ...restProps\r\n}: any) => {\r\n  const handleClick = () => onToggle();\r\n  const styles = useStyles();\r\n  return (\r\n    <TableCell\r\n      colSpan={colSpan}\r\n      style={style}\r\n      className={styles.cell}\r\n      onClick={handleClick}\r\n      {...restProps}\r\n    >\r\n      <Grid container alignItems='center' justify='space-around'>\r\n        <Grid item xs={2}>\r\n          <IconButton className={styles.groupButton}>\r\n            {expanded ? <ExpandMore /> : <ChevronRight />}\r\n          </IconButton>\r\n        </Grid>\r\n        <Grid item xs={10}>\r\n          <span>\r\n            <strong>{children || row.value}</strong>\r\n          </span>\r\n        </Grid>\r\n      </Grid>\r\n    </TableCell>\r\n  );\r\n};\r\n\r\nexport const SummaryCell = ({\r\n  style,\r\n  colSpan,\r\n  row,\r\n  column,\r\n  expanded,\r\n  onToggle,\r\n  classes,\r\n  children,\r\n  className,\r\n  tableRow,\r\n  tableColumn,\r\n  contentComponent,\r\n  iconComponent,\r\n  indentCellComponent,\r\n  inlineSummaryComponent,\r\n  inlineSummaryItemComponent,\r\n  summaryCellComponent,\r\n  summaryItemComponent,\r\n  containerComponent,\r\n  inlineSummaries,\r\n  getMessage,\r\n  ...restProps\r\n}: any) => {\r\n  const styles = useStyles();\r\n  const handleClick = () => onToggle();\r\n  var tooltipTitle: string = \"\";\r\n  switch (children.props.columnSummaries[0].type) {\r\n    case \"sum\":\r\n      tooltipTitle = \"Sum\";\r\n      break;\r\n    case \"avg\":\r\n      tooltipTitle = \"Average\";\r\n      break;\r\n    case \"staticValue\":\r\n      tooltipTitle = \"Static\";\r\n      break;\r\n  }\r\n  return (\r\n    <TableCell\r\n      colSpan={colSpan}\r\n      onClick={handleClick}\r\n      className={styles.cell}\r\n      {...restProps}\r\n    >\r\n      {tooltipTitle === \"Static\" ? (\r\n        <span>{children}</span>\r\n      ) : (\r\n        <Tooltip title={tooltipTitle}>\r\n          <span>{children}</span>\r\n        </Tooltip>\r\n      )}\r\n    </TableCell>\r\n  );\r\n};\r\n\r\nexport const LookupEditCell = ({\r\n  availableColumnValues,\r\n  value,\r\n  onValueChange,\r\n}: any) => (\r\n  <TableCell className={useStyles().lookupEditCell}>\r\n    <Select\r\n      value={value}\r\n      onChange={(event) => onValueChange(event.target.value)}\r\n      MenuProps={{\r\n        className: useStyles().selectMenu,\r\n      }}\r\n      input={<Input classes={{ root: useStyles().inputRoot }} />}\r\n    >\r\n      {availableColumnValues.map((item: any) => (\r\n        <MenuItem key={item} value={item}>\r\n          {item}\r\n        </MenuItem>\r\n      ))}\r\n    </Select>\r\n  </TableCell>\r\n);\r\n\r\nexport const EditCell = ({ children, style, ...restProps }: any) => {\r\n  return (\r\n    <VirtualTable.Cell\r\n      {...restProps}\r\n      children={restProps.row.parentId === null ? children : null}\r\n      style={{ paddingTop: \"0px\", paddingBottom: \"0px\", ...style }}\r\n    />\r\n  );\r\n};\r\n\r\nconst SimulatedFieldCell = ({ value, style, ...restProps }: any) => (\r\n  <VirtualTable.Cell\r\n    {...restProps}\r\n    style={{\r\n      ...style,\r\n    }}\r\n  >\r\n    <Tooltip title=\"Simulated value\">\r\n      <span\r\n        style={{\r\n          color: theme.palette.simulated.main,\r\n          fontWeight: \"bold\"\r\n        }}\r\n      >\r\n        {typeof value === \"number\" ? value.toLocaleString() : value}\r\n      </span>\r\n    </Tooltip>\r\n  </VirtualTable.Cell>\r\n);\r\n\r\nexport const MaterialProductCell = (\r\n  props: any,\r\n  simulatedData: ISimulatedData\r\n) => {\r\n  const { column, row } = props;\r\n\r\n  if (row.idmaterialInventory in simulatedData) {\r\n    if (column.name in simulatedData[row.idmaterialInventory]) {\r\n      return <SimulatedFieldCell {...props} />;\r\n    }\r\n  }\r\n\r\n  return <VirtualTable.Cell {...props} />;\r\n};\r\n","export function reduceEmissionNumber(emissionNumber: number) {\r\n  var reducedNumber = emissionNumber * 0.7;\r\n  return roundTo(reducedNumber, 3);\r\n}\r\n\r\nexport const roundTo = function (num: number, places: number) {\r\n  const factor = 10 ** places;\r\n  return Math.round(num * factor) / factor;\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { IRootState } from \"redux/reducers\";\r\nimport allActions from \"redux/actions\";\r\n\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {\r\n  Plugin,\r\n  Template,\r\n  TemplateConnector,\r\n  TemplatePlaceholder,\r\n} from \"@devexpress/dx-react-core\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormGroup from \"@material-ui/core/FormGroup\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormLabel from \"@material-ui/core/FormLabel\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nimport { Theme, createStyles, makeStyles } from \"@material-ui/core/styles\";\r\nimport theme from \"styles/theme\";\r\n\r\nimport { reduceEmissionNumber } from \"./SimulationHelpers\";\r\nimport { LCAPhaseTooltip } from \"interfaces/enums\";\r\n\r\nconst useStyles = makeStyles((/* theme: Theme */) =>\r\n  createStyles({\r\n    labelAsterisk: {\r\n      color: theme.palette.simulated.main,\r\n      fontWeight: \"bolder\",\r\n      fontSize: \"large\",\r\n    },\r\n    subtitleAsterisk: {\r\n      color: theme.palette.simulated.main,\r\n      fontWeight: \"bolder\",\r\n    },\r\n  }));\r\n\r\nconst sourceTypes = [\r\n  \"TestSource\",\r\n  \"EPD\",\r\n  \"Ecoinvent\",\r\n  \"Other\",\r\n  \"Custom\",\r\n  \"na\",\r\n  \"Klimatre\",\r\n  \"PEP\",\r\n];\r\n\r\ninterface PopupProps {\r\n  row: IMaterialTableRow;\r\n  onChange: any;\r\n  onApplyChanges: any;\r\n  onCancelChanges: any;\r\n  open: boolean;\r\n}\r\n\r\nexport const Popup = ({\r\n  row,\r\n  onChange,\r\n  onApplyChanges,\r\n  onCancelChanges,\r\n  open,\r\n}: PopupProps) => {\r\n  const [originalRow, setOriginalRow] = useState<IMaterialTableRow>(row);\r\n  const [sourceType, setSourceType] = useState<string>(row.sourceType);\r\n  const [A1A3, setA1A3] = useState<number>(row.A1A3);\r\n\r\n  const materialProducts = useSelector(\r\n    (state: IRootState) => state.materialProducts\r\n  );\r\n  const simulatedMaterialProducts = useSelector(\r\n    (state: IRootState) => state.simulatedMaterialProducts\r\n  );\r\n\r\n  useEffect(() => {\r\n    const nonSimulatedRow = (materialProducts as IMaterialTableRow[]).find(\r\n      (product) => product.idmaterialInventory === row.idmaterialInventory\r\n    );\r\n    if (nonSimulatedRow !== undefined) {\r\n      setOriginalRow(nonSimulatedRow);\r\n      setSourceType(row.sourceType);\r\n      setA1A3(row.A1A3);\r\n    }\r\n  }, [row.idmaterialInventory]);\r\n\r\n  const handleSourceTypeChange = (\r\n    event: React.ChangeEvent<HTMLInputElement>\r\n  ) => {\r\n    setSourceType(event.target.value);\r\n    if (event.target.value === \"TestSource\") {\r\n      const simulatedValue = reduceEmissionNumber(originalRow.A1A3);\r\n      setA1A3(simulatedValue);\r\n      const textFieldEvent = {\r\n        target: { name: \"A1A3\", value: simulatedValue },\r\n      };\r\n      onChange(textFieldEvent);\r\n    } else if (event.target.value === originalRow.sourceType) {\r\n      setA1A3(originalRow.A1A3);\r\n      const textFieldEvent = {\r\n        target: { name: \"A1A3\", value: originalRow.A1A3 },\r\n      };\r\n      onChange(textFieldEvent);\r\n    }\r\n    onChange(event);\r\n  };\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Dialog open={open} onClose={onCancelChanges}>\r\n      <DialogTitle disableTypography>\r\n        <Typography variant='h6' component='h2'>\r\n          Simulate material details\r\n        </Typography>\r\n        <Typography noWrap variant='subtitle2' component='h3'>\r\n          {row.name}\r\n        </Typography>\r\n      </DialogTitle>\r\n      <DialogContent>\r\n        {/* <Typography variant='body2' component='p' color='textSecondary'>\r\n          Simulated fields are marked with{\" \"}\r\n          <Typography\r\n            variant='body1'\r\n            component='span'\r\n            display='inline'\r\n            className={classes.subtitleAsterisk}\r\n          >\r\n            *\r\n          </Typography>\r\n        </Typography> */}\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={6}>\r\n            <FormGroup>\r\n              <TextField\r\n                select\r\n                required={sourceType !== originalRow.sourceType}\r\n                margin='normal'\r\n                name='sourceType'\r\n                label='Source type'\r\n                value={sourceType || \" \"}\r\n                onChange={handleSourceTypeChange}\r\n                InputLabelProps={{\r\n                  classes: {\r\n                    asterisk: classes.labelAsterisk,\r\n                  },\r\n                }}\r\n              >\r\n                {sourceTypes.map((option) => (\r\n                  <MenuItem\r\n                    key={option}\r\n                    value={option}\r\n                    disabled={\r\n                      !(\r\n                        option === originalRow.sourceType ||\r\n                        option === \"TestSource\"\r\n                      )\r\n                    }\r\n                  >\r\n                    {option}\r\n                  </MenuItem>\r\n                ))}\r\n              </TextField>\r\n              <TextField\r\n                margin='normal'\r\n                name='materialCat'\r\n                label='Category'\r\n                value={row.materialCat || \" \"}\r\n                onChange={onChange}\r\n                disabled\r\n              />\r\n              <TextField\r\n                margin='normal'\r\n                name='quantity'\r\n                label='Quantity'\r\n                value={row.quantity || \"0\"}\r\n                onChange={onChange}\r\n                disabled\r\n                InputProps={{\r\n                  startAdornment: (\r\n                    <InputAdornment position='start'>\r\n                      {row.FU || \"\"}\r\n                    </InputAdornment>\r\n                  ),\r\n                }}\r\n              />\r\n              <TextField\r\n                margin='normal'\r\n                name='RSL_mi'\r\n                label='RSL'\r\n                value={row.RSL_mi || \"0\"}\r\n                onChange={onChange}\r\n                disabled\r\n              />\r\n            </FormGroup>\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <FormGroup>\r\n              <Tooltip enterDelay={500} placement=\"bottom\" title={LCAPhaseTooltip.A1A3}>\r\n                <TextField\r\n                  required={A1A3 !== originalRow.A1A3}\r\n                  margin='normal'\r\n                  name='A1A3'\r\n                  label='A1-A3'\r\n                  value={A1A3 || \"0\"}\r\n                  onChange={onChange}\r\n                  disabled\r\n                  InputLabelProps={{\r\n                    classes: {\r\n                      asterisk: classes.labelAsterisk,\r\n                    },\r\n                  }}\r\n                />\r\n              </Tooltip>\r\n              <Tooltip enterDelay={500} placement=\"bottom\" title={LCAPhaseTooltip.A4}>\r\n                <TextField\r\n                  margin='normal'\r\n                  name='A4'\r\n                  label='A4'\r\n                  value={row.A4 || \"0\"}\r\n                  onChange={onChange}\r\n                  disabled\r\n                />\r\n              </Tooltip>\r\n              <Tooltip enterDelay={500} placement=\"bottom\" title={LCAPhaseTooltip.B4m}>\r\n                <TextField\r\n                  margin='normal'\r\n                  name='B4_m'\r\n                  label='B4 (m)'\r\n                  value={row.B4_m || \"0\"}\r\n                  onChange={onChange}\r\n                  disabled\r\n                />\r\n              </Tooltip>\r\n              <Tooltip enterDelay={500} placement=\"bottom\" title={LCAPhaseTooltip.B4t}>\r\n                <TextField\r\n                  margin='normal'\r\n                  name='B4_t'\r\n                  label='B4 (t)'\r\n                  value={row.B4_t || \"0\"}\r\n                  onChange={onChange}\r\n                  disabled\r\n                />\r\n              </Tooltip>\r\n            </FormGroup>\r\n          </Grid>\r\n        </Grid>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onCancelChanges} color='primary'>\r\n          Cancel\r\n        </Button>\r\n        <Button onClick={onApplyChanges} color='primary'>\r\n          Save\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport const PopupEditing = React.memo(({ popupComponent: Popup }: any) => (\r\n  <Plugin>\r\n    <Template name='popupEditing'>\r\n      <TemplateConnector>\r\n        {(\r\n          { rows, getRowId, editingRowIds, createRowChange, rowChanges },\r\n          { changeRow, commitChangedRows, stopEditRows, cancelChangedRows }\r\n        ) => {\r\n          let editedRow: any;\r\n          let rowId: number;\r\n          [rowId] = editingRowIds;\r\n          const targetRow = rows.filter(\r\n            (row: any) => getRowId(row) === rowId\r\n          )[0];\r\n          editedRow = { ...targetRow, ...rowChanges[rowId] };\r\n\r\n          const processValueChange = ({ target: { name, value } }: any) => {\r\n            const changeArgs = {\r\n              rowId,\r\n              change: createRowChange(editedRow, value, name),\r\n            };\r\n            changeRow(changeArgs);\r\n          };\r\n          const rowIds = editingRowIds;\r\n          const applyChanges = () => {\r\n            stopEditRows({ rowIds });\r\n            commitChangedRows({ rowIds });\r\n          };\r\n          const cancelChanges = () => {\r\n            stopEditRows({ rowIds });\r\n            cancelChangedRows({ rowIds });\r\n          };\r\n\r\n          const open = editingRowIds.length > 0;\r\n          return (\r\n            <Popup\r\n              open={open}\r\n              row={editedRow}\r\n              onChange={processValueChange}\r\n              onApplyChanges={applyChanges}\r\n              onCancelChanges={cancelChanges}\r\n            />\r\n          );\r\n        }}\r\n      </TemplateConnector>\r\n    </Template>\r\n    <Template name='root'>\r\n      <TemplatePlaceholder />\r\n      <TemplatePlaceholder name='popupEditing' />\r\n    </Template>\r\n  </Plugin>\r\n));\r\n","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { IRootState } from \"redux/reducers\";\r\nimport { writeSimulatedDataToDb } from \"services/firebase\";\r\n\r\nimport { getKeyValue } from \"get-key-value\";\r\nimport theme from \"styles/theme\";\r\n\r\nimport {\r\n  Theme,\r\n  createStyles,\r\n  makeStyles,\r\n  withStyles,\r\n  emphasize,\r\n} from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport Input from \"@material-ui/core/Input\";\r\n\r\nimport {\r\n  SortingState,\r\n  IntegratedSorting,\r\n  IntegratedFiltering,\r\n  SearchState,\r\n  DataTypeProvider,\r\n  GroupingState,\r\n  IntegratedGrouping,\r\n  SummaryState,\r\n  IntegratedSummary,\r\n  TableGroupRowProps,\r\n  EditingState,\r\n  TreeDataState,\r\n  CustomTreeData,\r\n} from \"@devexpress/dx-react-grid\";\r\nimport {\r\n  Grid,\r\n  TableHeaderRow,\r\n  VirtualTable,\r\n  Toolbar,\r\n  SearchPanel,\r\n  ColumnChooser,\r\n  TableColumnVisibility,\r\n  TableFixedColumns,\r\n  TableGroupRow,\r\n  TableSummaryRow,\r\n  GroupingPanel,\r\n  TableEditColumn,\r\n  TableEditRow,\r\n  TableTreeColumn,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\n\r\nimport _, { update } from \"lodash\";\r\n\r\nimport ColumnData from \"./ColumnData\";\r\nimport {\r\n  GroupCell,\r\n  SummaryCell,\r\n  LookupEditCell,\r\n  EditCell,\r\n  MaterialProductCell,\r\n} from \"components/TableUtilities/CustomCells\";\r\nimport {\r\n  DecimalTypeProvider,\r\n  SortLabel,\r\n  SimulatedFieldTypeProvider,\r\n} from \"components/TableUtilities/Formatters\";\r\nimport { Popup, PopupEditing } from \"components/TableUtilities/EditPlugin\";\r\nimport allActions from \"redux/actions\";\r\nimport { mergeSimulatedDataIntoMaterialProducts } from \"helpers/materialHelpers\";\r\n\r\ninterface Props {\r\n  data: IMaterialTableRow[];\r\n}\r\n\r\nconst getRowId = (row: any) => row.idmaterialInventory;\r\n\r\nconst getHiddenColumnsFilteringExtensions = (hiddenColumnNames: string[]) =>\r\n  hiddenColumnNames.map((columnName) => ({\r\n    columnName,\r\n    predicate: () => false,\r\n  }));\r\n\r\nconst EditButton = ({ onExecute }: any) => (\r\n  <Tooltip title='Edit material'>\r\n    <IconButton onClick={onExecute}>\r\n      <EditIcon />\r\n    </IconButton>\r\n  </Tooltip>\r\n);\r\n\r\nconst commandComponents: any = {\r\n  edit: EditButton,\r\n};\r\n\r\nconst Command = ({ id, onExecute }: any) => {\r\n  const CommandButton = commandComponents[id];\r\n  return <CommandButton onExecute={onExecute} />;\r\n};\r\n\r\nconst CustomTreeCell = ({ row, style, ...props }: any) => (\r\n  <TableTreeColumn.Cell\r\n    {...props}\r\n    style={{\r\n      fontWeight: row.parentId === null ? \"bold\" : undefined,\r\n      ...style,\r\n    }}\r\n  />\r\n);\r\n\r\nconst ProductTable = (props: Props) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const selectedBuildings = useSelector(\r\n    (state: IRootState) => state.selectedBuildings\r\n  );\r\n  const materialProducts = useSelector(\r\n    (state: IRootState) => state.materialProducts\r\n  );\r\n  const simulatedMaterialProducts = useSelector(\r\n    (state: IRootState) => state.simulatedMaterialProducts\r\n  );\r\n  const simulatedData = useSelector((state: IRootState) => state.simulatedData);\r\n  const isSimulationModeActive = useSelector(\r\n    (state: IRootState) => state.isSimulationModeActive\r\n  );\r\n\r\n  const [rows, setRows] = useState<IMaterialTableRow[]>([]);\r\n  const [columns] = useState(ColumnData.columns);\r\n  const [columnExtensions] = useState(ColumnData.columnExtensions);\r\n  const [defaultHiddenColumnNames] = useState(\r\n    ColumnData.defaultHiddenColumnNames\r\n  );\r\n  const [tableColumnVisibilityColumnExtensions] = useState(\r\n    ColumnData.tableColumnVisibilityColumnExtensions\r\n  );\r\n\r\n  const [decimalColumns] = useState(ColumnData.decimalColumns);\r\n\r\n  useEffect(() => {\r\n    // console.log(\"Useeffect, props: \", props.data)\r\n    setRows(props.data);\r\n  }, [props.data]);\r\n\r\n  const [searchTerm, setSearchTerm] = useState<string>();\r\n\r\n  const changeSearchTerm = (value: any) => {\r\n    console.log(\"Changed search term: \", value);\r\n    setSearchTerm(value);\r\n  };\r\n\r\n  // Delays query so it is not fired on every keystroke\r\n  const delayedCallback = useCallback(_.debounce(changeSearchTerm, 300), []);\r\n\r\n  // Only search in visible columns\r\n  const [filteringColumnExtensions, setFilteringColumnExtensions] = useState(\r\n    getHiddenColumnsFilteringExtensions(defaultHiddenColumnNames)\r\n  );\r\n\r\n  const onHiddenColumnNamesChange = (hiddenColumnNames: string[]) =>\r\n    setFilteringColumnExtensions(\r\n      getHiddenColumnsFilteringExtensions(hiddenColumnNames)\r\n    );\r\n\r\n  const [expandedRowIds, setExpandedRowIds] = useState<(string | number)[]>([]);\r\n\r\n  const [leftFixedColumns] = useState([TableEditColumn.COLUMN_TYPE, \"name\"]);\r\n\r\n  const getChildRows = (row: any, rootRows: any) => {\r\n    const childRows = rootRows.filter(\r\n      (r: any) => r.parentId === (row ? row.idmaterialInventory : null)\r\n    );\r\n    return childRows.length ? childRows : null;\r\n  };\r\n\r\n  const commitChanges = ({ changed }: any) => {\r\n    console.log(\"Changed: \", changed);\r\n    const changedRowId = Object.keys(changed)[0];\r\n    const originalRow = (materialProducts as IMaterialTableRow[]).find(\r\n      (row) => String(row.idmaterialInventory) === changedRowId\r\n    );\r\n\r\n    if (Object.values(changed)[0] !== undefined && originalRow !== undefined) {\r\n      const updatedSimulatedData: ISimulatedData = {\r\n        ...simulatedData,\r\n        ...changed,\r\n      };\r\n\r\n      for (const [key, value] of Object.entries(\r\n        updatedSimulatedData[changedRowId]\r\n      )) {\r\n        const originalValue = getKeyValue<\r\n          keyof IMaterialTableRow,\r\n          IMaterialTableRow\r\n        >(key as any, originalRow);\r\n        // Remove field from simulated data if has been reset to original value\r\n        if (value === originalValue) {\r\n          delete updatedSimulatedData[changedRowId][key];\r\n        }\r\n      }\r\n\r\n      // Remove simulated data row if all fields havs been removed it\r\n      if (Object.keys(updatedSimulatedData[changedRowId]).length === 0) {\r\n        delete updatedSimulatedData[changedRowId];\r\n      }\r\n\r\n      const updatedSimulatedMaterialProducts = mergeSimulatedDataIntoMaterialProducts(\r\n        materialProducts as IMaterialTableRow[],\r\n        updatedSimulatedData\r\n      );\r\n\r\n      const selectedBuildingId = String(selectedBuildings[0].idbuildings);\r\n      writeSimulatedDataToDb(selectedBuildingId, updatedSimulatedData);\r\n      dispatch(\r\n        allActions.elementAndMaterialActions.setSimulatedData(\r\n          updatedSimulatedData\r\n        )\r\n      );\r\n      dispatch(\r\n        allActions.elementAndMaterialActions.setSimulatedMaterialProducts(\r\n          updatedSimulatedMaterialProducts\r\n        )\r\n      );\r\n      setRows(updatedSimulatedMaterialProducts);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Grid rows={rows} columns={columns} getRowId={getRowId}>\r\n      {/* <SimulatedFieldTypeProvider for={decimalColumns} /> */}\r\n      <TreeDataState\r\n        expandedRowIds={expandedRowIds}\r\n        onExpandedRowIdsChange={setExpandedRowIds}\r\n      />\r\n      <CustomTreeData getChildRows={getChildRows} />\r\n      <SearchState onValueChange={delayedCallback} />\r\n      <IntegratedFiltering columnExtensions={filteringColumnExtensions} />\r\n      <SortingState />\r\n      <IntegratedSorting />\r\n      <EditingState onCommitChanges={commitChanges} />\r\n      <VirtualTable\r\n        columnExtensions={columnExtensions}\r\n        cellComponent={\r\n          isSimulationModeActive\r\n            ? (props) => MaterialProductCell(props, simulatedData)\r\n            : (props) => <VirtualTable.Cell {...props} />\r\n        }\r\n      />\r\n\r\n      <DecimalTypeProvider for={decimalColumns} />\r\n      <TableHeaderRow showSortingControls sortLabelComponent={SortLabel} />\r\n      <TableTreeColumn for='name' cellComponent={CustomTreeCell} />\r\n      <TableEditColumn\r\n        showEditCommand={isSimulationModeActive}\r\n        commandComponent={Command}\r\n        cellComponent={EditCell}\r\n        width={isSimulationModeActive ? 70 : 0.1}\r\n      />\r\n      <TableFixedColumns leftColumns={leftFixedColumns} />\r\n      <PopupEditing popupComponent={Popup} />\r\n      <TableColumnVisibility\r\n        defaultHiddenColumnNames={defaultHiddenColumnNames}\r\n        columnExtensions={tableColumnVisibilityColumnExtensions}\r\n        onHiddenColumnNamesChange={onHiddenColumnNamesChange}\r\n      />\r\n      <Toolbar />\r\n      <SearchPanel />\r\n      <ColumnChooser />\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default ProductTable;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { IRootState } from \"redux/reducers\";\r\nimport allActions from \"redux/actions\";\r\n\r\nimport { Theme, createStyles, makeStyles } from \"@material-ui/core/styles\";\r\nimport theme from \"styles/theme\";\r\n\r\nimport {\r\n  Chart,\r\n  Series,\r\n  CommonSeriesSettings,\r\n  Legend,\r\n  ArgumentAxis,\r\n  ValueAxis,\r\n  Title,\r\n  Tooltip,\r\n  Size,\r\n  Label,\r\n} from \"devextreme-react/chart\";\r\n\r\nimport {\r\n  createMaterialChartData,\r\n  sortByEE,\r\n  wrapArgumentAxisLabel,\r\n} from \"helpers/materialHelpers\";\r\nimport { customizeHint } from \"components/ChartComponents\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    chart: {\r\n      padding: theme.spacing(2),\r\n    },\r\n    argumentAxisLabel: {\r\n      fill: \"#767676\",\r\n    },\r\n  })\r\n);\r\n\r\ninterface Props {\r\n  data: IMaterialChartItem[];\r\n}\r\n\r\nconst ProductChart = (props: Props) => {\r\n  const [chartData, setChartData] = useState<IMaterialChartItem[]>([]);\r\n  const isSimulationModeActive = useSelector(\r\n    (state: IRootState) => state.isSimulationModeActive\r\n  );\r\n  const simulatedData = useSelector((state: IRootState) => state.simulatedData);\r\n  const simulatedMaterialProducts = useSelector(\r\n    (state: IRootState) => state.simulatedMaterialProducts\r\n  );\r\n\r\n  useEffect(() => {\r\n    const sortedChartData = sortByEE(props.data) as IMaterialChartItem[];\r\n    setChartData(sortedChartData);\r\n  }, [props.data]);\r\n\r\n  const customizeTooltip = (arg: any) => {\r\n    return {\r\n      text: `<b>${arg.seriesName}</b>\\n ${arg.valueText}`,\r\n    };\r\n  };\r\n\r\n  const labelToMaterialId = (label: string): number => {\r\n    return (\r\n      (simulatedMaterialProducts as IMaterialTableRow[]).find((material) => material.name === label)\r\n        ?.idmaterialInventory || 0\r\n    );\r\n  };\r\n\r\n  const onDrawn = (e: any) => {\r\n    if (isSimulationModeActive) {\r\n      // Color emission series if contains simulated values\r\n      e.element\r\n        .querySelector(\".dxc-arg-elements\")\r\n        .childNodes.forEach((el: any) => {\r\n          // const fieldName = labelToFieldname(el.innerHTML);\r\n          var labelText = \"\";\r\n          if (el.childNodes.length > 1) {\r\n            let spans: string[] = [];\r\n            el.childNodes.forEach((subEl: any) => {\r\n              spans.push(subEl.innerHTML);\r\n            });\r\n            labelText = spans.join(\" \");\r\n          } else {\r\n            labelText = el.innerHTML;\r\n          }\r\n\r\n          if (labelToMaterialId(labelText) in simulatedData) {\r\n            el.style.fill = theme.palette.simulated.main;\r\n            el.style.fontWeight = 500;\r\n          }\r\n        });\r\n    }\r\n  };\r\n\r\n  const height = 200 + chartData.length * 30;\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Chart\r\n      className={classes.chart}\r\n      // title=\"Embodied emissions\"\r\n      dataSource={chartData}\r\n      palette='Material'\r\n      rotated={true}\r\n      onDrawn={onDrawn}\r\n    >\r\n      <Size height={height > 500 ? height : 500} />\r\n      <CommonSeriesSettings\r\n        argumentField='name'\r\n        type='stackedBar'\r\n        barWidth={40}\r\n        hoverMode='allArgumentPoints'\r\n      ></CommonSeriesSettings>\r\n      <Series valueField='A1A3' name='A1-A3' />\r\n      <Series valueField='A4' name='A4' />\r\n      <Series valueField='B4_m' name='B4 (m)' />\r\n      <Series valueField='B4_t' name='B4 (t)' />\r\n      <ValueAxis>\r\n        <Title\r\n          text={\"kgCO2e\"}\r\n          font={{\r\n            size: 14,\r\n          }}\r\n        />\r\n      </ValueAxis>\r\n      <ArgumentAxis>\r\n        <Label customizeText={wrapArgumentAxisLabel} />\r\n      </ArgumentAxis>\r\n      <Legend\r\n        verticalAlignment='bottom'\r\n        horizontalAlignment='center'\r\n        itemTextPosition='top'\r\n        customizeHint={customizeHint}\r\n      />\r\n      <Tooltip\r\n        enabled={true}\r\n        location='edge'\r\n        customizeTooltip={customizeTooltip}\r\n        zIndex={1200}\r\n        arrowLength={6}\r\n        format='fixedPoint'\r\n      />\r\n    </Chart>\r\n  );\r\n};\r\n\r\nexport default ProductChart;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { IRootState } from \"redux/reducers\";\r\nimport allActions from \"redux/actions\";\r\n\r\nimport { Theme, createStyles, makeStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\nimport ProductTable from \"./ProductTable\";\r\nimport ProductChart from \"./ProductChart\";\r\nimport {\r\n  groupByMaterial,\r\n  createChildRows,\r\n  createMaterialChartData,\r\n} from \"helpers/materialHelpers\";\r\n\r\ninterface Props {\r\n  materials?: IMaterialInventory[];\r\n}\r\n\r\nconst ProductView = (props: Props) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const displayMode = useSelector((state: IRootState) => state.displayMode);\r\n  const materialInventory = useSelector(\r\n    (state: IRootState) => state.materialInventory\r\n  );\r\n  const materialProducts = useSelector(\r\n    (state: IRootState) => state.materialProducts\r\n  );\r\n  const simulatedMaterialProducts = useSelector(\r\n    (state: IRootState) => state.simulatedMaterialProducts\r\n  );\r\n  const isSimulationModeActive = useSelector(\r\n    (state: IRootState) => state.isSimulationModeActive\r\n  );\r\n  const simulatedData = useSelector((state: IRootState) => state.simulatedData);\r\n\r\n  const [tableData, setTableData] = useState<IMaterialTableRow[]>([]);\r\n  const [chartData, setChartData] = useState<IMaterialChartItem[]>([]);\r\n  \r\n  useEffect(() => {\r\n    let groupedMaterials;\r\n    if (isSimulationModeActive) {\r\n      groupedMaterials = simulatedMaterialProducts;\r\n    } else {\r\n      groupedMaterials = props.materials\r\n        ? groupByMaterial(props.materials)\r\n        : materialProducts;\r\n    }\r\n    const childRows = createChildRows(props.materials ?? materialInventory);\r\n    const treeData = (groupedMaterials as IMaterialTableRow[]).concat(\r\n      childRows as IMaterialTableRow[]\r\n    );\r\n\r\n    const chartData = createMaterialChartData(groupedMaterials);\r\n    setTableData(treeData);\r\n    setChartData(chartData);\r\n  }, [isSimulationModeActive, simulatedData]);\r\n\r\n  return (\r\n    <div>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs>\r\n          {displayMode == \"table\" ? (\r\n            <Paper>\r\n              <ProductTable data={tableData} />\r\n            </Paper>\r\n          ) : (\r\n            <Paper>\r\n              <ProductChart data={chartData} />\r\n            </Paper>\r\n          )}\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProductView;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { IRootState } from \"redux/reducers\";\r\nimport allActions from \"redux/actions\";\r\n\r\nimport {\r\n  Theme,\r\n  createStyles,\r\n  makeStyles,\r\n  withStyles,\r\n  emphasize,\r\n} from \"@material-ui/core/styles\";\r\nimport { palette } from \"@material-ui/system\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Breadcrumbs from \"@material-ui/core/Breadcrumbs\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\nimport InfoOutlinedIcon from \"@material-ui/icons/InfoOutlined\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport NavigateBeforeIcon from \"@material-ui/icons/NavigateBefore\";\r\nimport NavigateNextIcon from \"@material-ui/icons/NavigateNext\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\n\r\nimport ElementsTable from \"./ElementsTable\";\r\nimport ElementsChart from \"./ElementsChart\";\r\nimport ProductView from \"../ProductView\";\r\n\r\nimport { getChildElements, getElementMaterials } from \"helpers/materialHelpers\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    breadCrumbs: {\r\n      marginTop: \"3px\",\r\n    },\r\n    infoIcon: {\r\n      color: theme.palette.text.secondary,\r\n    },\r\n    infoContainer: {\r\n      marginBottom: theme.spacing(1),\r\n    },\r\n    infoIconGridItem: {\r\n      height: \"28px\",\r\n    },\r\n  })\r\n);\r\n\r\nconst StyledBreadcrumb = withStyles((theme: Theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.grey[100],\r\n    height: theme.spacing(3),\r\n    color: theme.palette.grey[800],\r\n    fontWeight: theme.typography.fontWeightRegular,\r\n    \"&:hover, &:focus\": {\r\n      backgroundColor: theme.palette.grey[300],\r\n    },\r\n    \"&:active\": {\r\n      boxShadow: theme.shadows[1],\r\n      backgroundColor: emphasize(theme.palette.grey[300], 0.12),\r\n    },\r\n  },\r\n}))(Chip) as typeof Chip; // TypeScript only: need a type cast here because https://github.com/Microsoft/TypeScript/issues/26591\r\n\r\nconst StyledBreadcrumbActive = withStyles((theme: Theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.secondary.light,\r\n    height: theme.spacing(3),\r\n    // color: theme.palette.grey[800],\r\n    fontWeight: theme.typography.fontWeightRegular,\r\n    \"&:hover, &:focus\": {\r\n      // backgroundColor: theme.palette.grey[300],\r\n    },\r\n    \"&:active\": {\r\n      boxShadow: theme.shadows[1],\r\n      // backgroundColor: emphasize(theme.palette.grey[300], 0.12),\r\n    },\r\n  },\r\n}))(Chip) as typeof Chip;\r\n\r\nconst BuildingElementsView = (props: any) => {\r\n  const dispatch = useDispatch();\r\n  const buildingElements = useSelector(\r\n    (state: IRootState) => state.buildingElements\r\n  );\r\n  const materialInventory = useSelector(\r\n    (state: IRootState) => state.materialInventory\r\n  );\r\n  const selectedBuildingElement = useSelector(\r\n    (state: IRootState) => state.selectedBuildingElement\r\n  );\r\n  const elementRoute = useSelector(\r\n    (state: IRootState) => state.buildingElementRoute\r\n  );\r\n  const displayMode = useSelector((state: IRootState) => state.displayMode);\r\n\r\n  useEffect(() => {\r\n    const rootElement = buildingElements.find(\r\n      (element: IBuildingElement) => element.hierarchy === 0\r\n    );\r\n    if (rootElement !== undefined) {\r\n      dispatch(\r\n        allActions.elementAndMaterialActions.selectBuildingElement(rootElement)\r\n      );\r\n      dispatch(\r\n        allActions.elementAndMaterialActions.setElementRoute([rootElement])\r\n      );\r\n    }\r\n  }, []);\r\n\r\n  const handleBreadcrumbClick = (index: number) => {\r\n    var tempRoute = elementRoute.slice(0, index + 1);\r\n    dispatch(\r\n      allActions.elementAndMaterialActions.selectBuildingElement(\r\n        tempRoute[tempRoute.length - 1]\r\n      )\r\n    );\r\n    dispatch(allActions.elementAndMaterialActions.setElementRoute(tempRoute));\r\n  };\r\n\r\n  const [poppedRouteItem, setPoppedRouteItem] = useState<IBuildingElement>();\r\n\r\n  const navigateBack = () => {\r\n    var tempRoute = elementRoute;\r\n    setPoppedRouteItem(tempRoute.pop());\r\n    dispatch(\r\n      allActions.elementAndMaterialActions.selectBuildingElement(\r\n        tempRoute[tempRoute.length - 1]\r\n      )\r\n    );\r\n    dispatch(allActions.elementAndMaterialActions.setElementRoute(tempRoute));\r\n  };\r\n\r\n  const navigateForward = () => {\r\n    var tempRoute = elementRoute;\r\n    if (poppedRouteItem !== undefined) tempRoute.push(poppedRouteItem);\r\n    dispatch(\r\n      allActions.elementAndMaterialActions.selectBuildingElement(\r\n        tempRoute[tempRoute.length - 1]\r\n      )\r\n    );\r\n    dispatch(allActions.elementAndMaterialActions.setElementRoute(tempRoute));\r\n  };\r\n\r\n  const childElements = getChildElements(\r\n    buildingElements,\r\n    selectedBuildingElement\r\n  );\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div>\r\n      <Grid container spacing={3} alignItems='center'>\r\n        <Grid item>\r\n          <Tooltip title='Back'>\r\n            <span>\r\n              <IconButton\r\n                size='small'\r\n                onClick={navigateBack}\r\n                disabled={elementRoute.length < 2}\r\n              >\r\n                <NavigateBeforeIcon />\r\n              </IconButton>\r\n            </span>\r\n          </Tooltip>\r\n          <Tooltip title='Forward'>\r\n            <span>\r\n              <IconButton\r\n                size='small'\r\n                onClick={navigateForward}\r\n                disabled={true}\r\n              >\r\n                <NavigateNextIcon />\r\n              </IconButton>\r\n            </span>\r\n          </Tooltip>\r\n        </Grid>\r\n        <Grid item xs={10}>\r\n          <Breadcrumbs>\r\n            {elementRoute.map((element, index) =>\r\n              index !== elementRoute.length - 1 ? (\r\n                <StyledBreadcrumb\r\n                  className={classes.breadCrumbs}\r\n                  key={index}\r\n                  label={element.name}\r\n                  variant='default'\r\n                  icon={\r\n                    element.idlevels === 0 ? (\r\n                      <HomeIcon fontSize='small' />\r\n                    ) : undefined\r\n                  }\r\n                  color={\r\n                    index === elementRoute.length - 1 ? \"secondary\" : \"default\"\r\n                  }\r\n                  onClick={() => handleBreadcrumbClick(index)}\r\n                />\r\n              ) : (\r\n                <StyledBreadcrumbActive\r\n                  className={classes.breadCrumbs}\r\n                  key={index}\r\n                  label={element.name}\r\n                  variant='default'\r\n                  icon={\r\n                    element.idlevels === 0 ? (\r\n                      <HomeIcon fontSize='small' />\r\n                    ) : undefined\r\n                  }\r\n                  color='secondary'\r\n                />\r\n              )\r\n            )}\r\n          </Breadcrumbs>\r\n        </Grid>\r\n\r\n        <Grid item xs={12}>\r\n          {childElements?.length ? (\r\n            displayMode === \"table\" ? (\r\n              <React.Fragment>\r\n                <Grid\r\n                  container\r\n                  alignItems='center'\r\n                  justify='center'\r\n                  spacing={1}\r\n                  className={classes.infoContainer}\r\n                >\r\n                  <Grid item className={classes.infoIconGridItem}>\r\n                    <InfoOutlinedIcon\r\n                      className={classes.infoIcon}\r\n                      fontSize='small'\r\n                    />\r\n                  </Grid>\r\n                  <Grid item>\r\n                    <Typography\r\n                      variant='body2'\r\n                      color='textSecondary'\r\n                      align='center'\r\n                    >\r\n                      Click on a building element to see its sub-elements\r\n                    </Typography>\r\n                  </Grid>\r\n                </Grid>\r\n                <Paper>\r\n                  <ElementsTable />\r\n                </Paper>\r\n              </React.Fragment>\r\n            ) : (\r\n              <Paper>\r\n                <ElementsChart />\r\n              </Paper>\r\n            )\r\n          ) : (\r\n            <ProductView\r\n              materials={getElementMaterials(\r\n                materialInventory,\r\n                selectedBuildingElement\r\n              )}\r\n            />\r\n          )}\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BuildingElementsView;\r\n","import { Column, EditingState } from \"@devexpress/dx-react-grid\";\r\nimport { Table } from \"@devexpress/dx-react-grid-material-ui\";\r\n\r\nclass ColumnData {\r\n  static readonly columns: Column[] = [\r\n    { name: \"name\", title: \"Name\" },\r\n    // { name: \"idmaterialInventory\", title: \"ID\" },\r\n    { name: \"quantity\", title: \"Quantity\" },\r\n    { name: \"FU\", title: \"FU\" },\r\n    { name: \"materialCat\", title: \"Category\" },\r\n    { name: \"sourceType\", title: \"Source type\" },\r\n    { name: \"RSL_mi\", title: \"RSL\" },\r\n    { name: \"A1A3\", title: \"A1-A3\" },\r\n    { name: \"A4\", title: \"A4\" },\r\n    { name: \"B4_m\", title: \"B4 (m)\" },\r\n    { name: \"B4_t\", title: \"B4 (t)\" },\r\n    // { name: \"RSL\", title: \"RSL\" },\r\n    { name: \"source\", title: \"Source\" },\r\n    { name: \"dataType\", title: \"Data type\" },\r\n    { name: \"dataYear\", title: \"Data year\" },\r\n    { name: \"density\", title: \"Density\" },\r\n    { name: \"EEf_A1A3\", title: \"EEf_A1A3\" },\r\n    { name: \"country\", title: \"Country\" },\r\n    { name: \"city\", title: \"City\" },\r\n    { name: \"comments\", title: \"Comments\" },\r\n    // { name: \"buildingElementName\", title: \"Building element\" },\r\n  ];\r\n\r\n  static readonly columnExtensions: Table.ColumnExtension[] = [\r\n    { columnName: \"idmaterialInventory\", width: 80},\r\n    { columnName: \"name\", width: 270, wordWrapEnabled: true },\r\n    { columnName: \"dataType\", width: 120 },\r\n    { columnName: \"sourceType\", width: 120 },\r\n    { columnName: \"source\", width: 200, wordWrapEnabled: true },\r\n    { columnName: \"dataYear\", width: 100 },\r\n    { columnName: \"FU\", width: 70 },\r\n    { columnName: \"EEf_A1A3\", width: 110 },\r\n    // { columnName: \"RSL\", width: 80 },\r\n    { columnName: \"comments\", width: 400 },\r\n    { columnName: \"materialCat\", width: 150 },\r\n    { columnName: \"quantity\", width: 130 },\r\n    { columnName: \"RSL_mi\", width: 80 },\r\n    { columnName: \"A1A3\", width: 130 },\r\n    { columnName: \"A4\", width: 130 },\r\n    { columnName: \"B4_m\", width: 130 },\r\n    { columnName: \"B4_t\", width: 130 },\r\n    { columnName: \"buildingElementName\", width: 160, wordWrapEnabled: true },\r\n  ];\r\n\r\n  static readonly defaultHiddenColumnNames: string[] = [\r\n    \"source\",\r\n    // \"RSL\",\r\n    \"dataType\",\r\n    \"dataYear\",\r\n    \"comments\",\r\n    \"EEf_A1A3\",\r\n    \"density\",\r\n    \"country\",\r\n    \"city\"\r\n  ];\r\n\r\n  static readonly tableColumnVisibilityColumnExtensions = [\r\n    { columnName: \"name\", togglingEnabled: false },\r\n  ];\r\n\r\n  static readonly decimalColumns = [\r\n    \"quantity\",\r\n    \"EEf_A1A3\",\r\n    \"A1A3\",\r\n    \"A4\",\r\n    \"B4_t\",\r\n    \"B4_m\",\r\n    \"RSL_mi\"\r\n  ];\r\n\r\n  static readonly groupSummaryItems = [\r\n    {\r\n      columnName: \"quantity\",\r\n      type: \"sum\",\r\n      showInGroupFooter: false,\r\n      alignByColumn: true,\r\n    },\r\n    {\r\n      columnName: \"FU\",\r\n      type: \"staticValue\",\r\n      showInGroupFooter: false,\r\n      alignByColumn: true,\r\n    },\r\n    {\r\n      columnName: \"sourceType\",\r\n      type: \"staticValue\",\r\n      showInGroupFooter: false,\r\n      alignByColumn: true,\r\n    },\r\n    /* {\r\n      columnName: \"materialCat\",\r\n      type: \"staticValue\",\r\n      showInGroupFooter: false,\r\n      alignByColumn: true,\r\n    }, */\r\n    {\r\n      columnName: \"RSL_mi\",\r\n      type: \"avg\",\r\n      showInGroupFooter: false,\r\n      alignByColumn: true,\r\n    },\r\n    {\r\n      columnName: \"A1A3\",\r\n      type: \"sum\",\r\n      showInGroupFooter: false,\r\n      alignByColumn: true,\r\n    },\r\n    {\r\n      columnName: \"A4\",\r\n      type: \"sum\",\r\n      showInGroupFooter: false,\r\n      alignByColumn: true,\r\n    },\r\n    {\r\n      columnName: \"B4_m\",\r\n      type: \"sum\",\r\n      showInGroupFooter: false,\r\n      alignByColumn: true,\r\n    },\r\n    {\r\n      columnName: \"B4_t\",\r\n      type: \"sum\",\r\n      showInGroupFooter: false,\r\n      alignByColumn: true,\r\n    },\r\n  ];\r\n\r\n  static readonly editingStateColumnExtensions: EditingState.ColumnExtension[] = [\r\n    { columnName: \"idmaterialInventory\", editingEnabled: false},\r\n    { columnName: \"name\", editingEnabled: false},\r\n    { columnName: \"buildingElementName\", editingEnabled: false},\r\n    // { columnName: \"quantity\", editingEnabled: false},\r\n    { columnName: \"FU\", editingEnabled: false},\r\n    // { columnName: \"sourceType\", editingEnabled: false},\r\n    // { columnName: \"RSL\", editingEnabled: false},\r\n    { columnName: \"materialCat\", editingEnabled: false},\r\n    { columnName: \"RSL_mi\", editingEnabled: false},\r\n    // { columnName: \"EEf_A1A3\", editingEnabled: false},\r\n    // { columnName: \"A1A3\", editingEnabled: false},\r\n    // { columnName: \"A4\", editingEnabled: false},\r\n    // { columnName: \"B4_m\", editingEnabled: false},\r\n    // { columnName: \"B4_t\", editingEnabled: false},\r\n    { columnName: \"dataType\",  editingEnabled: false},\r\n    { columnName: \"dataYear\", editingEnabled: false},\r\n    { columnName: \"comments\", editingEnabled: false},\r\n  ];\r\n}\r\n\r\nexport default ColumnData;\r\n","import React from \"react\";\r\nimport ChevronRight from \"@material-ui/icons/ChevronRight\";\r\nimport ExpandMore from \"@material-ui/icons/ExpandMore\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Input from \"@material-ui/core/Input\";\r\n\r\nimport {\r\n  Theme,\r\n  createStyles,\r\n  makeStyles,\r\n  withStyles,\r\n  emphasize,\r\n} from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    cell: {\r\n      padding: theme.spacing(1),\r\n    },\r\n    indentCell: {\r\n      padding: 0,\r\n    },\r\n    groupButton: {\r\n      height: theme.spacing(4),\r\n      width: theme.spacing(4),\r\n    },\r\n    lookupEditCell: {\r\n      padding: theme.spacing(1),\r\n    },\r\n    inputRoot: {\r\n      width: \"100%\",\r\n    },\r\n    selectMenu: {\r\n      position: \"absolute !important\" as \"absolute\",\r\n    },\r\n  })\r\n);\r\n\r\nexport const GroupCell = ({\r\n  style,\r\n  colSpan,\r\n  row,\r\n  column,\r\n  expanded,\r\n  onToggle,\r\n  classes,\r\n  children,\r\n  className,\r\n  tableRow,\r\n  tableColumn,\r\n  contentComponent,\r\n  iconComponent,\r\n  indentCellComponent,\r\n  inlineSummaryComponent,\r\n  inlineSummaryItemComponent,\r\n  summaryCellComponent,\r\n  summaryItemComponent,\r\n  containerComponent,\r\n  inlineSummaries,\r\n  getMessage,\r\n  ...restProps\r\n}: any) => {\r\n  const handleClick = () => onToggle();\r\n  const styles = useStyles();\r\n  return (\r\n    <TableCell\r\n      colSpan={colSpan}\r\n      style={style}\r\n      className={styles.cell}\r\n      onClick={handleClick}\r\n      {...restProps}\r\n    >\r\n      <Grid container alignItems='center' justify='space-around'>\r\n        <Grid item xs={2}>\r\n          <IconButton className={styles.groupButton}>\r\n            {expanded ? <ExpandMore /> : <ChevronRight />}\r\n          </IconButton>\r\n        </Grid>\r\n        <Grid item xs={10}>\r\n          <span>\r\n            <strong>{children || row.value}</strong>\r\n          </span>\r\n        </Grid>\r\n      </Grid>\r\n    </TableCell>\r\n  );\r\n};\r\n\r\nexport const SummaryCell = ({\r\n  style,\r\n  colSpan,\r\n  row,\r\n  column,\r\n  expanded,\r\n  onToggle,\r\n  classes,\r\n  children,\r\n  className,\r\n  tableRow,\r\n  tableColumn,\r\n  contentComponent,\r\n  iconComponent,\r\n  indentCellComponent,\r\n  inlineSummaryComponent,\r\n  inlineSummaryItemComponent,\r\n  summaryCellComponent,\r\n  summaryItemComponent,\r\n  containerComponent,\r\n  inlineSummaries,\r\n  getMessage,\r\n  ...restProps\r\n}: any) => {\r\n  const styles = useStyles();\r\n  const handleClick = () => onToggle();\r\n  //   console.log(\"Children: \", children)\r\n  var tooltipTitle: string = \"\";\r\n  switch (children.props.columnSummaries[0].type) {\r\n    case \"sum\":\r\n      tooltipTitle = \"Sum\";\r\n      break;\r\n    case \"avg\":\r\n      tooltipTitle = \"Average\";\r\n      break;\r\n    case \"staticValue\":\r\n      tooltipTitle = \"Static\";\r\n      break;\r\n  }\r\n  return (\r\n    <TableCell\r\n      colSpan={colSpan}\r\n      onClick={handleClick}\r\n      className={styles.cell}\r\n      {...restProps}\r\n    >\r\n      {tooltipTitle === \"Static\" ? (\r\n        <span>{children}</span>\r\n      ) : (\r\n        <Tooltip title={tooltipTitle}>\r\n          <span>{children}</span>\r\n        </Tooltip>\r\n      )}\r\n    </TableCell>\r\n  );\r\n};\r\n\r\nexport const LookupEditCell = ({\r\n  availableColumnValues,\r\n  value,\r\n  onValueChange,\r\n}: any) => (\r\n  <TableCell className={useStyles().lookupEditCell}>\r\n    <Select\r\n      value={value}\r\n      onChange={(event) => onValueChange(event.target.value)}\r\n      MenuProps={{\r\n        className: useStyles().selectMenu,\r\n      }}\r\n      input={<Input classes={{ root: useStyles().inputRoot }} />}\r\n    >\r\n      {availableColumnValues.map((item: any) => (\r\n        <MenuItem key={item} value={item}>\r\n          {item}\r\n        </MenuItem>\r\n      ))}\r\n    </Select>\r\n  </TableCell>\r\n);\r\n","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { IRootState } from \"redux/reducers\";\r\nimport { writeSimulatedDataToDb } from \"services/firebase\";\r\n\r\nimport {\r\n  Theme,\r\n  createStyles,\r\n  makeStyles,\r\n  withStyles,\r\n  emphasize,\r\n} from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport Input from \"@material-ui/core/Input\";\r\n\r\nimport {\r\n  SortingState,\r\n  IntegratedSorting,\r\n  IntegratedFiltering,\r\n  SearchState,\r\n  DataTypeProvider,\r\n  GroupingState,\r\n  IntegratedGrouping,\r\n  SummaryState,\r\n  IntegratedSummary,\r\n  TableGroupRowProps,\r\n  EditingState,\r\n  TreeDataState,\r\n  CustomTreeData,\r\n} from \"@devexpress/dx-react-grid\";\r\nimport {\r\n  Grid,\r\n  TableHeaderRow,\r\n  VirtualTable,\r\n  Toolbar,\r\n  SearchPanel,\r\n  ColumnChooser,\r\n  TableColumnVisibility,\r\n  TableFixedColumns,\r\n  TableGroupRow,\r\n  TableSummaryRow,\r\n  GroupingPanel,\r\n  TableEditColumn,\r\n  TableEditRow,\r\n  TableTreeColumn,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\n\r\nimport _ from \"lodash\";\r\n\r\nimport ColumnData from \"./ColumnData\";\r\nimport { GroupCell, SummaryCell, LookupEditCell } from \"./CustomCells\";\r\n// import { DecimalTypeProvider } from \"./DecimalTypeProvider\";\r\nimport { DecimalTypeProvider, SortLabel } from \"components/TableUtilities/Formatters\";\r\nimport allActions from \"redux/actions\";\r\n\r\ninterface Props {\r\n  materials: IMaterialTableRow[];\r\n}\r\n\r\nconst getRowId = (row: any) => row.idmaterialInventory;\r\n\r\nconst getHiddenColumnsFilteringExtensions = (hiddenColumnNames: string[]) =>\r\n  hiddenColumnNames.map((columnName) => ({\r\n    columnName,\r\n    predicate: () => false,\r\n  }));\r\n\r\nconst CategoryTable = (props: Props) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [columns] = useState(ColumnData.columns);\r\n  const [columnExtensions] = useState(ColumnData.columnExtensions);\r\n  const [defaultHiddenColumnNames] = useState(\r\n    ColumnData.defaultHiddenColumnNames\r\n  );\r\n  const [tableColumnVisibilityColumnExtensions] = useState(\r\n    ColumnData.tableColumnVisibilityColumnExtensions\r\n  );\r\n\r\n  const [decimalColumns] = useState(ColumnData.decimalColumns);\r\n\r\n  const [searchTerm, setSearchTerm] = useState<string>();\r\n\r\n  const changeSearchTerm = (value: any) => {\r\n    console.log(\"Changed search term: \", value);\r\n    setSearchTerm(value);\r\n  };\r\n\r\n  // Delays query so it is not fired on every keystroke\r\n  const delayedCallback = useCallback(_.debounce(changeSearchTerm, 300), []);\r\n\r\n  // Only search in visible columns\r\n  const [filteringColumnExtensions, setFilteringColumnExtensions] = useState(\r\n    getHiddenColumnsFilteringExtensions(defaultHiddenColumnNames)\r\n  );\r\n\r\n  const onHiddenColumnNamesChange = (hiddenColumnNames: string[]) =>\r\n    setFilteringColumnExtensions(\r\n      getHiddenColumnsFilteringExtensions(hiddenColumnNames)\r\n    );\r\n\r\n  const [expandedRowIds, setExpandedRowIds] = useState<(string | number)[]>([]);\r\n\r\n  const [leftFixedColumns] = useState([\"name\"]);\r\n\r\n  const [grouping] = useState([{ columnName: \"materialCat\" }]);\r\n  const [groupSummaryItems] = useState(ColumnData.groupSummaryItems);\r\n\r\n  const groupRowSummaryItem = ({ value }: any) => {\r\n    // Removes summary type label (i.e. \"Sum: \" or \"Count: \")\r\n    var formattedValue;\r\n    if (typeof value === \"string\") {\r\n      formattedValue = value;\r\n    } else {\r\n      // Formats decimal numbers\r\n      formattedValue =\r\n        value && value > 0.0 ? parseFloat(value).toLocaleString() : \"0\";\r\n    }\r\n\r\n    return <strong>{formattedValue}</strong>;\r\n  };\r\n\r\n  const staticValueCalculator = (type: string, rows: any[], getValue: any) => {\r\n    if (type === \"staticValue\") {\r\n      if (!rows.length) {\r\n        return null;\r\n      }\r\n      const firstRowValue = getValue(rows[0]);\r\n\r\n      // Show ellipses if not all values are equal\r\n      const allEqual = (arr: any[]) =>\r\n        arr.every((v) => getValue(v) === firstRowValue);\r\n      if (allEqual(rows)) return firstRowValue;\r\n      else return \"...\";\r\n    }\r\n    return IntegratedSummary.defaultCalculator(type, rows, getValue);\r\n  };\r\n\r\n  return (\r\n    <Grid rows={props.materials} columns={columns} getRowId={getRowId}>\r\n      <DecimalTypeProvider for={decimalColumns} />\r\n      <SearchState onValueChange={delayedCallback} />\r\n      <IntegratedFiltering columnExtensions={filteringColumnExtensions} />\r\n      <SortingState />\r\n      <IntegratedSorting />\r\n      <GroupingState grouping={grouping} />\r\n      <SummaryState groupItems={groupSummaryItems} />\r\n      <IntegratedGrouping />\r\n      <IntegratedSummary calculator={staticValueCalculator} />\r\n\r\n      <VirtualTable columnExtensions={columnExtensions} />\r\n      <TableHeaderRow showSortingControls sortLabelComponent={SortLabel} />\r\n      <TableGroupRow\r\n        cellComponent={GroupCell}\r\n        summaryCellComponent={SummaryCell}\r\n        summaryItemComponent={groupRowSummaryItem}\r\n        // indentColumnWidth={48}\r\n      />\r\n      <TableSummaryRow />\r\n      <TableFixedColumns leftColumns={leftFixedColumns} />\r\n      <TableColumnVisibility\r\n        defaultHiddenColumnNames={defaultHiddenColumnNames}\r\n        columnExtensions={tableColumnVisibilityColumnExtensions}\r\n        onHiddenColumnNamesChange={onHiddenColumnNamesChange}\r\n      />\r\n      <Toolbar />\r\n      <GroupingPanel showSortingControls />\r\n      <SearchPanel />\r\n      <ColumnChooser />\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default CategoryTable;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { IRootState } from \"redux/reducers\";\r\nimport allActions from \"redux/actions\";\r\n\r\nimport { Theme, createStyles, makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport NavigateBeforeIcon from \"@material-ui/icons/NavigateBefore\";\r\nimport MuiTooltip from \"@material-ui/core/Tooltip\";\r\n\r\nimport {\r\n  Chart,\r\n  Series,\r\n  CommonSeriesSettings,\r\n  Legend,\r\n  ArgumentAxis,\r\n  ValueAxis,\r\n  Title,\r\n  Tooltip,\r\n  Size,\r\n  Label,\r\n  Font,\r\n  Margin,\r\n  Subtitle,\r\n} from \"devextreme-react/chart\";\r\n\r\nimport { Grid, Typography } from \"@material-ui/core\";\r\nimport { grey } from \"@material-ui/core/colors\";\r\n\r\nimport {\r\n  wrapArgumentAxisLabel,\r\n} from \"helpers/materialHelpers\";\r\nimport { customizeHint } from \"components/ChartComponents\";\r\n\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    container: {\r\n      position: \"relative\",\r\n      // padding: theme.spacing(2),\r\n    },\r\n    chart: {\r\n      overflowX: \"hidden\",\r\n      // padding: theme.spacing(2),\r\n    },\r\n    argumentAxisLabel: {\r\n      fill: \"#767676\",\r\n    },\r\n    button: {\r\n      position: \"absolute\",\r\n      top: \"12px\",\r\n      left: \"18px\",\r\n    },\r\n  })\r\n);\r\n\r\ninterface Props {\r\n  data: IMaterialChartItem[];\r\n}\r\n\r\nconst CategoryChart = (props: Props) => {\r\n  const [chartData, setChartData] = useState<IMaterialChartItem[]>([]);\r\n  const [isFirstLevel, setIsFirstLevel] = useState<boolean>(true);\r\n  const [selectedCategory, setSelectedCategory] = useState<string>(\"\");\r\n  const [chartHeight, setChartHeight] = useState(0);\r\n\r\n  useEffect(() => {\r\n    const parentRows = filterData(\"\");\r\n    setChartData(parentRows);\r\n    setChartHeight((parentRows.length * 30) + 200)\r\n  }, [props.data]);\r\n\r\n  const customizeTooltip = (arg: any) => {\r\n    return {\r\n      text: `<b>${arg.seriesName}</b>\\n ${arg.valueText}`,\r\n    };\r\n  };\r\n\r\n  const onPointClick = (e: any) => {\r\n    if (isFirstLevel) {\r\n      setIsFirstLevel(false);\r\n      setSelectedCategory(e.target.originalArgument);\r\n      setChartData(filterData(e.target.originalArgument));\r\n    }\r\n  };\r\n\r\n  const onDrawn = (e: any) => {\r\n    if (isFirstLevel) {\r\n      // Add pointer cursor to all bar points\r\n      e.element.querySelectorAll(\".dxc-markers rect\").forEach((el: any) => {\r\n        el.style.cursor = \"pointer\";\r\n      });\r\n\r\n      // Add pointer cursor to argument axis labels\r\n      e.element\r\n        .querySelector(\".dxc-arg-elements\")\r\n        .childNodes.forEach((el: any) => {\r\n          el.style.cursor = \"pointer\";\r\n        });\r\n    }\r\n  };\r\n\r\n  const filterData = (name: string) => {\r\n    return props.data.filter(function (item) {\r\n      return item.materialCat === name;\r\n    });\r\n  };\r\n\r\n  const handleBackClick = () => {\r\n    if (!isFirstLevel) {\r\n      setIsFirstLevel(true);\r\n      setSelectedCategory(\"\");\r\n      setChartData(filterData(\"\"));\r\n    }\r\n  };\r\n\r\n  const minHeight = 600;\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.container}>\r\n      <MuiTooltip title='Back'>\r\n        <span>\r\n          <IconButton\r\n            className={classes.button}\r\n            onClick={handleBackClick}\r\n            disabled={isFirstLevel}\r\n          >\r\n            <NavigateBeforeIcon />\r\n          </IconButton>\r\n        </span>\r\n      </MuiTooltip>\r\n      <Chart\r\n        className={classes.chart}\r\n        dataSource={chartData}\r\n        // title={selectedCategory}\r\n        palette='Material'\r\n        rotated={true}\r\n        onPointClick={onPointClick}\r\n        onDrawn={onDrawn}\r\n      >\r\n        {selectedCategory === \"\" ? (\r\n          <Title\r\n            text='Click on a bar to see materials'\r\n            horizontalAlignment='center'\r\n            font={{\r\n              size: 16,\r\n              color: grey[500],\r\n              weight: 400,\r\n            }}\r\n          ></Title>\r\n        ) : (\r\n          <Title\r\n            text={selectedCategory}\r\n            horizontalAlignment='center'\r\n            font={{\r\n              size: 18,\r\n              color: \"black\",\r\n              weight: 500,\r\n              family: 'Roboto, \"Segoe UI Light\", \"Helvetica Neue Light\", \"Segoe UI\", \"Helvetica Neue\", \"Trebuchet MS\", Verdana, sans-serif'\r\n            }}\r\n          ></Title>\r\n        )}\r\n        <Size height={chartHeight > minHeight ? chartHeight : minHeight} />\r\n        <Margin top={10} bottom={10} left={30} right={30} />\r\n        <CommonSeriesSettings\r\n          argumentField='name'\r\n          type='stackedBar'\r\n          barWidth={50}\r\n          hoverMode='allArgumentPoints'\r\n        ></CommonSeriesSettings>\r\n        <Series valueField='A1A3' name='A1-A3' />\r\n        <Series valueField='A4' name='A4' />\r\n        <Series valueField='B4_m' name='B4 (m)' />\r\n        <Series valueField='B4_t' name='B4 (t)' />\r\n        <ValueAxis>\r\n          <Title\r\n            text={\"kgCO2e\"}\r\n            font={{\r\n              size: 14,\r\n            }}\r\n          />\r\n        </ValueAxis>\r\n        <ArgumentAxis>\r\n          <Label customizeText={wrapArgumentAxisLabel} />\r\n        </ArgumentAxis>\r\n        <Legend\r\n          verticalAlignment='bottom'\r\n          horizontalAlignment='center'\r\n          itemTextPosition='top'\r\n          customizeHint={customizeHint}\r\n        />\r\n        <Tooltip\r\n          enabled={true}\r\n          location='edge'\r\n          customizeTooltip={customizeTooltip}\r\n          zIndex={1200}\r\n          arrowLength={6}\r\n          format='fixedPoint'\r\n        />\r\n      </Chart>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CategoryChart;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { IRootState } from \"redux/reducers\";\r\nimport allActions from \"redux/actions\";\r\n\r\nimport {\r\n  Theme,\r\n  createStyles,\r\n  makeStyles,\r\n  withStyles,\r\n  emphasize,\r\n} from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Breadcrumbs from \"@material-ui/core/Breadcrumbs\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormLabel from \"@material-ui/core/FormLabel\";\r\n\r\nimport CategoryTable from \"./CategoryTable\";\r\nimport CategoryChart from \"./CategoryChart\";\r\nimport {\r\n  groupByMaterial,\r\n  createChildRows,\r\n  createMaterialChartData,\r\n  groupByCategory,\r\n  sortByEE,\r\n} from \"helpers/materialHelpers\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    breadCrumbs: {\r\n      marginBottom: theme.spacing(2),\r\n    },\r\n    chart: {\r\n      // height: 600,\r\n      padding: theme.spacing(2),\r\n    },\r\n    elementTable: {\r\n      padding: theme.spacing(2),\r\n    },\r\n  })\r\n);\r\n\r\ninterface Props {\r\n  materials: IMaterialInventory[];\r\n}\r\n\r\nconst CategoryView = (props: Props) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const displayMode = useSelector((state: IRootState) => state.displayMode);\r\n  const materialInventory = useSelector(\r\n    (state: IRootState) => state.materialInventory\r\n  );\r\n\r\n  const [tableData, setTableData] = useState<IMaterialTableRow[]>([]);\r\n  const [chartData, setChartData] = useState<IMaterialChartItem[]>([]);\r\n\r\n  useEffect(() => {\r\n    const groupedMaterials = groupByMaterial(props.materials);\r\n\r\n    const materialChildRows = createMaterialChartData(groupedMaterials);\r\n    const categoryParentRows = groupByCategory(materialChildRows);\r\n    const chartData = materialChildRows.concat(categoryParentRows);\r\n    const sortedChartData = sortByEE(chartData) as IMaterialChartItem[];\r\n\r\n    setTableData(groupedMaterials as IMaterialTableRow[]);\r\n    setChartData(sortedChartData);\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs>\r\n          {displayMode === \"table\" ? (\r\n            <Paper>\r\n              <CategoryTable materials={tableData} />\r\n            </Paper>\r\n          ) : (\r\n            <Paper>\r\n              <CategoryChart data={chartData} />\r\n            </Paper>\r\n          )}\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CategoryView;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { IRootState } from \"redux/reducers\";\r\nimport allActions from \"redux/actions\";\r\nimport { getSimulatedDataFromDb } from \"services/firebase\";\r\n\r\nimport ReactDOM from \"react-dom\";\r\nimport { Theme, createStyles, makeStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormLabel from \"@material-ui/core/FormLabel\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport Skeleton from \"@material-ui/lab/Skeleton\";\r\n\r\nimport BuildingElementsView from \"./BuildingElementsView\";\r\nimport ProductView from \"./ProductView\";\r\nimport CategoryView from \"./CategoryView\";\r\nimport { GroupBy } from \"interfaces/enums\";\r\nimport {\r\n  groupByMaterial,\r\n  mergeSimulatedDataIntoMaterialProducts,\r\n} from \"helpers/materialHelpers\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    formControl: {\r\n      marginRight: theme.spacing(2),\r\n      minWidth: 180,\r\n    },\r\n  })\r\n);\r\n\r\nconst MaterialsContainer = (props: any) => {\r\n  const dispatch = useDispatch();\r\n  const selectedBuildings = useSelector(\r\n    (state: IRootState) => state.selectedBuildings\r\n  );\r\n  const materialInventory = useSelector(\r\n    (state: IRootState) => state.materialInventory\r\n  );\r\n  const isSimulationModeActive = useSelector(\r\n    (state: IRootState) => state.isSimulationModeActive\r\n  );\r\n\r\n  const groupBy = useSelector((state: IRootState) => state.materialsGroupBy);\r\n  const displayMode = useSelector((state: IRootState) => state.displayMode);\r\n\r\n  const [loading, setLoading] = useState(false);\r\n  const [tooltipOpen, setTooltipOpen] = useState(false);\r\n\r\n  const handleSelectChange = (event: React.ChangeEvent<{ value: unknown }>) => {\r\n    dispatch(\r\n      allActions.uiActions.setMaterialsGroupBy(event.target.value as string)\r\n    );\r\n  };\r\n\r\n  const handleRadioButtonChange = (\r\n    event: React.ChangeEvent<HTMLInputElement>\r\n  ) => {\r\n    dispatch(allActions.uiActions.setDisplayMode(event.target.value as string));\r\n  };\r\n\r\n  const handleTooltip = (isOpen: boolean) => {\r\n    setTooltipOpen(isOpen);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (selectedBuildings.length) {\r\n      loadData();\r\n    }\r\n  }, [selectedBuildings]);\r\n\r\n  const loadData = () => {\r\n    const buildingId = selectedBuildings[0].idbuildings;\r\n    const URL = process.env.REACT_APP_API_URI;\r\n    const elementQuery = `${URL}/building_elements/${buildingId}`;\r\n    const inventoryQuery = `${URL}/material_inventory/${buildingId}`;\r\n\r\n    if (!loading) {\r\n      setLoading(true);\r\n      Promise.all([fetch(elementQuery), fetch(inventoryQuery)])\r\n        .then((responses) =>\r\n          Promise.all(responses.map((response) => response.json()))\r\n        )\r\n        .then((data) => {\r\n          getSimulatedDataFromDb(String(buildingId))\r\n            .then((doc) => {\r\n              let simulatedData: ISimulatedData = {};\r\n              if (doc.exists) {\r\n                simulatedData = doc.data() ?? {};\r\n              }\r\n\r\n              const buildingElements = data[0];\r\n              const materialInventory = data[1];\r\n              const materialProducts = groupByMaterial(materialInventory);\r\n              const simulatedMaterialProducts = mergeSimulatedDataIntoMaterialProducts(\r\n                materialProducts as IMaterialTableRow[],\r\n                simulatedData\r\n              );\r\n\r\n              ReactDOM.unstable_batchedUpdates(() => {\r\n                dispatch(\r\n                  allActions.elementAndMaterialActions.setBuildingElements(\r\n                    buildingElements\r\n                  )\r\n                );\r\n                dispatch(\r\n                  allActions.elementAndMaterialActions.setMaterialInventory(\r\n                    materialInventory\r\n                  )\r\n                );\r\n                dispatch(\r\n                  allActions.elementAndMaterialActions.setMaterialProducts(\r\n                    materialProducts\r\n                  )\r\n                );\r\n                dispatch(\r\n                  allActions.elementAndMaterialActions.setSimulatedData(\r\n                    simulatedData\r\n                  )\r\n                );\r\n                dispatch(\r\n                  allActions.elementAndMaterialActions.setSimulatedMaterialProducts(\r\n                    simulatedMaterialProducts\r\n                  )\r\n                );\r\n                setLoading(false);\r\n              });\r\n            })\r\n            .catch((error) => {\r\n              console.log(\"Error getting simulation data:\", error);\r\n              setLoading(false);\r\n            });\r\n        })\r\n        .catch(() => setLoading(false));\r\n    }\r\n    getSimulatedDataFromDb(String(buildingId));\r\n  };\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div>\r\n      <Grid container spacing={3} alignItems='center' justify='space-between'>\r\n        <Grid item>\r\n          <Typography variant='h5' color='textSecondary' gutterBottom>\r\n            Materials\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item>\r\n          <Tooltip\r\n            title='Disable simulation mode to select different grouping'\r\n            // open={tooltipOpen}\r\n            disableFocusListener={!isSimulationModeActive}\r\n            disableHoverListener={!isSimulationModeActive}\r\n            disableTouchListener={!isSimulationModeActive}\r\n          >\r\n            <FormControl className={classes.formControl} variant='outlined'>\r\n              <InputLabel>Group by</InputLabel>\r\n              <Select\r\n                displayEmpty\r\n                value={groupBy}\r\n                label='Group by'\r\n                onChange={handleSelectChange}\r\n                onMouseEnter={() => handleTooltip(true)}\r\n                onMouseLeave={() => handleTooltip(false)}\r\n                onOpen={() => handleTooltip(false)}\r\n              >\r\n                <MenuItem value={GroupBy.Product}>Product</MenuItem>\r\n                <MenuItem\r\n                  value={GroupBy.BuildingElement}\r\n                  disabled={isSimulationModeActive}\r\n                >\r\n                  Building element\r\n                </MenuItem>\r\n                <MenuItem\r\n                  value={GroupBy.Category}\r\n                  disabled={isSimulationModeActive}\r\n                >\r\n                  Category\r\n                </MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n          </Tooltip>\r\n          <FormControl component='fieldset'>\r\n            <FormLabel component='legend' color='secondary'>\r\n              Display mode\r\n            </FormLabel>\r\n            <RadioGroup\r\n              value={displayMode}\r\n              onChange={handleRadioButtonChange}\r\n              row\r\n            >\r\n              <FormControlLabel\r\n                value='table'\r\n                control={<Radio />}\r\n                label='Table'\r\n              />\r\n              <FormControlLabel\r\n                value='chart'\r\n                control={<Radio />}\r\n                label='Chart'\r\n              />\r\n            </RadioGroup>\r\n          </FormControl>\r\n        </Grid>\r\n      </Grid>\r\n      {loading || props.parentIsLoading ? (\r\n        <Skeleton style={{ marginTop: \"65px\" }} variant='rect' height={350} />\r\n      ) : groupBy === GroupBy.BuildingElement ? (\r\n        <BuildingElementsView />\r\n      ) : groupBy === GroupBy.Product ? (\r\n        <ProductView materials={materialInventory} />\r\n      ) : (\r\n        <CategoryView materials={materialInventory} />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MaterialsContainer;\r\n","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { IRootState } from \"redux/reducers\";\r\nimport allActions from \"redux/actions\";\r\n\r\nimport { getKeyValue } from \"get-key-value\";\r\nimport theme from \"styles/theme\";\r\n\r\nimport {\r\n  Theme,\r\n  createStyles,\r\n  makeStyles,\r\n  withStyles,\r\n  WithStyles,\r\n  emphasize,\r\n} from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nimport {\r\n  Chart,\r\n  Series,\r\n  ArgumentAxis,\r\n  CommonSeriesSettings,\r\n  SeriesTemplate,\r\n  ValueAxis,\r\n  Title,\r\n  Tooltip,\r\n  Label,\r\n} from \"devextreme-react/chart\";\r\n\r\nimport { roundTo } from \"components/TableUtilities/SimulationHelpers\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    chart: {\r\n      height: 200,\r\n      padding: theme.spacing(2),\r\n    },\r\n  })\r\n);\r\n\r\nconst SingleBuildingChart = () => {\r\n  const selectedBuildings = useSelector(\r\n    (state: IRootState) => state.selectedBuildings\r\n  );\r\n  const simulatedMaterialProducts = useSelector(\r\n    (state: IRootState) => state.simulatedMaterialProducts\r\n  );\r\n  const isSimulationModeActive = useSelector(\r\n    (state: IRootState) => state.isSimulationModeActive\r\n  );\r\n  const simulatedData = useSelector((state: IRootState) => state.simulatedData);\r\n  const checkedEEMetrics = useSelector((state: IRootState) => state.EEMetric);\r\n\r\n  const [chartData, setChartData] = useState<ISingleChartDataItem[]>([]);\r\n\r\n  useEffect(() => {\r\n    var A1A3: number;\r\n    var A4: number;\r\n    var B4_m: number;\r\n    var B4_t: number;\r\n    var nonSimulatedValues = {\r\n      A1A3: Number(selectedBuildings[0].A1A3) || 0.0,\r\n      A4: Number(selectedBuildings[0].A4) || 0.0,\r\n      B4_m: Number(selectedBuildings[0].B4_m) || 0.0,\r\n      B4_t: Number(selectedBuildings[0].B4_t) || 0.0,\r\n    };\r\n    var simulatedValues = {};\r\n\r\n    if (isSimulationModeActive) {\r\n      A1A3 = isSeriesSimulated(\"A1A3\")\r\n        ? sumMaterialEmissions(\"A1A3\")\r\n        : nonSimulatedValues.A1A3;\r\n      A4 = isSeriesSimulated(\"A4\")\r\n        ? sumMaterialEmissions(\"A4\")\r\n        : nonSimulatedValues.A4;\r\n      B4_m = isSeriesSimulated(\"B4_m\")\r\n        ? sumMaterialEmissions(\"B4_m\")\r\n        : nonSimulatedValues.B4_m;\r\n      B4_t = isSeriesSimulated(\"B4_t\")\r\n        ? sumMaterialEmissions(\"B4_t\")\r\n        : nonSimulatedValues.B4_t;\r\n    } else {\r\n      A1A3 = Number(selectedBuildings[0].A1A3) || 0.0;\r\n      A4 = Number(selectedBuildings[0].A4) || 0.0;\r\n      B4_m = Number(selectedBuildings[0].B4_m) || 0.0;\r\n      B4_t = Number(selectedBuildings[0].B4_t) || 0.0;\r\n    }\r\n\r\n    // Divides by floor area if setting is checked\r\n    if (checkedEEMetrics.perSqM) {\r\n      A1A3 = A1A3 / selectedBuildings[0].floor_area;\r\n      A4 = A4 / selectedBuildings[0].floor_area;\r\n      B4_m = B4_m / selectedBuildings[0].floor_area;\r\n      B4_t = B4_t / selectedBuildings[0].floor_area;\r\n    }\r\n\r\n    // Divides by lifetime year if setting is checked\r\n    if (checkedEEMetrics.perYear) {\r\n      A1A3 = A1A3 / selectedBuildings[0].lifetime;\r\n      A4 = A4 / selectedBuildings[0].lifetime;\r\n      B4_m = B4_m / selectedBuildings[0].lifetime;\r\n      B4_t = B4_t / selectedBuildings[0].lifetime;\r\n    }\r\n\r\n    const chartData: ISingleChartDataItem[] = [\r\n      { lcaPhase: \"A1-A3\", gwp: A1A3 },\r\n      { lcaPhase: \"A4\", gwp: A4 },\r\n      { lcaPhase: \"B4 (m)\", gwp: B4_m },\r\n      { lcaPhase: \"B4 (t)\", gwp: B4_t },\r\n    ];\r\n\r\n    setChartData(chartData);\r\n  }, [selectedBuildings[0], isSimulationModeActive, simulatedData, checkedEEMetrics]);\r\n\r\n  const isSeriesSimulated = (series: string): boolean => {\r\n    return Object.values(simulatedData).some(function (value: any) {\r\n      return series in value;\r\n    });\r\n  };\r\n\r\n  const sumMaterialEmissions = (column: string): number => {\r\n    const sum = simulatedMaterialProducts.reduce(\r\n      (a, b) =>\r\n        a +\r\n        (Number(\r\n          getKeyValue<keyof IMaterialTableParentRow, IMaterialTableParentRow>(\r\n            column as any,\r\n            b\r\n          )\r\n        ) || 0),\r\n      0\r\n    );\r\n    return sum;\r\n  };\r\n\r\n  const onDrawn = (e: any) => {\r\n    if (isSimulationModeActive) {\r\n      // Color emission series if contains simulated values\r\n      e.element\r\n        .querySelector(\".dxc-arg-elements\")\r\n        .childNodes.forEach((el: any) => {\r\n          const fieldName = labelToFieldname(el.innerHTML);\r\n          if (isSeriesSimulated(fieldName)) {\r\n            el.style.fill = theme.palette.simulated.main;\r\n            el.style.fontWeight = 500;\r\n          }\r\n        });\r\n    }\r\n  };\r\n\r\n  const labelToFieldname = (seriesLabel: string) => {\r\n    switch (seriesLabel) {\r\n      case \"A1-A3\":\r\n        return \"A1A3\";\r\n      case \"A4\":\r\n        return \"A4\";\r\n      case \"B4 (m)\":\r\n        return \"B4_m\";\r\n      case \"B4 (t)\":\r\n        return \"B4_t\";\r\n      default:\r\n        return \"\";\r\n    }\r\n  };\r\n\r\n  var axisTitle = \"kgCO2e\";\r\n  if (checkedEEMetrics.perSqM) axisTitle += \"/m\\xB2\";\r\n  if (checkedEEMetrics.perYear) axisTitle += \"/year\";\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Paper>\r\n      <Chart\r\n        className={classes.chart}\r\n        dataSource={chartData}\r\n        palette='Material'\r\n        onDrawn={onDrawn}\r\n      >\r\n        <CommonSeriesSettings\r\n          argumentField='lcaPhase'\r\n          valueField='gwp'\r\n          type='bar'\r\n          showInLegend={false}\r\n          ignoreEmptyPoints={true}\r\n        />\r\n        {/* <Series\r\n                    valueField=\"gwp\"\r\n                    argumentField=\"lcaPhase\"\r\n                    name=\"Embodied emissions\"\r\n                    type=\"bar\"\r\n                    showInLegend={false}\r\n                /> */}\r\n        <ValueAxis>\r\n          <Title\r\n            text={axisTitle}\r\n            font={{\r\n              size: 12,\r\n            }}\r\n          />\r\n        </ValueAxis>\r\n        <ArgumentAxis>\r\n          {/* <Label\r\n            font={{\r\n              color: isSimulationModeActive\r\n                ? theme.palette.simulated.main\r\n                : \"#767676\",\r\n            }}\r\n          /> */}\r\n        </ArgumentAxis>\r\n        <SeriesTemplate nameField='lcaPhase' />\r\n        <Tooltip\r\n          enabled={true}\r\n          zIndex={1200}\r\n          arrowLength={6}\r\n          format='fixedPoint'\r\n          interactive\r\n        />\r\n      </Chart>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default SingleBuildingChart;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { IRootState } from \"redux/reducers\";\r\nimport allActions from \"redux/actions\";\r\n\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport { withStyles, Theme, createStyles } from \"@material-ui/core/styles\";\r\nimport { purple } from \"@material-ui/core/colors\";\r\n\r\nimport { GroupBy } from \"interfaces/enums\";\r\nimport theme from \"styles/theme\";\r\n\r\nconst CustomSwitch = withStyles({\r\n  switchBase: {\r\n    // color: theme.palette.simulated.light,\r\n    \"&$checked\": {\r\n      color: theme.palette.simulated.main,\r\n    },\r\n    \"&$checked + $track\": {\r\n      backgroundColor: theme.palette.simulated.main,\r\n    },\r\n  },\r\n  checked: {},\r\n  track: {},\r\n})(Switch);\r\n\r\nconst SimulationModeSwitch = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const isSimulationModeActive = useSelector(\r\n    (state: IRootState) => state.isSimulationModeActive\r\n  );\r\n  const materialsGroupBy = useSelector(\r\n    (state: IRootState) => state.materialsGroupBy\r\n  );\r\n\r\n  const handleSimulationModeChanged = () => {\r\n    dispatch(allActions.uiActions.toggleSimulationMode());\r\n    if (materialsGroupBy !== GroupBy.Product) {\r\n      dispatch(allActions.uiActions.setMaterialsGroupBy(GroupBy.Product));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <FormControlLabel\r\n      control={\r\n        <CustomSwitch\r\n          checked={isSimulationModeActive}\r\n          onChange={handleSimulationModeChanged}\r\n          name='simulationChecked'\r\n          color='primary'\r\n        />\r\n      }\r\n      label='Simulation mode'\r\n    />\r\n  );\r\n};\r\n\r\nexport default SimulationModeSwitch;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { IRootState } from \"redux/reducers\";\r\nimport allActions from \"redux/actions\";\r\n\r\nimport {\r\n  createStyles,\r\n  Theme,\r\n  withStyles,\r\n  WithStyles,\r\n  makeStyles,\r\n} from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormGroup from \"@material-ui/core/FormGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\n\r\nimport MaterialsContainer from \"components/MaterialsContainer\";\r\nimport SingleBuildingChart from \"./SingleBuildingChart\";\r\nimport SimulationModeSwitch from \"./SimulationModeSwitch\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    buildingSection: {\r\n      marginBottom: theme.spacing(2),\r\n    },\r\n    divider: {\r\n      marginBottom: theme.spacing(2),\r\n    },\r\n    elementSection: {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n    buildingInfoLabels: {\r\n      fontWeight: \"bold\",\r\n    },\r\n    content: {\r\n      // margin: theme.spacing(1),\r\n      padding: theme.spacing(2),\r\n      // height: '600px'\r\n    },\r\n  })\r\n);\r\n\r\nconst initialBuildingState: IBuilding = {\r\n  idbuildings: 0,\r\n  building_identifier: \"\",\r\n  building_name: \"\",\r\n  project: \"\",\r\n  country: \"\",\r\n  city: \"\",\r\n  typology: \"\",\r\n  construction_type: \"\",\r\n  lifetime: 0,\r\n  floor_area: 0,\r\n  A1A3: null,\r\n  A4: null,\r\n  B4_m: null,\r\n  B4_t: null,\r\n};\r\n\r\nfunction SingleBuildingView() {\r\n  const dispatch = useDispatch();\r\n\r\n  const selectedBuildings = useSelector(\r\n    (state: IRootState) => state.selectedBuildings\r\n  );\r\n\r\n  const isSimulationModeChecked = useSelector(\r\n    (state: IRootState) => state.isSimulationModeActive\r\n  );\r\n\r\n  const handleSimulationModeChanged = () => {\r\n    dispatch(allActions.uiActions.toggleSimulationMode());\r\n  };\r\n\r\n  const {\r\n    building_identifier,\r\n    building_name,\r\n    project,\r\n    typology,\r\n    construction_type,\r\n    floor_area,\r\n    A1A3,\r\n    A4,\r\n    B4_m,\r\n    B4_t,\r\n  } = selectedBuildings[0];\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.content}>\r\n      <Grid container spacing={3} className={classes.buildingSection}>\r\n        <Grid item container alignItems='flex-start' justify='space-between'>\r\n          <Grid item xs={8}>\r\n            <Typography variant='h4' color='textPrimary'>\r\n              {building_name}\r\n            </Typography>\r\n            <Typography variant='subtitle1' color='textSecondary' gutterBottom>\r\n              {building_identifier}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item>\r\n            <SimulationModeSwitch />\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          <Typography variant='h5' color='textSecondary' gutterBottom>\r\n            General info\r\n          </Typography>\r\n          <div>\r\n            <TextField\r\n              key={project || \"project\"}\r\n              inputProps={{\r\n                readOnly: true,\r\n                disabled: true,\r\n              }}\r\n              InputProps={{ disableUnderline: true }}\r\n              fullWidth={true}\r\n              label='Project'\r\n              name='project'\r\n              margin='dense'\r\n              defaultValue={project || \"nil\"}\r\n            />\r\n            <TextField\r\n              key={typology || \"typology\"}\r\n              inputProps={{\r\n                readOnly: true,\r\n                disabled: true,\r\n              }}\r\n              InputProps={{ disableUnderline: true }}\r\n              fullWidth={true}\r\n              label='Typology'\r\n              name='typology'\r\n              margin='dense'\r\n              defaultValue={typology || \"nil\"}\r\n            />\r\n            <TextField\r\n              key={construction_type || \"c_type\"}\r\n              inputProps={{\r\n                readOnly: true,\r\n                disabled: true,\r\n              }}\r\n              InputProps={{ disableUnderline: true }}\r\n              fullWidth={true}\r\n              label='Construction type'\r\n              name='construction_type'\r\n              margin='dense'\r\n              defaultValue={construction_type || \"nil\"}\r\n            />\r\n            <TextField\r\n              key={floor_area || \"f_area\"}\r\n              inputProps={{\r\n                readOnly: true,\r\n                disabled: true,\r\n              }}\r\n              InputProps={{ disableUnderline: true }}\r\n              fullWidth={true}\r\n              label='Floor area'\r\n              name='floor_area'\r\n              margin='dense'\r\n              defaultValue={floor_area + \" m\\xB2\" || \"nil\"}\r\n            />\r\n          </div>\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          <Typography variant='h5' color='textSecondary' gutterBottom>\r\n            Embodied emissions\r\n          </Typography>\r\n          <SingleBuildingChart />\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Grid container spacing={3}>\r\n        <Grid item xs>\r\n          <Divider variant='middle' light={true} className={classes.divider} />\r\n          <MaterialsContainer />\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SingleBuildingView;\r\n","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { IRootState } from \"redux/reducers\";\r\nimport allActions from \"redux/actions\";\r\n\r\nimport {\r\n  Theme,\r\n  createStyles,\r\n  makeStyles,\r\n  withStyles,\r\n  WithStyles,\r\n  emphasize,\r\n} from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nimport {\r\n  Chart,\r\n  Series,\r\n  CommonSeriesSettings,\r\n  Legend,\r\n  ValueAxis,\r\n  ArgumentAxis,\r\n  Title,\r\n  Tooltip,\r\n  Size,\r\n  Label,\r\n} from \"devextreme-react/chart\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    chart: {\r\n      padding: theme.spacing(2),\r\n    },\r\n  })\r\n);\r\n\r\nconst GWPCompareChart = () => {\r\n  const selectedBuildings = useSelector(\r\n    (state: IRootState) => state.selectedBuildings\r\n  );\r\n  const checkedEEMetrics = useSelector((state: IRootState) => state.EEMetric);\r\n\r\n  const [chartData, setChartData] = useState<ICompareChartDataItem[]>([]);\r\n\r\n  useEffect(() => {\r\n    const chartData: ICompareChartDataItem[] = [];\r\n\r\n    selectedBuildings.forEach((building) => {\r\n      var A1A3: number = Number(building.A1A3) || 0.0;\r\n      var A4: number = Number(building.A4) || 0.0;\r\n      var B4_m: number = Number(building.B4_m) || 0.0;\r\n      var B4_t: number = Number(building.B4_t) || 0.0;\r\n\r\n      // Divides by floor area if setting is checked\r\n      if (checkedEEMetrics.perSqM) {\r\n        A1A3 = A1A3 / building.floor_area;\r\n        A4 = A4 / building.floor_area;\r\n        B4_m = B4_m / building.floor_area;\r\n        B4_t = B4_t / building.floor_area;\r\n      }\r\n\r\n      // Divides by lifetime year if setting is checked\r\n      if (checkedEEMetrics.perYear) {\r\n        A1A3 = A1A3 / building.lifetime;\r\n        A4 = A4 / building.lifetime;\r\n        B4_m = B4_m / building.lifetime;\r\n        B4_t = B4_t / building.lifetime;\r\n      }\r\n\r\n      const dataEntry: ICompareChartDataItem = {\r\n        name: building.building_name,\r\n        identifier: building.building_identifier,\r\n        a1a3: A1A3,\r\n        a4: A4,\r\n        b4m: B4_m,\r\n        b4t: B4_t,\r\n      };\r\n\r\n      chartData.push(dataEntry);\r\n    });\r\n\r\n    setChartData(chartData.reverse());\r\n  }, [selectedBuildings, checkedEEMetrics]);\r\n\r\n  const customizeTooltip = (arg: any) => {\r\n    return {\r\n      text: `<b>${arg.seriesName}</b>\\n ${arg.valueText}`,\r\n    };\r\n  };\r\n\r\n  // Wraps label over two lines if longer than 15 characters\r\n  const customizeArgumentAxisLabel = (data: any) => {\r\n    if (data.value.length > 17) {\r\n      const wordArray = data.value.split(\" \");\r\n      if (wordArray.length > 2) {\r\n        const firstLine = wordArray.slice(0, 2).join(\" \");\r\n        const secondLine = wordArray.slice(2).join(\" \");\r\n        return firstLine + \"\\n\" + secondLine;\r\n      } else {\r\n        return wordArray.join(\"\\n\");\r\n      }\r\n    }\r\n\r\n    return data.value;\r\n  };\r\n\r\n  var axisTitle = \"kgCO2e\";\r\n  if (checkedEEMetrics.perSqM) axisTitle += \"/m\\xB2\";\r\n  if (checkedEEMetrics.perYear) axisTitle += \"/year\";\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Paper>\r\n      <Chart\r\n        className={classes.chart}\r\n        dataSource={chartData}\r\n        palette='Material'\r\n        rotated\r\n      >\r\n        <Size height={500} />\r\n        <CommonSeriesSettings\r\n          argumentField='name'\r\n          type='stackedBar'\r\n          barWidth={60}\r\n        />\r\n        <Series valueField='a1a3' name='A1-A3' />\r\n        <Series valueField='a4' name='A4' />\r\n        <Series valueField='b4m' name='B4 (m)' />\r\n        <Series valueField='b4t' name='B4 (t)' />\r\n        <ValueAxis>\r\n          <Title\r\n            text={axisTitle}\r\n            font={{\r\n              size: 14,\r\n            }}\r\n          />\r\n        </ValueAxis>\r\n        <ArgumentAxis>\r\n          <Label customizeText={customizeArgumentAxisLabel} />\r\n        </ArgumentAxis>\r\n        <Legend\r\n          verticalAlignment='bottom'\r\n          horizontalAlignment='center'\r\n          itemTextPosition='top'\r\n        />\r\n        <Tooltip\r\n          enabled={true}\r\n          location='edge'\r\n          customizeTooltip={customizeTooltip}\r\n          zIndex={1200}\r\n          arrowLength={6}\r\n          format='fixedPoint'\r\n        />\r\n      </Chart>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default GWPCompareChart;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { IRootState } from \"redux/reducers\";\r\nimport allActions from \"redux/actions\";\r\n\r\nimport {\r\n  createStyles,\r\n  Theme,\r\n  withStyles,\r\n  WithStyles,\r\n  makeStyles,\r\n} from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nimport GWPCompareChart from \"./GWPCompareChart\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    buildingSection: {\r\n      marginBottom: theme.spacing(2),\r\n    },\r\n    divider: {\r\n      marginBottom: theme.spacing(2),\r\n    },\r\n    elementSection: {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n    content: {\r\n      padding: theme.spacing(2),\r\n    },\r\n    formControl: {\r\n      margin: theme.spacing(3),\r\n    },\r\n  })\r\n);\r\n\r\nconst MultipleBuildingsView = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const selectedBuildings = useSelector(\r\n    (state: IRootState) => state.selectedBuildings\r\n  );\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.content}>\r\n      <Grid container>\r\n        <Grid item xs={12}>\r\n          <Typography variant='h5' color='textSecondary' gutterBottom>\r\n            Embodied emissions\r\n          </Typography>\r\n          <GWPCompareChart />\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MultipleBuildingsView;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { IRootState } from \"redux/reducers\";\r\nimport allActions from \"redux/actions\";\r\n\r\nimport {\r\n  createStyles,\r\n  Theme,\r\n  withStyles,\r\n  WithStyles,\r\n  makeStyles,\r\n} from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport SingleBuildingView from \"./SingleBuildingView\";\r\nimport MultipleBuildingsView from \"./MultipleBuildingsView\";\r\n\r\nconst drawerWidth = \"50vw\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    buildingSection: {\r\n      marginBottom: theme.spacing(2),\r\n    },\r\n    divider: {\r\n      marginBottom: theme.spacing(2),\r\n    },\r\n    elementSection: {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n    buildingInfoLabels: {\r\n      fontWeight: \"bold\",\r\n    },\r\n    noSelectionContainer: {\r\n      height: \"100vh\",\r\n    },\r\n    drawer: {\r\n      width: drawerWidth,\r\n      flexShrink: 0,\r\n    },\r\n    drawerPaper: {\r\n      // padding: theme.spacing(2),\r\n      // marginBottom: theme.spacing(2),\r\n      width: drawerWidth,\r\n      overflowY: \"scroll\"\r\n    },\r\n    content: {\r\n      // margin: theme.spacing(1),\r\n      padding: theme.spacing(2),\r\n      // height: '600px'\r\n    },\r\n  })\r\n);\r\n\r\nconst BuildingDetails = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const selectedBuildings = useSelector(\r\n    (state: IRootState) => state.selectedBuildings\r\n  );\r\n  const canSelectMultipleBuildings = useSelector(\r\n    (state: IRootState) => state.canSelectMultipleBuildings\r\n  );\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Drawer\r\n      className={classes.drawer}\r\n      variant='permanent'\r\n      classes={{\r\n        paper: classes.drawerPaper,\r\n      }}\r\n      anchor='right'\r\n    >\r\n      {selectedBuildings.length ? (\r\n        canSelectMultipleBuildings ? (\r\n          <MultipleBuildingsView />\r\n        ) : (\r\n          <SingleBuildingView />\r\n        )\r\n      ) : (\r\n        <Grid\r\n          container\r\n          justify='center'\r\n          alignItems='center'\r\n          className={classes.noSelectionContainer}\r\n        >\r\n          <Grid item xs={12}>\r\n            <Typography variant='h5' color='textSecondary' align='center'>\r\n              Select a building\r\n            </Typography>\r\n          </Grid>\r\n        </Grid>\r\n      )}\r\n    </Drawer>\r\n  );\r\n};\r\n\r\nexport default BuildingDetails;\r\n","import React, { useEffect, useState, ReactText } from \"react\";\r\nimport HelpStrings from \"./HelpStrings\";\r\n\r\nimport {\r\n  createStyles,\r\n  Theme,\r\n  withStyles,\r\n  WithStyles,\r\n} from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport HelpOutlineIcon from \"@material-ui/icons/HelpOutline\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport MuiDialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport MuiDialogContent from \"@material-ui/core/DialogContent\";\r\nimport MuiDialogActions from \"@material-ui/core/DialogActions\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\n\r\nconst styles = (theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      margin: 0,\r\n      padding: theme.spacing(2),\r\n    },\r\n    closeButton: {\r\n      position: \"absolute\",\r\n      right: theme.spacing(1),\r\n      top: theme.spacing(1),\r\n      color: theme.palette.grey[500],\r\n    },\r\n  });\r\n\r\nexport interface DialogTitleProps extends WithStyles<typeof styles> {\r\n  id: string;\r\n  children: React.ReactNode;\r\n  onClose: () => void;\r\n}\r\n\r\nconst DialogTitle = withStyles(styles)((props: DialogTitleProps) => {\r\n  const { children, classes, onClose, ...other } = props;\r\n  return (\r\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n      <Typography variant='h6'>{children}</Typography>\r\n      {onClose ? (\r\n        <IconButton\r\n          aria-label='close'\r\n          className={classes.closeButton}\r\n          onClick={onClose}\r\n        >\r\n          <CloseIcon />\r\n        </IconButton>\r\n      ) : null}\r\n    </MuiDialogTitle>\r\n  );\r\n});\r\n\r\nconst DialogContent = withStyles((theme: Theme) => ({\r\n  root: {\r\n    padding: theme.spacing(2),\r\n  },\r\n}))(MuiDialogContent);\r\n\r\nconst DialogActions = withStyles((theme: Theme) => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(1),\r\n  },\r\n}))(MuiDialogActions);\r\n\r\nconst terminologyDictionary = [\r\n  { term: \"A1-A3\", definition: \"Material production\" },\r\n  {\r\n    term: \"A4\",\r\n    definition: \"Transportation of materials to the building site\",\r\n  },\r\n  {\r\n    term: \"B4 (m)\",\r\n    definition: \"Material replacements throughout the study lifetime period\",\r\n  },\r\n  { term: \"B4 (t)\", definition: \"Transportation of material replacements\" },\r\n];\r\n\r\nfunction HelpButton() {\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Tooltip title='Help'>\r\n        <IconButton aria-label='help' onClick={handleClickOpen}>\r\n          <HelpOutlineIcon fontSize='large' />\r\n        </IconButton>\r\n      </Tooltip>\r\n      <Dialog onClose={handleClose} open={open}>\r\n        <DialogTitle id='customized-dialog-title' onClose={handleClose}>\r\n          Help\r\n        </DialogTitle>\r\n        <DialogContent dividers>\r\n          <Typography variant='h6'>How to use</Typography>\r\n          <Typography>\r\n            <ul>\r\n              <li>\r\n                Click on a row to see more details about the building, including\r\n                its <b>materials</b> and <b>building elements</b>.\r\n              </li>\r\n              <li>\r\n                Turn on <b>simulation mode</b> (<i>top-right in building details</i>) to edit a building's materials\r\n                and see how the changes affect the rest of the building.\r\n              </li>\r\n              <li>\r\n                Select multiple rows to <b>compare</b> the emission values of\r\n                different buildings.\r\n              </li>\r\n            </ul>\r\n          </Typography>\r\n          <Typography variant='h6'>Terminology</Typography>\r\n          <List>\r\n            {terminologyDictionary.map((entry, index) => (\r\n              <ListItem divider={index < terminologyDictionary.length - 1}>\r\n                <Grid container spacing={1} alignItems='center'>\r\n                  <Grid item xs={2}>\r\n                    <Typography variant='body1'>\r\n                      <b>{entry.term}</b>\r\n                    </Typography>\r\n                  </Grid>\r\n                  <Grid item xs={10}>\r\n                    <Typography variant='body1'>{entry.definition}</Typography>\r\n                  </Grid>\r\n                </Grid>\r\n              </ListItem>\r\n            ))}\r\n          </List>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button autoFocus onClick={handleClose} color='primary'>\r\n            OK\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n\r\n/* \r\ninterface Props {\r\n  iconSize?: \"small\" | \"inherit\" | \"large\" | \"default\" | undefined;\r\n  alertContentId: string;\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    container: {\r\n      width: \"55vw\",\r\n      marginTop: theme.spacing(2),\r\n    },\r\n    mainContent: {\r\n      width: \"90%\",\r\n    },\r\n    titleBar: {\r\n      marginBottom: theme.spacing(2),\r\n    },\r\n  })\r\n);\r\n\r\nfunction HelpButton(props: Props) {\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div>\r\n      <Tooltip title='Help'>\r\n        <IconButton aria-label='help' onClick={handleClickOpen}>\r\n          <HelpOutlineIcon fontSize={props.iconSize} />\r\n        </IconButton>\r\n      </Tooltip>\r\n      <Dialog open={open} onClose={handleClose}>\r\n        <DialogTitle>How to use</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            {HelpStrings.helpDict[props.alertContentId]}\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color='primary' autoFocus>\r\n            Ok\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n} */\r\n\r\nexport default HelpButton;\r\n","import React, { useEffect, useState, ReactText } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport allActions from \"redux/actions\";\r\nimport { IRootState } from \"redux/reducers\";\r\n\r\nimport { Theme, createStyles, makeStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport SettingsIcon from \"@material-ui/icons/Settings\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport FormLabel from \"@material-ui/core/FormLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormGroup from \"@material-ui/core/FormGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\n\r\ninterface Props {\r\n  iconSize?: \"small\" | \"inherit\" | \"large\" | \"default\" | undefined;\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      width: \"100%\",\r\n      maxWidth: 360,\r\n      minWidth: 220,\r\n    },\r\n    content: {\r\n      width: 350,\r\n      padding: theme.spacing(2),\r\n    },\r\n    formControl: {\r\n      marginTop: theme.spacing(3),\r\n    },\r\n  })\r\n);\r\n\r\nfunction SettingsButton(props: Props) {\r\n  const dispatch = useDispatch();\r\n  const checkedEEMetrics = useSelector((state: IRootState) => state.EEMetric);\r\n\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleEEMetricChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    dispatch(\r\n      allActions.settingsActions.setEEMetric({\r\n        name: event.target.name,\r\n        checked: event.target.checked,\r\n      })\r\n    );\r\n  };\r\n\r\n  const { perSqM, perYear } = checkedEEMetrics;\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div>\r\n      <Tooltip title='Settings'>\r\n        <IconButton aria-label='help' onClick={handleClickOpen}>\r\n          <SettingsIcon fontSize={props.iconSize} />\r\n        </IconButton>\r\n      </Tooltip>\r\n      <Drawer anchor='right' open={open} onClose={handleClose}>\r\n        <Grid container className={classes.content}>\r\n          <Typography variant='h4' color='textPrimary' gutterBottom>\r\n            Settings\r\n          </Typography>\r\n          <List\r\n            subheader={<ListSubheader>Embodied emissions metric</ListSubheader>}\r\n            className={classes.root}\r\n          >\r\n            <ListItem>\r\n              <ListItemText id='switch-list-label-sqm' primary={\"Per m\\xB2\"} />\r\n              <ListItemSecondaryAction>\r\n                <Switch\r\n                  edge='end'\r\n                  checked={perSqM}\r\n                  onChange={handleEEMetricChange}\r\n                  name='perSqM'\r\n                />\r\n              </ListItemSecondaryAction>\r\n            </ListItem>\r\n            <ListItem>\r\n              <ListItemText id='switch-list-label-year' primary='Per year' />\r\n              <ListItemSecondaryAction>\r\n                <Switch\r\n                  edge='end'\r\n                  checked={perYear}\r\n                  onChange={handleEEMetricChange}\r\n                  name='perYear'\r\n                />\r\n              </ListItemSecondaryAction>\r\n            </ListItem>\r\n          </List>\r\n        </Grid>\r\n        {/* <Grid container spacing={3} className={classes.content}>\r\n          <Grid item xs={12}>\r\n            <Typography variant='h4' color='textPrimary' gutterBottom>\r\n              Settings\r\n            </Typography>\r\n            <FormControl component='fieldset' className={classes.formControl}>\r\n              <FormLabel component='legend'>\r\n                Embodied Emissions Metric\r\n              </FormLabel>\r\n              <FormGroup>\r\n                <FormControlLabel\r\n                  control={\r\n                    <Checkbox\r\n                      checked={perSqM}\r\n                      onChange={handleEEMetricChange}\r\n                      name='perSqM'\r\n                    />\r\n                  }\r\n                  label={\"Per m\\xB2\"}\r\n                />\r\n                <FormControlLabel\r\n                  control={\r\n                    <Checkbox\r\n                      checked={perYear}\r\n                      onChange={handleEEMetricChange}\r\n                      name='perYear'\r\n                    />\r\n                  }\r\n                  label='Per year'\r\n                />\r\n              </FormGroup>\r\n            </FormControl>\r\n          </Grid>\r\n        </Grid> */}\r\n      </Drawer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SettingsButton;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport allActions from \"redux/actions\";\r\nimport { IRootState } from \"redux/reducers\";\r\n\r\nimport \"devextreme/dist/css/dx.common.css\";\r\nimport \"devextreme/dist/css/dx.material.blue.light.css\";\r\n\r\nimport { Theme, createStyles, makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nimport BuildingsTable from \"../BuildingsTable\";\r\nimport BuildingDetails from \"../BuildingDetails\";\r\nimport HelpButton from \"../HelpButton\";\r\nimport SettingsButton from \"../SettingsButton\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    container: {\r\n      width: \"50vw\",\r\n      marginTop: theme.spacing(2),\r\n    },\r\n    mainContent: {\r\n      width: \"90%\",\r\n    },\r\n    titleBar: {\r\n      marginBottom: theme.spacing(2),\r\n    },\r\n  })\r\n);\r\n\r\nfunction HomePage() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Container maxWidth='xl'>\r\n      <Grid\r\n        container\r\n        spacing={3}\r\n        justify='center'\r\n        className={classes.container}\r\n      >\r\n        <Grid container className={classes.mainContent}>\r\n          <Grid\r\n            container\r\n            item\r\n            alignItems='center'\r\n            justify='space-around'\r\n            spacing={2}\r\n            className={classes.titleBar}\r\n          >\r\n            <Grid item xs={10}>\r\n              <Typography variant='h2'>bLCAd Tool - GUI</Typography>\r\n            </Grid>\r\n\r\n            <Grid item xs={1}>\r\n              <HelpButton />\r\n            </Grid>\r\n            <Grid item xs={1}>\r\n              <SettingsButton iconSize='large' />\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <Grid item xs={12}>\r\n            <BuildingsTable />\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <BuildingDetails />\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default HomePage;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport MuiLink from \"@material-ui/core/Link\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\n\r\nimport { Router, RouteComponentProps, Link } from \"@reach/router\";\r\nimport firebase from \"firebase/app\";\r\nimport { auth } from \"services/firebase\";\r\nimport allActions from \"redux/actions\";\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant='body2' color='textSecondary' align='center'>\r\n      {\"Copyright © \"}\r\n      <MuiLink color='inherit' href='https://github.com/ericvel'>\r\n        Eric Veliyulin\r\n      </MuiLink>{\" \"}\r\n      {new Date().getFullYear()}\r\n      {\".\"}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nfunction SignIn() {\r\n  const dispatch = useDispatch();\r\n\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  const signInWithEmailAndPasswordHandler = (\r\n    event: any,\r\n    email: string,\r\n    password: string\r\n  ) => {\r\n    event.preventDefault();\r\n\r\n    firebase\r\n      .auth()\r\n      .setPersistence(firebase.auth.Auth.Persistence.SESSION)\r\n      .then(() => {\r\n        // Existing and future Auth states are now persisted in the current\r\n        // session only. Closing the window would clear any existing state even\r\n        // if a user forgets to sign out.\r\n        // ...\r\n        // New sign-in will be persisted with session persistence.\r\n        return firebase.auth().signInWithEmailAndPassword(email, password);\r\n      })\r\n      .catch((error) => {\r\n        switch (error.code) {\r\n          case \"auth/invalid-email\":\r\n            setError(\"The email address is invalid\");\r\n            break;\r\n          case \"auth/wrong-password\": {\r\n            setError(\"The password is invalid\");\r\n            break;\r\n          }\r\n          case \"auth/user-not-found\": {\r\n            setError(\"The user does not exist\");\r\n            break;\r\n          }\r\n        }\r\n        console.error(\"Error signing in: \", error);\r\n      });\r\n  };\r\n\r\n  const onChangeHandler = (event: any) => {\r\n    const { name, value } = event.currentTarget;\r\n\r\n    if (name === \"email\") {\r\n      setEmail(value);\r\n    } else if (name === \"password\") {\r\n      setPassword(value);\r\n    }\r\n  };\r\n\r\n  function handleSubmit(event: any) {\r\n    event.preventDefault();\r\n  }\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Container component='main' maxWidth='xs'>\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component='h1' variant='h5'>\r\n          Sign in\r\n        </Typography>\r\n        {error !== null && (\r\n          <Typography color='error'>Error: {error}</Typography>\r\n        )}\r\n        <form className={classes.form} noValidate onSubmit={handleSubmit}>\r\n          <TextField\r\n            variant='outlined'\r\n            margin='normal'\r\n            required\r\n            fullWidth\r\n            id='email'\r\n            label='Email Address'\r\n            name='email'\r\n            autoComplete='email'\r\n            autoFocus\r\n            onChange={(event) => onChangeHandler(event)}\r\n          />\r\n          <TextField\r\n            variant='outlined'\r\n            margin='normal'\r\n            required\r\n            fullWidth\r\n            name='password'\r\n            label='Password'\r\n            type='password'\r\n            id='password'\r\n            autoComplete='current-password'\r\n            onChange={(event) => onChangeHandler(event)}\r\n          />\r\n          <Button\r\n            type='submit'\r\n            fullWidth\r\n            variant='contained'\r\n            color='primary'\r\n            className={classes.submit}\r\n            onClick={(event) => {\r\n              signInWithEmailAndPasswordHandler(event, email, password);\r\n            }}\r\n          >\r\n            Sign In\r\n          </Button>\r\n        </form>\r\n      </div>\r\n      <Box mt={8}>\r\n        <Copyright />\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default SignIn;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport allActions from \"redux/actions\";\r\nimport { IRootState } from \"redux/reducers\";\r\n\r\nimport firebase from \"firebase/app\";\r\n\r\nimport \"devextreme/dist/css/dx.common.css\";\r\nimport \"devextreme/dist/css/dx.material.blue.light.css\";\r\n\r\nimport { ThemeProvider } from \"@material-ui/core/styles\";\r\nimport theme from \"styles/theme\";\r\n\r\nimport HomePage from \"components/HomePage\";\r\nimport SignIn from \"components/SignIn\";\r\n\r\nfunction App() {\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n\r\n  firebase.auth().onAuthStateChanged(function (user) {\r\n    if (user) {\r\n      // User is signed in.\r\n      setIsAuthenticated(true);\r\n    } else {\r\n      // No user is signed in.\r\n      setIsAuthenticated(false);\r\n    }\r\n  });\r\n\r\n  return isAuthenticated ? (\r\n    <ThemeProvider theme={theme}>\r\n      <HomePage />\r\n    </ThemeProvider>\r\n  ) : (\r\n    <SignIn />\r\n  );\r\n  /*  <ThemeProvider theme={theme}>\r\n      {isAuthenticated ? <HomePage /> : <SignIn />}\r\n    </ThemeProvider> */\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            \"This web app is being served cache-first by a service \" +\r\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === \"installed\") {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                \"New content is available and will be used when all \" +\r\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log(\"Content is cached for offline use.\");\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"Error during service worker registration:\", error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { \"Service-Worker\": \"script\" },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get(\"content-type\");\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        \"No internet connection found. App is running in offline mode.\"\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister();\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import {\r\n  BuildingElementActionTypes,\r\n  MaterialInventoryActionTypes,\r\n  SelectBuildingElementAction,\r\n  ElementRouteActionTypes,\r\n  HoverBuildingElementActionTypes,\r\n  SimulatedDataActionTypes,\r\n  MaterialProductsActionTypes,\r\n  SimulatedMaterialProductsActionTypes,\r\n  SET_BUILDING_ELEMENTS,\r\n  SET_MATERIAL_INVENTORY,\r\n  SELECT_BUILDING_ELEMENT,\r\n  ADD_TO_ELEMENT_ROUTE,\r\n  SET_BUILDING_ELEMENT_ROUTE,\r\n  HOVER_BUILDING_ELEMENT,\r\n  STOP_HOVER_BUILDING_ELEMENT,\r\n  SET_SIMULATED_DATA,\r\n  SET_MATERIAL_PRODUCTS,\r\n  SET_SIMULATED_MATERIAL_PRODUCTS,\r\n} from \"../actions/types\";\r\n\r\nexport const buildingElements = (\r\n  state: IBuildingElement[] = [],\r\n  action: BuildingElementActionTypes\r\n) => {\r\n  switch (action.type) {\r\n    case SET_BUILDING_ELEMENTS:\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const materialInventory = (\r\n  state: IMaterialInventory[] = [],\r\n  action: MaterialInventoryActionTypes\r\n) => {\r\n  switch (action.type) {\r\n    case SET_MATERIAL_INVENTORY:\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst initialSelectedElementState: IBuildingElement = {\r\n  idbuilding_elements: 0,\r\n  idlevels: 0,\r\n  name: \"\",\r\n  hierarchy: 0,\r\n  A1A3: null,\r\n  A4: null,\r\n  B4_m: null,\r\n  B4_t: null,\r\n  idparent: null,\r\n};\r\n\r\nexport const selectedBuildingElement = (\r\n  state: IBuildingElement = initialSelectedElementState,\r\n  action: SelectBuildingElementAction\r\n) => {\r\n  switch (action.type) {\r\n    case SELECT_BUILDING_ELEMENT:\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const buildingElementRoute = (\r\n  state: IBuildingElement[] = [],\r\n  action: ElementRouteActionTypes\r\n) => {\r\n  switch (action.type) {\r\n    case ADD_TO_ELEMENT_ROUTE:\r\n      return [...state, action.payload];\r\n    case SET_BUILDING_ELEMENT_ROUTE:\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const hoveredBuildingElement = (\r\n  state: number | null = null,\r\n  action: HoverBuildingElementActionTypes\r\n) => {\r\n  switch (action.type) {\r\n    case HOVER_BUILDING_ELEMENT:\r\n      return action.payload;\r\n    case STOP_HOVER_BUILDING_ELEMENT:\r\n      return null;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const simulatedData = (\r\n  state: ISimulatedData = {},\r\n  action: SimulatedDataActionTypes\r\n) => {\r\n  switch (action.type) {\r\n    case SET_SIMULATED_DATA:\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const materialProducts = (\r\n  state: IMaterialTableParentRow[] = [],\r\n  action: MaterialProductsActionTypes\r\n) => {\r\n  switch (action.type) {\r\n    case SET_MATERIAL_PRODUCTS:\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const simulatedMaterialProducts = (\r\n  state: IMaterialTableParentRow[] = [],\r\n  action: SimulatedMaterialProductsActionTypes\r\n) => {\r\n  switch (action.type) {\r\n    case SET_SIMULATED_MATERIAL_PRODUCTS:\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { SET_EE_METRIC, EEMetricActionTypes } from \"../actions/types\";\r\n\r\nconst initialEEMetric: IEEMetric = {\r\n  perSqM: false,\r\n  perYear: false,\r\n};\r\n\r\nexport const EEMetric = (\r\n  state = initialEEMetric,\r\n  action: EEMetricActionTypes\r\n) => {\r\n  switch (action.type) {\r\n    case SET_EE_METRIC:\r\n      return { ...state, [action.name]: action.checked };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport { buildings, selectedBuildings } from \"./buildings\";\r\nimport { isCompareDialogOpen } from \"./flags\";\r\nimport {\r\n  buildingElements,\r\n  materialInventory,\r\n  selectedBuildingElement,\r\n  buildingElementRoute,\r\n  hoveredBuildingElement,\r\n  simulatedData,\r\n  materialProducts,\r\n  simulatedMaterialProducts,\r\n} from \"./elementsAndMaterials\";\r\nimport {\r\n  materialsGroupBy,\r\n  displayMode,\r\n  canSelectMultipleBuildings,\r\n  isSimulationModeActive,\r\n} from \"./ui\";\r\nimport { EEMetric } from \"./settings\";\r\nimport { currentUser } from \"./user\";\r\n\r\nconst rootReducer = combineReducers({\r\n  buildings,\r\n  selectedBuildings,\r\n  isCompareDialogOpen,\r\n  buildingElements,\r\n  materialInventory,\r\n  selectedBuildingElement,\r\n  buildingElementRoute,\r\n  hoveredBuildingElement,\r\n  materialsGroupBy,\r\n  displayMode,\r\n  canSelectMultipleBuildings,\r\n  isSimulationModeActive,\r\n  EEMetric,\r\n  simulatedData,\r\n  currentUser,\r\n  materialProducts,\r\n  simulatedMaterialProducts,\r\n});\r\n\r\nexport default rootReducer;\r\n\r\nexport type IRootState = ReturnType<typeof rootReducer>;\r\n","import {\r\n  BuildingActionTypes,\r\n  SET_BUILDINGS,\r\n  SelectedBuildingActionTypes,\r\n  SELECT_BUILDINGS,\r\n  DESELECT_ALL_BUILDINGS,\r\n} from \"../actions/types\";\r\n\r\nexport const buildings = (\r\n  state: IBuilding[] = [],\r\n  action: BuildingActionTypes\r\n) => {\r\n  switch (action.type) {\r\n    case SET_BUILDINGS:\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const selectedBuildings = (\r\n  state: IBuilding[] = [],\r\n  action: SelectedBuildingActionTypes\r\n) => {\r\n  switch (action.type) {\r\n    case SELECT_BUILDINGS:\r\n      return action.payload;\r\n    case DESELECT_ALL_BUILDINGS:\r\n      return [];\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  ToggleCompareDialogOpenAction,\r\n  TOGGLE_COMPARE_DIALOG_OPEN,\r\n} from \"../actions/types\";\r\n\r\nexport const isCompareDialogOpen = (\r\n  state = false,\r\n  action: ToggleCompareDialogOpenAction\r\n) => {\r\n  switch (action.type) {\r\n    case TOGGLE_COMPARE_DIALOG_OPEN:\r\n      return !state;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  SET_MATERIALS_GROUP_BY,\r\n  MaterialsGroupByActionTypes,\r\n  SET_DISPLAY_MODE,\r\n  DisplayModeActionTypes,\r\n  TOGGLE_CAN_SELECT_MULTIPLE,\r\n  CanSelectMultipleActionTypes,\r\n  TOGGLE_SIMULATION_MODE,\r\n  SimulationModeActionTypes\r\n} from \"../actions/types\";\r\n\r\nimport { GroupBy } from \"interfaces/enums\";\r\n \r\nexport const materialsGroupBy = (\r\n  state = GroupBy.Product,\r\n  action: MaterialsGroupByActionTypes\r\n) => {\r\n  switch (action.type) {\r\n    case SET_MATERIALS_GROUP_BY:\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const displayMode = (\r\n  state = \"table\",\r\n  action: DisplayModeActionTypes\r\n) => {\r\n  switch (action.type) {\r\n    case SET_DISPLAY_MODE:\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const canSelectMultipleBuildings = (\r\n  state = false,\r\n  action: CanSelectMultipleActionTypes\r\n) => {\r\n  switch (action.type) {\r\n    case TOGGLE_CAN_SELECT_MULTIPLE:\r\n      return !state;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const isSimulationModeActive = (\r\n  state = false,\r\n  action: SimulationModeActionTypes\r\n) => {\r\n  switch (action.type) {\r\n    case TOGGLE_SIMULATION_MODE:\r\n      return !state;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import firebase from \"firebase/app\";\r\nimport { SET_CURRENT_USER, CurrentUserActionTypes } from \"../actions/types\";\r\n\r\nexport const currentUser = (\r\n  state: firebase.User | null = null,\r\n  action: CurrentUserActionTypes\r\n) => {\r\n  switch (action.type) {\r\n    case SET_CURRENT_USER:\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./components/App\";\r\nimport SignIn from \"./components/SignIn\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport \"fontsource-roboto\";\r\n\r\nimport { Provider } from \"react-redux\";\r\nimport { createStore, applyMiddleware } from \"redux\";\r\nimport rootReducer from \"./redux/reducers\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport HomePage from \"components/HomePage\";\r\nrequire(\"dotenv\").config();\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ &&\r\n    window.__REDUX_DEVTOOLS_EXTENSION__()\r\n);\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n    {/* <HomePage /> */}\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}